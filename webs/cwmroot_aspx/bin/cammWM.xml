<?xml version="1.0"?>
<doc>
<assembly>
<name>
cammWM
</name>
</assembly>
<members>
<member name="M:CompuMaster.camm.WebManager.WMSystem.sprintf(System.String,System.Object[])">
	<summary>
     Replaces placeholders in a string by defined values
 </summary>
	<param name="message">The string with the placeholders</param>
	<param name="values">One or more values which should be used for replacement</param>
	<returns>The new resulting string</returns>
	<remarks>
		<para>Supported special character combinations are <code>\t</code>, <code>\r</code>, <code>\n</code>, <code>\\</code>, <code>\[</code></para>
		<para>Supported placeholders are <code>[*]</code>, <code>[n:1..9]</code></para>
	</remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.UserFilter.PropertyName">
	<summary>
     The name of a user property which shall be investigated
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.UserFilter.SearchMethods.All">
	<summary>
     No filtering
 </summary>
	<remarks>
     Only add this property to the list of queried properties to allow returnage or sorting on this value
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.UserFilter.SearchMethods.Exist">
	<summary>
     Value must exist (not DBNull)
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.UserFilter.SearchMethods.IsEmpty">
	<summary>
     Value is DBNull, respecitvely in case of a string it must be empty
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.UserFilter.SearchMethods.MatchExactly">
	<summary>
     Value is equal to the searched string (regulary case in-sensitive)
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.UserFilter.SearchMethods.MatchAtTheBeginning">
	<summary>
     Value begins with the searched string (LIKE search)
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.UserFilter.SearchMethods.NotExist">
	<summary>
     Value isn't allowed to exist (is DBNull)
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.UserFilter.SearchMethods.NoMatch">
	<summary>
     All users which haven't got any of these strings
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.UserFilter.SearchMethods">
	<summary>
     Available search methods for filtering of users by their defined properties
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.UserFilter.SearchMethod">
	<summary>
     The search method
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.UserFilter.MatchExpressions">
	<summary>
     A list of expression to search for matching search methods
 </summary>
	<remarks>
     The elements of this list will be queried by a logical Or _
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.UserFilter.UsersTableColumnName">
	<summary>
     Name of the column for this property name - if it is saved there
 </summary>
	<remarks>
     Keep it empty to search in table Log_Users
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.UserFilter.UsersTableColumnType">
	<summary>
     The data type in the users table if it's not a string
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.UserFilter">
	<summary>
     Filter credentials for searching for users
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.UserSortArgument.ColumnName">
	<summary>
     The name of the column which shall be sorted
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.UserSortArgument.Direction">
	<summary>
     ASC or DESC
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.UserSortArgument">
	<summary>
     Sort arguments for the user search
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SearchUsers(CompuMaster.camm.WebManager.WMSystem.UserFilter[],CompuMaster.camm.WebManager.WMSystem.UserSortArgument[])">
	<summary>
     Search for some users
 </summary>
	<param name="userFilter">An array of filter settings</param>
	<param name="sortByPropertyName">The name of the properties to sort the resulting users by</param>
	<remarks>
		<para>The property names will be either recognized as a system property or used for search in the list of additional flags.</para>
		<para>Property names of system properties of user profiles</para>
		<list>
			<item>id</item>
			<item>company</item>
			<item>loginname</item>
			<item>emailaddress</item>
			<item>firstname</item>
			<item>lastname</item>
			<item>academictitle</item>
			<item>street</item>
			<item>zipcode</item>
			<item>location</item>
			<item>state</item>
			<item>country</item>
			<item>preferredlanguage1id</item>
			<item>preferredlanguage2id</item>
			<item>preferredlanguage3id</item>
			<item>nameaddition</item>
			<item>logindisabled</item>
			<item>loginlockedtill</item>
			<item>accesslevelid</item>
		</list>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SearchUserData(CompuMaster.camm.WebManager.WMSystem.UserFilter[],CompuMaster.camm.WebManager.WMSystem.UserSortArgument[])">
	<summary>
     Search for some users and collect some data on them
 </summary>
	<param name="userFilter">An array of filter settings</param>
	<param name="sortByPropertyName">The name of the properties to sort the resulting users by</param>
	<remarks>
		<para>Always returned is the ID value of the user</para>
		<para>The property names will be either recognized as a system property or used for search in the list of additional flags.</para>
		<para>Property names of system properties of user profiles</para>
		<list>
			<item>id</item>
			<item>company</item>
			<item>loginname</item>
			<item>emailaddress</item>
			<item>firstname</item>
			<item>lastname</item>
			<item>academictitle</item>
			<item>street</item>
			<item>zipcode</item>
			<item>location</item>
			<item>state</item>
			<item>country</item>
			<item>preferredlanguage1id</item>
			<item>preferredlanguage2id</item>
			<item>preferredlanguage3id</item>
			<item>nameaddition</item>
			<item>logindisabled</item>
			<item>loginlockedtill</item>
			<item>accesslevelid</item>
		</list>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SearchUserData(System.String[],CompuMaster.camm.WebManager.WMSystem.UserFilter[],CompuMaster.camm.WebManager.WMSystem.UserSortArgument[])">
	<summary>
     Search for some users and collect some data on them
 </summary>
	<param name="returnedProperties">An array of property names which shall be returned</param>
	<param name="userFilter">An array of filter settings</param>
	<param name="sortByPropertyName">The name of the properties to sort the resulting users by</param>
	<remarks>
		<para>Always returned is the ID value of the user</para>
		<para>The property names will be either recognized as a system property or used for search in the list of additional flags.</para>
		<para>Please note that the returned data table might contain the columns in a different order than you requested them by the returnedProperties</para>
		<para>Property names of system properties of user profiles</para>
		<list>
			<item>id</item>
			<item>company</item>
			<item>loginname</item>
			<item>emailaddress</item>
			<item>firstname</item>
			<item>lastname</item>
			<item>academictitle</item>
			<item>street</item>
			<item>zipcode</item>
			<item>location</item>
			<item>state</item>
			<item>country</item>
			<item>preferredlanguage1id</item>
			<item>preferredlanguage2id</item>
			<item>preferredlanguage3id</item>
			<item>nameaddition</item>
			<item>logindisabled</item>
			<item>loginlockedtill</item>
			<item>accesslevelid</item>
		</list>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.#ctor(System.Int32,System.String,System.String,System.String,CompuMaster.camm.WebManager.WMSystem.Sex,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32,CompuMaster.camm.WebManager.WMSystem@,System.String,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Create a new user profile
 </summary>
	<param name="UserID">Should be null (Nothing in VisualBasic)</param>
	<param name="LoginName">Login name of the user</param>
	<param name="EMailAddress">e-mail address</param>
	<param name="Company">The user's company</param>
	<param name="Sex">The user's gender</param>
	<param name="NameAddition">An additional word in front of the name, for example the "de" in "de Vries"</param>
	<param name="FirstName">The first name</param>
	<param name="LastName">The family name</param>
	<param name="AcademicTitle">An academic title, for example "Dr." or "Prof."</param>
	<param name="Street">The street of the user's postal address</param>
	<param name="ZipCode">The zip code of the user's postal address</param>
	<param name="City">The name of the city</param>
	<param name="State">In some countries (USA, Canada, etc.) you also have to identify the state</param>
	<param name="Country">The country</param>
	<param name="PreferredLanguage1ID">The ID of the user's favorite language</param>
	<param name="PreferredLanguage2ID">The ID of the first alternative language</param>
	<param name="PreferredLanguage3ID">The ID of the second alternative language</param>
	<param name="LoginDisabled">Disable the possiblity to login with this account</param>
	<param name="LoginLockedTemporary">Lock the possibility to login for a short period of time</param>
	<param name="LoginDeleted">Mark this account as deleted</param>
	<param name="AccessLevelID">The access level ID of the user (set to Integer.MinValue to decide based on the default access location of the current server environment)</param>
	<param name="WebManager">The current instance of camm Web-Manager</param>
	<param name="ExternalAccount">An external account relation for single-sign-on purposes</param>
	<param name="AdditionalFlags">A collection of additional flags which are saved in the user's profile</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.#ctor(System.Int32,System.String,System.String,System.String,CompuMaster.camm.WebManager.WMSystem.Sex,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean,CompuMaster.camm.WebManager.WMSystem@,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Create a new user profile
 </summary>
	<param name="UserID">Should be null (Nothing in VisualBasic)</param>
	<param name="LoginName">Login name of the user</param>
	<param name="EMailAddress">e-mail address</param>
	<param name="Company">The user's company</param>
	<param name="Sex">The user's gender</param>
	<param name="NameAddition">An additional word in front of the name, for example the "de" in "de Vries"</param>
	<param name="FirstName">The first name</param>
	<param name="LastName">The family name</param>
	<param name="AcademicTitle">An academic title, for example "Dr." or "Prof."</param>
	<param name="Street">The street of the user's postal address</param>
	<param name="ZipCode">The zip code of the user's postal address</param>
	<param name="City">The name of the city</param>
	<param name="State">In some countries (USA, Canada, etc.) you also have to identify the state</param>
	<param name="Country">The country</param>
	<param name="PreferredLanguage1ID">The ID of the user's favorite language</param>
	<param name="PreferredLanguage2ID">The ID of the first alternative language</param>
	<param name="PreferredLanguage3ID">The ID of the second alternative language</param>
	<param name="LoginDisabled">Disable the possiblity to login with this account</param>
	<param name="LoginLockedTemporary">Lock the possibility to login for a short period of time</param>
	<param name="LoginDeleted">Mark this account as deleted</param>
	<param name="AccessLevelID">The access level ID of the user (set to Integer.MinValue to decide based on the default access location of the current server environment)</param>
	<param name="__reserved">Obsolete parameter</param>
	<param name="WebManager">The current instance of camm Web-Manager</param>
	<param name="AdditionalFlags">A collection of additional flags which are saved in the user's profile</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.#ctor(System.Int32,CompuMaster.camm.WebManager.WMSystem@,System.Boolean)">
	<summary>
     Load a user profile from the system database
 </summary>
	<param name="UserID">The user ID of the profile to be loaded</param>
	<param name="WebManager">The current instance of camm Web-Manager</param>
	<param name="SearchForDeletedAccountsAsWell">Search for deleted accounts, too</param>
	<remarks>
     If you've loaded an already deleted user profile, you may miss the following information:
     <list>
			<item>Access level</item>
			<item>Login disabled</item>
			<item>LoginLockedTemporary</item>
		</list>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.#ctor(System.Int64,System.String,System.String,System.Boolean,System.String,CompuMaster.camm.WebManager.WMSystem.Sex,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32,CompuMaster.camm.WebManager.WMSystem@,System.String,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Create a new user profile
 </summary>
	<param name="UserID">Should be null (Nothing in VisualBasic)</param>
	<param name="LoginName">Login name of the user</param>
	<param name="EMailAddress">e-mail address</param>
	<param name="AutomaticLogonAllowedByMachineToMachineCommunication">Not yet supported, use false to prevent the throwing of an exception</param>
	<param name="Company">The user's company</param>
	<param name="Sex">The user's gender</param>
	<param name="NameAddition">An additional word in front of the name, for example the "de" in "de Vries"</param>
	<param name="FirstName">The first name</param>
	<param name="LastName">The family name</param>
	<param name="AcademicTitle">An academic title, for example "Dr." or "Prof."</param>
	<param name="Street">The street of the user's postal address</param>
	<param name="ZipCode">The zip code of the user's postal address</param>
	<param name="City">The name of the city</param>
	<param name="State">In some countries (USA, Canada, etc.) you also have to identify the state</param>
	<param name="Country">The country</param>
	<param name="PreferredLanguage1ID">The ID of the user's favorite language</param>
	<param name="PreferredLanguage2ID">The ID of the first alternative language</param>
	<param name="PreferredLanguage3ID">The ID of the second alternative language</param>
	<param name="LoginDisabled">Disable the possiblity to login with this account</param>
	<param name="LoginLockedTemporary">Lock the possibility to login for a short period of time</param>
	<param name="LoginDeleted">Mark this account as deleted</param>
	<param name="AccessLevelID">The access level ID of the user (set to Integer.MinValue to decide based on the default access location of the current server environment)</param>
	<param name="WebManager">The current instance of camm Web-Manager</param>
	<param name="ExternalAccount">An external account relation for single-sign-on purposes</param>
	<param name="AdditionalFlags">A collection of additional flags which are saved in the user's profile</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.#ctor(System.Int64,CompuMaster.camm.WebManager.WMSystem@,System.Boolean)">
	<summary>
     Load a user profile from the system database
 </summary>
	<param name="UserID">The user ID of the profile to be loaded</param>
	<param name="WebManager">The current instance of camm Web-Manager</param>
	<param name="SearchForDeletedAccountsAsWell">Search for deleted accounts, too</param>
	<remarks>
     If you've loaded an already deleted user profile, you may miss the following information:
     <list>
			<item>Access level</item>
			<item>Login disabled</item>
			<item>LoginLockedTemporary</item>
		</list>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.#ctor(System.Data.DataRow,CompuMaster.camm.WebManager.WMSystem)">
	<summary>
     Assign properties of a user profile from a table row of the system database
 </summary>
	<param name="dataRow">The row from the data table containing the full user data</param>
	<param name="webManager">The current instance of camm Web-Manager</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.ReadInitAuthorizationsDoneValue">
	<summary>
 Returns a value from the database which indicates whether the authorizations for this user have already been set
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.ReadInitAuthorizationsDoneValue(System.Data.SqlClient.SqlConnection,System.Int64)">
	<summary>
 Returns a value from the database which indicates whether the authorizations for this user have already been set
 </summary>
	<param name="dbConnection"></param>
	<param name="userID"></param>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.IsSystemUser">
	<summary>
     Is this user a system user (anonymous, public, etc.)
 </summary>
	<value></value>
	<seealso cref="T:CompuMaster.camm.WebManager.WMSystem.SpecialUsers"/>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SuggestedFreeLoginNames">
	<summary>
     Suggest some login names for a new user account based on the already given data
 </summary>
	<returns>An array of free and available loginnames with at least 1 possible loginname</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SuggestedFreeLoginNames(System.String[])">
	<summary>
     Suggest some login names for a new user account based on the already given data
 </summary>
	<param name="favorites">Favorites for suggested file names</param>
	<returns>An array of free and available loginnames with at least 1 possible loginname</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SuggestedFreeLoginNamesValidation(System.Collections.ArrayList,System.String)">
	<summary>
     Ensure that the suggestion is acceptable as well as unique for the result list 
 </summary>
	<param name="list">The result list where the validated value shall be added</param>
	<param name="name">A loginname suggestion</param>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.AutomaticLogonAllowedByMachineToMachineCommunication">
	<summary>
     Is an automated logon procedure allowed for this account
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.ReloadFullUserData">
	<summary>
     In some circumstances, it might make sense to reload the data
 </summary>
	<remarks>
     If you loaded multiple user information objects with method System_GetUserInfos, it is recommended to first reload the data before starting update (because that method does a quick-load and the reload will be triggered internally, but may be after you already changed first fields; so your changes would be lost)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.ReadCompleteUserInformation(System.Boolean)">
	<summary>
     Read all the account data from database
 </summary>
	<param name="SearchForDeletedAccountsAsWell">Also load data of users who have been deleted in the past</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.TestForPassword(System.String)">
	<summary>
     Verify if a given value matches the current password
 </summary>
	<param name="password">A password which shall be verified</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.ValidatePassword(System.String)">
	<summary>
     Verify if a given value matches the current password
 </summary>
	<param name="password">A password which shall be verified</param>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.IDLong">
	<summary>
     The account ID
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.ID">
	<summary>
     The account ID
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SetNewUserID(System.Int64)">
	<summary>
     Set the user ID for a new registered user
 </summary>
	<param name="ID"></param>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.LoginName">
	<summary>
     The login name of the user
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.AccountAuthorizationsAlreadySet">
	<summary>
     Indicate wether the user has already got an e-mail notification that he has got his first priviledges and/or memberships assigned
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.EMailAddress">
	<summary>
     The required e-mail address where all important messages will be sent to
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.FaxNumber">
	<summary>
     The fax number
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.PhoneNumber">
	<summary>
     The phone number
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.MobileNumber">
	<summary>
     The mobile number
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.IsImpersonationUser">
	<summary>
 Indicate a user account solely for the purpose of impersonation for test and development
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.Position">
	<summary>
     The position in the company the user is working for
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.FirstName">
	<summary>
     The user's first name
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.Company">
	<summary>
     The company title 
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.LastName">
	<summary>
     The surname of the user
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.FullName">
	<summary>
     The full name of an user, e. g. "Dr. Adam van Vrede")
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SalutationNameOnly">
	<summary>
     The salutation name, e. g. "Dr. van Vrede" or "Vrede"
 </summary>
	<remarks>
 If the last name is not available, this function returns null (Nothing in VisualBasic).
 This method doesn't rely on gender information.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.CloneWithoutRelationships(System.String,CompuMaster.camm.WebManager.WMSystem.Sex,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 Create a clone of this user account incl. all additional flags but without any relation data, saving required
 </summary>
	<param name="newLoginName"></param>
	<param name="newGender"></param>
	<param name="newAcademicTitle"></param>
	<param name="newFirstName"></param>
	<param name="newNameAddition"></param>
	<param name="newLastName"></param>
	<param name="newEmailAddress"></param>
	<returns>Additional flags "ComesFrom" and "Motivation" will be set to value "Account cloned by Admin[...]"</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.CloneWithoutRelationships(System.String,CompuMaster.camm.WebManager.WMSystem.Sex,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
	<summary>
 Create a clone of this user account incl. all additional flags but without any relation data, saving required
 </summary>
	<param name="newLoginName"></param>
	<param name="newGender"></param>
	<param name="newAcademicTitle"></param>
	<param name="newFirstName"></param>
	<param name="newNameAddition"></param>
	<param name="newLastName"></param>
	<param name="newEmailAddress"></param>
	<param name="cloneAllAdditionalFlags">True to copy all additional flags, False to not copy</param>
	<returns>Additional flags "ComesFrom" and "Motivation" will be set to value "Account cloned by Admin[...]"</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.CloneWithoutRelationships(System.String,CompuMaster.camm.WebManager.WMSystem.Sex,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
	<summary>
 Create a clone of this user account incl. all additional flags but without any relation data, saving required
 </summary>
	<param name="newLoginName"></param>
	<param name="newGender"></param>
	<param name="newAcademicTitle"></param>
	<param name="newFirstName"></param>
	<param name="newNameAddition"></param>
	<param name="newLastName"></param>
	<param name="newEmailAddress"></param>
	<param name="cloneAdditionalFlags">Key names of additional flags which shall be cloned</param>
	<returns>Additional flags "ComesFrom" and "Motivation" will be set to value "Account cloned by Admin[...]"</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.CloneWithoutRelationshipsBaseData(System.String,CompuMaster.camm.WebManager.WMSystem.Sex,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 Create a clone of this user account incl. all additional flags but without any relation data, saving required
 </summary>
	<param name="newLoginName"></param>
	<param name="newGender"></param>
	<param name="newAcademicTitle"></param>
	<param name="newFirstName"></param>
	<param name="newNameAddition"></param>
	<param name="newLastName"></param>
	<param name="newEmailAddress"></param>
	<returns>Additional flags must be copied in another step</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.CloneRelations(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
 Clone memberships and authorization to the new user
 </summary>
	<param name="targetUser">An existing user account that shall get a copy of related data</param>
	<remarks>Existing relations won't be dropped, but extended</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Clone(System.String,CompuMaster.camm.WebManager.WMSystem.Sex,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 Create a clone of a user account inclusive additional flags, memberships and authorizations
 </summary>
	<param name="newLoginName">The login name for the new user</param>
	<param name="newGender">The gender for the new user</param>
	<param name="newAcademicTitle">The academic title for the new user</param>
	<param name="newFirstName">The first name for the new user</param>
	<param name="newNameAddition">The name addition for the new user</param>
	<param name="newLastName">The family name for the new user</param>
	<param name="newEmailAddress">The e-mail adress for the new user</param>
	<returns>The cloned user account (which is already saved in the database)</returns>
	<remarks>
 The password will be auto-generated.
 Exceptions may be thrown e. g. in case of already existing login name or invalid password (strength)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Clone(System.String,CompuMaster.camm.WebManager.WMSystem.Sex,System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 Create a clone of a user account inclusive additional flags, memberships and authorizations
 </summary>
	<param name="newLoginName">The login name for the new user</param>
	<param name="newGender">The gender for the new user</param>
	<param name="newAcademicTitle">The academic title for the new user</param>
	<param name="newFirstName">The first name for the new user</param>
	<param name="newNameAddition">The name addition for the new user</param>
	<param name="newLastName">The family name for the new user</param>
	<param name="newEmailAddress">The e-mail adress for the new user</param>
	<param name="newPassword">The password for the new user</param>
	<returns>The cloned user account (which is already saved in the database)</returns>
	<remarks>
 Exceptions may be thrown e. g. in case of already existing login name or invalid password (strength)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SaveAdditionalFlag(System.String,System.String)">
	<summary>
 Quickly save the flag name and value and assign it to the current user profile, too
 </summary>
	<remarks>Ideal for saving single values quickly</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Save">
	<summary>
     Save this user information object with the default notifications
 </summary>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Save(CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
     Save this user information object
 </summary>
	<param name="notifications">A notifications class which shall be used for messages to the user</param>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Save(CompuMaster.camm.WebManager.WMNotifications)">
	<summary>
     Save this user information object
 </summary>
	<param name="Notifications">A notifications class which shall be used for messages to the user</param>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Save(CompuMaster.camm.WebManager.WMNotifications,System.String)">
	<summary>
     Save this user information object
 </summary>
	<param name="notifications">A notifications class which shall be used for messages to the user</param>
	<param name="newPassword">The new password for the user</param>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Save(CompuMaster.camm.WebManager.WMNotifications,System.String,System.Boolean)">
	<summary>
     Save this user information object
 </summary>
	<param name="notifications">A notifications class which shall be used for messages to the user</param>
	<param name="newPassword">The new password for the user</param>
	<param name="suppressAllNotifications">Never send any notification mails</param>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Save(CompuMaster.camm.WebManager.WMNotifications,System.String,System.Boolean,System.Boolean)">
	<summary>
     Save this user information object
 </summary>
	<param name="notifications">A notifications class which shall be used for messages to the user</param>
	<param name="newPassword">The new password for the user</param>
	<param name="suppressUserNotifications">Never send any notification mails to the user</param>
	<param name="suppressSecurityAdminNotifications">Never send any notification mails to the security admins</param>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Save(CompuMaster.camm.WebManager.Notifications.INotifications,System.String)">
	<summary>
     Save this user information object
 </summary>
	<param name="notifications">A notifications class which shall be used for messages to the user</param>
	<param name="newPassword">The new password for the user</param>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Save(CompuMaster.camm.WebManager.Notifications.INotifications,System.String,System.Boolean)">
	<summary>
     Save this user information object
 </summary>
	<param name="notifications">A notifications class which shall be used for messages to the user</param>
	<param name="newPassword">The new password for the user</param>
	<param name="suppressAllNotifications">Never send any notification mails</param>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Save(CompuMaster.camm.WebManager.Notifications.INotifications,System.String,System.Boolean,System.Boolean)">
	<summary>
     Save this user information object
 </summary>
	<param name="notifications">A notifications class which shall be used for messages to the user</param>
	<param name="newPassword">The new password for the user</param>
	<param name="suppressUserNotifications">Never send any notification mails to the user</param>
	<param name="suppressSecurityAdminNotifications">Never send any notification mails to the security admins</param>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Save(System.String)">
	<summary>
     Save this user information object with the default notifications
 </summary>
	<param name="newPassword">The new password for the user</param>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Save(System.Boolean)">
	<summary>
     Save this user information object with the default notifications
 </summary>
	<param name="suppressAllNotifications">Never send any notification mails</param>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Save(System.Boolean,System.Boolean)">
	<summary>
     Save this user information object with the default notifications
 </summary>
	<param name="suppressUserNotifications">Never send any notification mails to the user</param>
	<param name="suppressSecurityAdminNotifications">Never send any notification mails to the security admins</param>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Save(System.String,System.Boolean)">
	<summary>
     Save this user information object with the default notifications
 </summary>
	<param name="newPassword">The new password for the user</param>
	<param name="suppressNotifications">Never send any notification mails</param>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Save(System.String,System.Boolean,System.Boolean)">
	<summary>
     Save this user information object with the default notifications
 </summary>
	<param name="newPassword">The new password for the user</param>
	<param name="suppressUserNotifications">Never send any notification mails to the user</param>
	<param name="suppressSecurityAdminNotifications">Never send any notification mails to the security admins</param>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Validate(CompuMaster.camm.WebManager.WMSystem.UserInformation.ValidationItem,System.Boolean)">
	<summary>
 Validate user profile data and password complexity
 </summary>
	<param name="checks">Kind of validation - but All won't check for password complexity requirements until new password has been specified</param>
	<param name="throwExceptions">True for throwing exception with details on first issue, False for suppressing exceptions and to just return the boolean result</param>
	<returns>True for successful validation, False for failed validation</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Validate(CompuMaster.camm.WebManager.WMSystem.UserInformation.ValidationItem,System.Boolean,System.String)">
	<summary>
 Validate user profile data and password complexity
 </summary>
	<param name="checks">Kind of validation</param>
	<param name="throwExceptions">True for throwing exception with details on first issue, False for suppressing exceptions and to just return the boolean result</param>
	<param name="newPassword">If a new password has to be set, this argument is required, otherwise no password complexity check will be done</param>
	<returns>True for successful validation, False for failed validation</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Validate(CompuMaster.camm.WebManager.WMSystem.UserInformation.ValidationItem,System.String)">
	<summary>
 Validate user profile data and password complexity
 </summary>
	<param name="checks">Kind of validation</param>
	<param name="newPassword">If a new password has to be set, this argument is required, otherwise no password complexity check will be done</param>
	<exception cref="T:CompuMaster.camm.WebManager.WMSystem.UserInformation.FieldLimitedToAllowedValuesException">A field is limited to its defined values only</exception>
	<exception cref="T:CompuMaster.camm.WebManager.FlagValidation.RequiredFlagException">A security object requires an additional flag</exception>
	<exception cref="T:CompuMaster.camm.WebManager.RequiredFieldException">A security object authorized for the user requires the existance of an additional flag</exception>
	<exception cref="T:CompuMaster.camm.WebManager.PasswordRequiredException">A password must be specified to validate for the password complexity</exception>
	<exception cref="T:CompuMaster.camm.WebManager.WMSystem.UserInformation.PasswordComplexityException">The password doesn't match the complexity requirement for the user's access level</exception>
	<exception cref="T:CompuMaster.camm.WebManager.UserInfoConflictingUniqueKeysException">Unique keys already exist</exception>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SetUserPassword_Internal(System.String,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
     Set a new password for an user account and send required notification messages
 </summary>
	<param name="newPassword">A new password</param>
	<param name="notificationProvider">An instance of a NotificationProvider class which handles the distribution of all required mails</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SetUserPassword_Internal(System.String,System.Boolean)">
	<summary>
     Set new password for an user account (without further activities like mails)
 </summary>
	<param name="newPassword">A new password</param>
	<param name="doNotLogSuccess">True to</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Save_Internal(System.String@,CompuMaster.camm.WebManager.Notifications.INotifications,System.Boolean,System.Boolean)">
	<summary>
     Save changes to a user information object 
 </summary>
	<param name="newPassword">A new password</param>
	<param name="notifications">The notifications for sending appropriate information to the user</param>
	<param name="suppressUserNotifications">False sends e-mails regulary, true disables all user notifications</param>
	<param name="suppressSecurityAdminNotifications">False sends e-mails regulary, true disables all admin notifications</param>
	<returns>The ID of that user profile that has been saved</returns>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SetPassword(System.String)">
	<summary>
     Set a new password for an user account and sends required notification messages
 </summary>
	<param name="newPassword">A new password</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SetPassword(System.String,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
     Set a new password for an user account and sends required notification messages
 </summary>
	<param name="newPassword">A new password</param>
	<param name="notificationProvider">An instance of a NotificationProvider class which handles the distribution of all required mails</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SetPassword(System.String,System.Boolean)">
	<summary>
     Set a new password for an user account and sends required notification messages
 </summary>
	<param name="newPassword">A new password</param>
	<param name="suppressNotifications">True disables all mail transfer, false sends the configured notification message</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.Salutation">
	<summary>
     The general salutation for a person, e. g. "Mr. Bell" or "Ms. Dr. van Vrede" or (if gender is undefined) "Jonathan Taylor" or (if gender is a group) an empty string
 </summary>
	<returns>Empty string in case of gender type group of persons</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SalutationMrOrMs">
	<summary>
     The simple salutation for a person, "Mr. " or "Ms. "
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SalutationInMails">
	<summary>
     The salutation for mail purposes, e. g. "Dear Mr. van Vrede, " or "Dear Mr. Dr. van Vrede, " or (if gender is undefined) "Dear Dr. Heribert van Vrede, " or (if gender is a group) "Dear Sirs, "
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SalutationUnformal">
	<summary>
     The salutation for mail purposes, e. g. "Hello Mr. Bell, " or "Hello Ms. Dr. van Vrede, " or (if gender is undefined) "Hello Dr. Heribert van Vrede, " or (if gender is group) "Hello together, "
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SalutationUnformalWithFirstName">
	<summary>
     The salutation for mail purposes, e. g. "Hello Roger, " or "Hello Claire, " or (if gender is group) "Hello together, "
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.ResolveSalutationTextModule(System.String)">
	<summary>
 Replace inner text modules by their current values
 </summary>
	<param name="text">A text module which may contain some other text modules</param>
	<returns>The finally resolved text</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SalutationTextModuleRequiresFirstName(System.String)">
	<summary>
 Is the first name required by the text module for this salutation formula for the replace engine in method ResolveSalutationTextModule?
 </summary>
	<param name="text"></param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.SalutationTextModuleRequiresLastName(System.String)">
	<summary>
 Is the last name required by the text module for this salutation formula for the replace engine in method ResolveSalutationTextModule?
 </summary>
	<param name="text"></param>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.AcademicTitle">
	<summary>
     An optional academic title, typically 'Prof.' or 'Dr.'
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.Street">
	<summary>
     The street
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.ZipCode">
	<summary>
     The zip code
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.Location">
	<summary>
     The location or city
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.State">
	<summary>
     The state in the country
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.Country">
	<summary>
     The country name 
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.PreferredLanguage1">
	<summary>
     The primary preferred language or market
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.PreferredLanguage2">
	<summary>
     The second preferred language or market
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.PreferredLanguage3">
	<summary>
     The third preferred language or market
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.NameAddition">
	<summary>
     An additional pre-name, e. g. 'de' in the name 'Jean-Claude de Verheugen'
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.Gender">
	<summary>
     The gender of the user
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.LoginDisabled">
	<summary>
     Login has been disabled
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.LoginLockedTemporary">
	<summary>
     Get/set the temporary lock state
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.LoginLockedTemporaryTill">
	<summary>
     Login has been temporary locked till this date
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.AccountSuccessfullLogins">
	<summary>
     The number of logins since the account has been created
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.AccountLoginFailures">
	<summary>
     The number of failed logins (this number will be resetted after every successfull login)
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.AccountCreatedOn">
	<summary>
     The date and time when the user account has been created
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.AccountModifiedOn">
	<summary>
     The date and time when the account has been updated the last time
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.AccountLastLoginOn">
	<summary>
     The date and time when the user logged in on the last time
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.AccountLastLoginFromAddress">
	<summary>
     The last login address of the remote client
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.LoginDeleted">
	<summary>
     Login has been deleted
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.Memberships">
	<summary>
     The groups list where the user is member of
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.MembershipsByRule">
	<summary>
 Memberships of the current user by rule-set
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.AddMembership(System.Int32,CompuMaster.camm.WebManager.WMSystem.WMNotifications)">
	<summary>
     Add a membership to a user group (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="groupID">The group ID</param>
	<param name="notifications">A notification class which contains the e-mail templates which might be sent</param>
	<remarks>
 This action will be done immediately without the need for saving
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.AddMembership(System.Int32,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
     Add a membership to a user group (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="groupID">The group ID</param>
	<param name="notifications">A notification class which contains the e-mail templates which might be sent</param>
	<remarks>
 This action will be done immediately without the need for saving. If the membership already exists, it won't be created for a 2nd time.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.ValidateRequiredFlagsForGroupMembership(System.Int32,System.Boolean)">
	<summary>
 Validate if all required flags available to add allow-membership-relation
 </summary>
	<param name="groupID"></param>
	<returns>Empty array if nothing missing</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.ValidateRequiredFlagsForSecurityObject(System.Int32,System.Boolean)">
	<summary>
 Validate if all required flags available to add allow-membership-relation
 </summary>
	<param name="securityObjectID"></param>
	<returns>Empty array if nothing missing</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.AddMembership(System.Int32,System.Boolean,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
     Add a membership to a user group (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="groupID">The group ID</param>
	<param name="notifications">A notification class which contains the e-mail templates which might be sent</param>
	<remarks>
 This action will be done immediately without the need for saving. If the membership already exists, it won't be created for a 2nd time.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.AddMembership(CompuMaster.camm.WebManager.WMSystem.GroupInformation,System.Boolean,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
     Add a membership to a user group (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="groupInfo">The group</param>
	<param name="notifications">A notification class which contains the e-mail templates which might be sent</param>
	<remarks>
 This action will be done immediately without the need for saving. If the membership already exists, it won't be created for a 2nd time.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.ResetMembershipsCache">
	<summary>
 Reset cached/calculated authorizations
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.RemoveMembership(System.Int32)">
	<summary>
     Remove a membership (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="GroupID">The group ID the user shall not be member of any more</param>
	<remarks>
 This action will be done immediately without the need for saving
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.RemoveMembership(System.Int32,System.Boolean)">
	<summary>
     Remove a membership (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="GroupID">The group ID the user shall not be member of any more</param>
	<remarks>
 This action will be done immediately without the need for saving
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.RemoveMembership(CompuMaster.camm.WebManager.WMSystem.GroupInformation,System.Boolean)">
	<summary>
     Remove a membership (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="GroupInfo">The group the user shall not be member of any more</param>
	<remarks>
 This action will be done immediately without the need for saving
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.IsMember(System.String)">
	<summary>
 Is the current user a member of the given group?
 </summary>
	<param name="groupName">The name of the group which shall be checked</param>
	<returns>True if the user is a member, otherwise False</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.IsMember(System.Int32)">
	<summary>
 Is the current user a member of the given group?
 </summary>
	<param name="groupID">The ID of the group which shall be checked</param>
	<returns>True if the user is a member, otherwise False</returns>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.AdditionalFlags">
	<summary>
     Additional, optional flags
 </summary>
	<value></value>
	<remarks>
		<para>Additional flags are typically used by applications which have to store some data in the user's profile.</para>
		<para>Following names are reserved</para>
		<list>
			<item><code>1stPreferredLanguage</code></item>
			<item><code>2ndPreferredLanguage</code></item>
			<item><code>3rdPreferredLanguage</code></item>
			<item><code>AccountProfileValidatedByEMailTest</code></item>
			<item><code>Addresses</code></item>
			<item><code>AutomaticLogonAllowedByMachineToMachineCommunication</code></item>
			<item><code>ComesFrom</code></item>
			<item><code>Company</code></item>
			<item><code>CompleteName</code></item>
			<item><code>Country</code></item>
			<item><code>email</code></item>
			<item><code>ExternalAccount</code></item>
			<item><code>Fax</code></item>
			<item><code>FirstName</code></item>
			<item><code>InitAuthorizationsDone</code></item>
			<item><code>LastName</code></item>
			<item><code>Location</code></item>
			<item><code>Mobile</code></item>
			<item><code>Motivation</code></item>
			<item><code>NameAddition</code></item>
			<item><code>Phone</code></item>
			<item><code>Position</code></item>
			<item><code>Sex</code></item>
			<item><code>State</code></item>
			<item><code>Street</code></item>
			<item><code>ZipCode</code></item>
		</list>
	</remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.AccessLevel">
	<summary>
     The access level role of the user
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.AccountProfileValidatedByEMailTest">
	<summary>
     Indicates if the e-mail address has already been validated
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.Authorizations">
	<summary>
     The list of authorizations for standard access by the current user (AllowDevelopment - DenyDevelopment + AllowStandard - DenyStandard)
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.AuthorizationsByRule">
	<summary>
 Authorizations of the current user by rule-set
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.AddAuthorization(System.Int32,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
     Add an authorization to a security object for all server groups (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectID">The security object ID</param>
	<param name="notifications">A notification class which contains the e-mail templates which might be sent</param>
	<remarks>
 This action will be done immediately without the need for saving
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.AddAuthorization(System.Int32,System.Int32,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
 Add an authorization to a security object (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectID">The security object ID</param>
	<param name="serverGroupID">The authorization will be related only for the given server group ID, otherwise use 0 (zero value) for assigning authorization to all server groups</param>
	<param name="notifications">A notification class which contains the e-mail templates which might be sent</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.AddAuthorization(System.Int32,System.Int32,System.Boolean,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
 Add an authorization to a security object (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectID">The security object ID</param>
	<param name="serverGroupID">The authorization will be related only for the given server group ID, otherwise use 0 (zero value) for assigning authorization to all server groups</param>
	<param name="developerAuthorization">The developer authorization allows a user to see/access applications with this security objects even if it is currently disabled</param>
	<param name="notifications">A notification class which contains the e-mail templates which might be sent</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.AddAuthorization(System.Int32,System.Int32,System.Boolean,System.Boolean,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
 Add an authorization to a security object (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectID">The security object ID</param>
	<param name="serverGroupID">The authorization will be related only for the given server group ID, otherwise use 0 (zero value) for assigning authorization to all server groups</param>
	<param name="developerAuthorization">The developer authorization allows a user to see/access applications with this security objects even if it is currently disabled</param>
	<param name="isDenyRule">True for a deny rule or False for a grant access rule</param>
	<param name="notifications">A notification class which contains the e-mail templates which might be sent</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.AddAuthorization(CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation,System.Int32,System.Boolean,System.Boolean,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
 Add an authorization to a security object (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectInfo">The security object</param>
	<param name="serverGroupID">The authorization will be related only for the given server group ID, otherwise use 0 (zero value) for assigning authorization to all server groups</param>
	<param name="developerAuthorization">The developer authorization allows a user to see/access applications with this security objects even if it is currently disabled</param>
	<param name="isDenyRule">True for a deny rule or False for a grant access rule</param>
	<param name="notifications">A notification class which contains the e-mail templates which might be sent</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.AddAuthorization(System.Int32,System.Boolean,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
     Add an authorization to a security object for all server groups (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectID">The security object ID</param>
	<param name="developerAuthorization">The developer authorization allows a user to see/access applications with this security objects even if it is currently disabled</param>
	<param name="notifications">A notification class which contains the e-mail templates which might be sent</param>
	<remarks>
 This action will be done immediately without the need for saving
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.RemoveAuthorization(System.Int32,System.Int32)">
	<summary>
 Remove an authorization (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectID">The security object ID the user shall not be authorized for any more</param>
	<param name="serverGroupID">The authorization related only to the given server group ID will be removed, otherwise use 0 (zero value) for specifying the authorization to all server groups</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.RemoveAuthorization(System.Int32,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Remove an authorization (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectID">The security object ID the user shall not be authorized for any more</param>
	<param name="serverGroupID">The authorization related only to the given server group ID will be removed, otherwise use 0 (zero value) for specifying the authorization to all server groups</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.RemoveAuthorization(CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Remove an authorization (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObject">The security object the user shall not be authorized for any more</param>
	<param name="serverGroupID">The authorization related only to the given server group ID will be removed, otherwise use 0 (zero value) for specifying the authorization to all server groups</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.ResetAuthorizationsCache">
	<summary>
 Reset cached/calculated authorizations
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UserInformation.RemoveAuthorization(System.Int32)">
	<summary>
     Remove an authorization which is assigned to all server groups (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectID">The security object ID the user shall not be authorized for any more</param>
	<remarks>
 This action will be done immediately without the need for saving
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserInformation.ExternalAccount">
	<summary>
     An external account relation
 </summary>
	<value></value>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.UserInformation">
	<summary>
     User information
 </summary>
	<remarks>
     This class contains all information of a user profile as well as all important methods for handling of that account
 </remarks>
	<attention>
     When the list of properties changes, you might also update the import and export methods to match the new, extended set of fields
 </attention>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.ServerInformation.LoadServerInfoFromDatabase(System.Int32)">
	<summary>
     Load server information from database
 </summary>
	<param name="ServerID">A server ID</param>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerInformation.ID">
	<summary>
     The ID value of this server
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerInformation.IPAddressOrHostHeader">
	<summary>
     The server identification string
 </summary>
	<value></value>
	<remarks>
     Typically, this is either an IP address or a host header name. This value can hold any ID, you only have to ensure that the server tries to login with that server identification string again. This can be set up in the web.config file or in /sysdata/config.*
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerInformation.URL_Protocol">
	<summary>
     The protocol name for the server, http or https
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerInformation.URL_DomainName">
	<summary>
     The domain name this server is available at
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerInformation.URL_Port">
	<summary>
     An optional port information if it's not the default port
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.ServerInformation.ServerURL">
	<summary>
     The server URL without trailing slash, e. g. http://www.yourcompany:8080
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerInformation.Enabled">
	<summary>
     Is this server activated?
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerInformation.Description">
	<summary>
     An optional description for this server
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerInformation.ParentServerGroup">
	<summary>
     The parent server group where this server is assigned to
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerInformation.ServerSessionTimeout">
	<summary>
     A session timeout value
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerInformation.ServerUserlockingsTimeout">
	<summary>
     A timeout value how fast temporary locked users can logon again
 </summary>
	<value></value>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.ServerInformation">
	<summary>
     Server information
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation.ID">
	<summary>
     The ID value of this server group
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation.Title">
	<summary>
     The common title of this server group
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation.NavTitle">
	<summary>
     The title of this server group in a shorter name, often used for the navigation bars
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation.OfficialCompanyWebSiteTitle">
	<summary>
     The official website title of the company, typically used for the link/logo from the extranet to the internet website
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation.OfficialCompanyWebSiteURL">
	<summary>
     The official website address of the company, typically used for the link/logo from the extranet to the internet website
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation.CompanyTitle">
	<summary>
     The company title, e. g. 'YourCompany'
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation.CompanyFormerTitle">
	<summary>
     The official company title, e. g. 'YourCompany Ltd.'
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation.GroupPublic">
	<summary>
     The ID value for the group of registered users
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation.GroupAnonymous">
	<summary>
     The ID value for the group of unregistered users
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation.MasterServer">
	<summary>
     The master server which is the primary handler for all login requests
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation.AdminServer">
	<summary>
     A reference to an administration server
 </summary>
	<value></value>
	<remarks>
     This administration server can be part of another servergroup. This allows you to remove any administration possibilities from your untrusted extranet and to only allow user administration on a server in your intranet.
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation.AccessLevelDefault">
	<summary>
     The default access level role for all users who register themselves in this server group
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation.AccessLevels">
	<summary>
     The access level roles which are allowed to access this server group
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation.Servers">
	<summary>
     A list of attached servers to this server group
 </summary>
	<value></value>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation">
	<summary>
     Server group information
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.#ctor(System.Int32,System.String,System.String,System.String,System.Int64,System.DateTime,System.Int64,System.DateTime,System.Boolean,System.Boolean,System.Int32,System.Int32,System.String,System.String,CompuMaster.camm.WebManager.Security.NavigationInformation,CompuMaster.camm.WebManager.WMSystem)">
	<summary>
 Create a SecurityObjectInformation instance
 </summary>
	<param name="securityObjectID">ID</param>
	<param name="name">Name</param>
	<param name="displayName">Title in administration area</param>
	<param name="remarks">User's comment on this security object</param>
	<param name="modifiedByUserID">Who modified this item last time</param>
	<param name="modifiedOn">When has this item been modified</param>
	<param name="releasedByUserID">Who released this item last time</param>
	<param name="releasedOn">When has this item been released</param>
	<param name="disabled">Is this item enabled (active) or disabled (only accessible with development authorizations)</param>
	<param name="deleted">It this security object deleted</param>
	<param name="inheritedFromSecurityObjectID">An ID of another security object whose authorizations apply also to this one</param>
	<param name="systemType">A type value for system purposes as well as for custom purposes (0 for normal items, 1 for master server items, 2 for administration server items, negative values for custom values)</param>
	<param name="requiredFlags">Comma-separated list of required flag names/definitions</param>
	<param name="requiredFlagsRemarks">Remarks on required flags</param>
	<param name="navigationItems">Navigation items related to this SecurityObject</param>
	<param name="webManager">A reference to a cammWebManager instance</param>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.ID">
	<summary>
     The ID value for this security object
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.Name">
	<summary>
     The name of this security object
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.DisplayName">
	<summary>
     A display title for this security object in the administration forms
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.RequiredAdditionalFlags">
	<summary>
 Based on current authorization of this group and their additional flags requirements, every member user account must provide the requested flag data
 </summary>
	<returns>Array of strings representing required flag names (with type information)</returns>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.RequiredFlags">
	<summary>
 Comma-separated list of reqired flags/definitions
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.RequiredFlagsRemarks">
	<summary>
 User comments on required flags
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.SystemType">
	<summary>
     A type value for system purposes as well as for custom purposes (0 for normal items, 1 for master server items, 2 for administration server items, negative values for custom values)
 </summary>
	<value>0 for normal items, 1 for master server items, 2 for administration server items, negative values for custom values</value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.Disabled">
	<summary>
     Is this an inactive security object?
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.Deleted">
	<summary>
     Has this security object been deleted?
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.InheritFrom_SecurityObjectID">
	<summary>
     Authorizations are inherited by another security object
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.InheritFrom_SecurityObjectIDs">
	<summary>
 Authorizations are inherited by other security objects
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.InheritFrom_SecurityObjectInfo">
	<summary>
     Authorizations are inherited by another security object
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.InheritFrom_SecurityObjectInfos">
	<summary>
 Authorizations are inherited by other security objects
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.ModifiedBy_UserID">
	<summary>
     Last modification by this user
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.ModifiedBy_UserInfo">
	<summary>
     Last modification by this user
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.ModifiedOn">
	<summary>
     The date and time of the last modification
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.ReleasedBy_UserID">
	<summary>
     The release has been done by this user
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.ReleasedBy_UserInfo">
	<summary>
     The release has been done by this user
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.ReleasedOn">
	<summary>
     The release has been done on this date/time
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.Remarks">
	<summary>
     Comments to this security object
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.AuthorizationsForGroupsByRule">
	<summary>
 Authorizations of the current user by rule-set
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.AuthorizationsForUsersByRule">
	<summary>
 Authorizations of the current user by rule-set
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.AuthorizationsForUsers">
	<summary>
     The authorizations list which users are authorized for this security object
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.AuthorizationsForGroups">
	<summary>
     The authorizations list which groups are authorized for this security object
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.AddAuthorizationForUser(System.Int64,System.Int32,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
 Add an authorization to a security object (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="userID">The user ID</param>
	<param name="serverGroupID">The authorization will be related only for the given server group ID, otherwise use 0 (zero value) for assigning authorization to all server groups</param>
	<param name="notifications">A notification class which contains the e-mail templates which might be sent</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.AddAuthorizationForUser(System.Int64,System.Int32,System.Boolean,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
 Add an authorization to a security object (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="userID">The user ID</param>
	<param name="serverGroupID">The authorization will be related only for the given server group ID, otherwise use 0 (zero value) for assigning authorization to all server groups</param>
	<param name="developerAuthorization">The developer authorization allows a user to see/access applications with this security objects even if it is currently disabled</param>
	<param name="notifications">A notification class which contains the e-mail templates which might be sent</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.AddAuthorizationForUser(System.Int64,System.Int32,System.Boolean,System.Boolean,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
 Add an authorization to a security object (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="userID">The user ID</param>
	<param name="serverGroupID">The authorization will be related only for the given server group ID, otherwise use 0 (zero value) for assigning authorization to all server groups</param>
	<param name="developerAuthorization">The developer authorization allows a user to see/access applications with this security objects even if it is currently disabled</param>
	<param name="notifications">A notification class which contains the e-mail templates which might be sent</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.AddAuthorizationForUser(CompuMaster.camm.WebManager.WMSystem.UserInformation,System.Int32,System.Boolean,System.Boolean,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
 Add an authorization to a security object (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="userInfo">The user object</param>
	<param name="serverGroupID">The authorization will be related only for the given server group ID, otherwise use 0 (zero value) for assigning authorization to all server groups</param>
	<param name="developerAuthorization">The developer authorization allows a user to see/access applications with this security objects even if it is currently disabled</param>
	<param name="notifications">A notification class which contains the e-mail templates which might be sent</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.RemoveAuthorizationForUser(System.Int64,System.Int32)">
	<summary>
 Remove an authorization (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="userID">The user ID</param>
	<param name="serverGroupID">The authorization related only to the given server group ID will be removed, otherwise use 0 (zero value) for specifying the authorization to all server groups</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.RemoveAuthorizationForUser(System.Int64,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Remove an authorization (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="userID">The user ID</param>
	<param name="serverGroupID">The authorization related only to the given server group ID will be removed, otherwise use 0 (zero value) for specifying the authorization to all server groups</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.RemoveAuthorizationForUser(CompuMaster.camm.WebManager.WMSystem.UserInformation,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Remove an authorization (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="userInfo">The user</param>
	<param name="serverGroupID">The authorization related only to the given server group ID will be removed, otherwise use 0 (zero value) for specifying the authorization to all server groups</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.ResetAuthorizationsCacheForGroups">
	<summary>
 Reset cached/calculated authorizations
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.ResetAuthorizationsCacheForUsers">
	<summary>
 Reset cached/calculated authorizations
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.AddAuthorizationForGroup(System.Int32,System.Int32)">
	<summary>
 Add an authorization to a security object (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="groupID">The group ID</param>
	<param name="serverGroupID">The authorization will be related only for the given server group ID, otherwise use 0 (zero value) for assigning authorization to all server groups</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.ValidateRequiredFlagsOnAllRelatedUsers(System.String[],System.Int32,System.Boolean)">
	<summary>
 Checks if all effective members of a group have got the required flags for a security object
 </summary>
	<param name="requiredFlags"></param>
	<param name="groupID"></param>
	<param name="isDenyRule"></param>
	<returns>0 if all required flags are available, or the first user ID of the error users list if at 1 or more flags are missing at 1 or more users</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.ValidateRequiredFlagsOnAllRelatedUsers(System.String[],System.Int32,System.Int32,System.Boolean,CompuMaster.camm.WebManager.WMSystem)">
	<summary>
 Checks if all effective members of a group have got the required flags for a security object
 </summary>
	<param name="requiredFlags"></param>
	<param name="securityObjectID"></param>
	<param name="groupID"></param>
	<param name="isDenyRule"></param>
	<param name="webManager"></param>
	<returns>0 if all required flags are available, or the first user ID of the error users list if 1 or more flags are missing at 1 or more users</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.AddAuthorizationForGroup(System.Int32,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Add an authorization to a security object (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="groupID">The group ID</param>
	<param name="serverGroupID">The authorization will be related only for the given server group ID, otherwise use 0 (zero value) for assigning authorization to all server groups</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.AddAuthorizationForGroup(CompuMaster.camm.WebManager.WMSystem.GroupInformation,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Add an authorization to a security object (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="groupInfo">The group</param>
	<param name="serverGroupID">The authorization will be related only for the given server group ID, otherwise use 0 (zero value) for assigning authorization to all server groups</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.RemoveAuthorizationForGroup(System.Int32,System.Int32)">
	<summary>
 Remove an authorization (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="groupID">The user ID</param>
	<param name="serverGroupID">The authorization related only to the given server group ID will be removed, otherwise use 0 (zero value) for specifying the authorization to all server groups</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.RemoveAuthorizationForGroup(System.Int32,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Remove an authorization (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="groupID">The user ID</param>
	<param name="serverGroupID">The authorization related only to the given server group ID will be removed, otherwise use 0 (zero value) for specifying the authorization to all server groups</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation.RemoveAuthorizationForGroup(CompuMaster.camm.WebManager.WMSystem.GroupInformation,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Remove an authorization (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="groupInfo">The user ID</param>
	<param name="serverGroupID">The authorization related only to the given server group ID will be removed, otherwise use 0 (zero value) for specifying the authorization to all server groups</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation">
	<summary>
     Security object information
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.LanguageInformation.ID">
	<summary>
     The market/language ID
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.LanguageInformation.LanguageName_English">
	<summary>
     The name of the market/language in English language
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.LanguageInformation.LanguageName_OwnLanguage">
	<summary>
     The name of the market/language in its own language
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.LanguageInformation.IsActive">
	<summary>
     Market/language has been activated for use in camm Web-Manager
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.LanguageInformation.Direction">
	<summary>
     Defines the writing direction, either left-to-right or right-to-left
 </summary>
	<value>A string "ltr" or "rtl"</value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.LanguageInformation.BrowserLanguageID">
	<summary>
     An optional browser ID for the culture
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.LanguageInformation.Abbreviation">
	<summary>
     An optional abbreviation name for the language
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.LanguageInformation.AlternativeLanguageInfo">
	<summary>
     An optional alternative language, regulary present for market identifiers
 </summary>
	<value></value>
	<remarks>
     This information takes regulary effect for markets. 
 </remarks>
	<example>
     For 'English (US)' as well as 'English (GB)', there is the alternative language 'English'.
 </example>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.LanguageInformation">
	<summary>
     Language details
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.#ctor(System.Int32,System.String,System.String,System.Boolean,CompuMaster.camm.WebManager.WMSystem@)">
	<summary>
 Create a new instance of group information
 </summary>
	<param name="GroupID"></param>
	<param name="InternalName"></param>
	<param name="Description"></param>
	<param name="IsSystemGroup"></param>
	<param name="WebManager"></param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.#ctor(System.Data.DataRow,CompuMaster.camm.WebManager.WMSystem)">
	<summary>
     Assign properties of a group from a table row of the system database
 </summary>
	<param name="dataRow">The row from the data table containing the full user data</param>
	<param name="webManager">The current instance of camm Web-Manager</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.#ctor(System.Int32,CompuMaster.camm.WebManager.WMSystem@)">
	<summary>
     Constructor of a new group information object
 </summary>
	<param name="GroupID">The ID value of the group which shall be loaded</param>
	<param name="WebManager">The instance of camm Web-Manager</param>
	<remarks>
     If the group ID doesn't exist in the database, you'll get an object but it's empty and invalid since the ID is a zero value.
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.ID">
	<summary>
     The ID value for this group
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.Name">
	<summary>
     The title for this user group
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.Description">
	<summary>
     An optional description 
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.IsSystemGroup">
	<summary>
     Indicates wether this group is a system group (e. g. Security Administration, Public Intranet, Anonymous Extranet)
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.IsSystemGroupByServerGroup">
	<summary>
 Indicate if it is a system group because it's a public or anonymous group of a server group
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.IsSystemGroupBySpecialUsersGroup">
	<summary>
 Indicate if it is a system group because it's one of the special groups for priviledged administration purposes
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.MemberUserIDs">
	<summary>
     A list of user IDs of all members
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.MemberUserIDsByRule">
	<summary>
 Memberships of the current user by rule-set
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.Members">
	<summary>
     A list of members
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.MembersByRule">
	<summary>
 Memberships of the current user by rule-set
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.AddMember(CompuMaster.camm.WebManager.WMSystem.UserInformation@,CompuMaster.camm.WebManager.WMSystem.WMNotifications)">
	<summary>
     Add a new user to the list of members
 </summary>
	<param name="UserInfo">The new user</param>
	<param name="Notifications">A notification class which can be user for sending messages to the user</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.AddMember(CompuMaster.camm.WebManager.WMSystem.UserInformation@,System.Boolean,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
     Add a new user to the list of members
 </summary>
	<param name="UserInfo">The new user</param>
	<param name="Notifications">A notification class which can be user for sending messages to the user</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.AddMember(System.Int32,CompuMaster.camm.WebManager.WMSystem.WMNotifications)">
	<summary>
     Add a new user to the list of members
 </summary>
	<param name="UserID">The ID value of the new user</param>
	<param name="Notifications">A notification class which can be user for sending messages to the user</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.AddMember(System.Int64,CompuMaster.camm.WebManager.WMSystem.WMNotifications)">
	<summary>
     Add a new user to the list of members
 </summary>
	<param name="UserID">The ID value of the new user</param>
	<param name="Notifications">A notification class which can be user for sending messages to the user</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.AddMember(System.Int64,System.Boolean,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
     Add a new user to the list of members
 </summary>
	<param name="UserID">The ID value of the new user</param>
	<param name="Notifications">A notification class which can be user for sending messages to the user</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.HasMember(System.Int64)">
	<summary>
 Is the given user a member of the current group?
 </summary>
	<param name="userID">A user ID which shall be tested for membership</param>
	<returns>True if it is a member, otherwise False</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.HasMember(System.String)">
	<summary>
 Is the given user a member of the current group?
 </summary>
	<param name="userLoginName">A loginname which shall be tested for membership</param>
	<returns>True if it is a member, otherwise False</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.RemoveMember(System.Int32)">
	<summary>
     Remove a user from the list of members
 </summary>
	<param name="UserID">The ID value of the user</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.RemoveMember(System.Int64)">
	<summary>
     Remove a user from the list of members
 </summary>
	<param name="UserID">The ID value of the user</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.RemoveMember(CompuMaster.camm.WebManager.WMSystem.UserInformation,System.Boolean)">
	<summary>
     Remove a user from the list of members
 </summary>
	<param name="userInfo">The ID value of the user</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.RemoveMember(System.Int64,System.Boolean)">
	<summary>
     Remove a user from the list of members
 </summary>
	<param name="userID">The ID value of the user</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.AddAuthorization(System.Int32,System.Int32)">
	<summary>
 Add an authorization to a security object (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectID">The security object ID</param>
	<param name="serverGroupID">The authorization will be related only for the given server group ID, otherwise use 0 (zero value) for assigning authorization to all server groups</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.AddAuthorization(System.Int32,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Add an authorization to a security object (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectID">The security object ID</param>
	<param name="serverGroupID">The authorization will be related only for the given server group ID, otherwise use 0 (zero value) for assigning authorization to all server groups</param>
	<param name="isDeveloperAuthorization">Group members will be considered for development access</param>
	<param name="isDenyRule">True for a deny rule, false for an allow rule (default)</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.AddAuthorization(CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Add an authorization to a security object (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectInfo">The security object ID</param>
	<param name="serverGroupID">The authorization will be related only for the given server group ID, otherwise use 0 (zero value) for assigning authorization to all server groups</param>
	<param name="isDeveloperAuthorization">Group members will be considered for development access</param>
	<param name="isDenyRule">True for a deny rule, false for an allow rule (default)</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.AddAuthorization(System.Int32)">
	<summary>
     Add an authorization to a security object for all server groups (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectID">The security object ID</param>
	<remarks>
 This action will be done immediately without the need for saving
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.RemoveAuthorization(System.Int32,System.Int32)">
	<summary>
 Remove an authorization (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectID">The security object ID the user shall not be authorized for any more</param>
	<param name="serverGroupID">The authorization related only to the given server group ID will be removed, otherwise use 0 (zero value) for specifying the authorization to all server groups</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.RemoveAuthorization(System.Int32,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Remove an authorization (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectID">The security object ID the user shall not be authorized for any more</param>
	<param name="serverGroupID">The authorization related only to the given server group ID will be removed, otherwise use 0 (zero value) for specifying the authorization to all server groups</param>
	<param name="isDeveloperAuthorization">Group members will be considered for development access</param>
	<param name="isDenyRule">True for a deny rule, false for an allow rule (default)</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.RemoveAuthorization(CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Remove an authorization (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectInfo">The security object the user shall not be authorized for any more</param>
	<param name="serverGroupID">The authorization related only to the given server group ID will be removed, otherwise use 0 (zero value) for specifying the authorization to all server groups</param>
	<param name="isDeveloperAuthorization">Group members will be considered for development access</param>
	<param name="isDenyRule">True for a deny rule, false for an allow rule (default)</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.ResetMembershipsCache">
	<summary>
 Reset cached/calculated authorizations
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.ResetAuthorizationsCache">
	<summary>
 Reset cached/calculated authorizations
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.RemoveAuthorization(System.Int32)">
	<summary>
     Remove an authorization with assignment to all server groups (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectID">The security object ID the user shall not be authorized for any more</param>
	<remarks>
 This action will be done immediately without the need for saving
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.Authorizations">
	<summary>
     The authorizations list where the group is authorized for
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.AuthorizationsByRule">
	<summary>
 Authorizations of the current user by rule-set
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GroupInformation.RequiredAdditionalFlags">
	<summary>
 Based on current authorization of this group and their additional flags requirements, every member user account must provide the requested flag data
 </summary>
	<returns>Array of strings representing required flag names (with type information)</returns>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.ModifiedBy_UserID">
	<summary>
     Last modification by this user
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.ModifiedBy_UserInfo">
	<summary>
     Last modification by this user
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.ModifiedOn">
	<summary>
     The date and time of the last modification
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.ReleasedBy_UserID">
	<summary>
     The release has been done by this user
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.ReleasedBy_UserInfo">
	<summary>
     The release has been done by this user
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.GroupInformation.ReleasedOn">
	<summary>
     The release has been done on this date/time
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.GroupInformation">
	<summary>
     Group information
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.GroupAuthorizationInformation.ID">
	<summary>
     The ID value for this authorization item
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.GroupAuthorizationInformation.SecurityObjectInfo">
	<summary>
     The security object which is pointed by this authorization
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.GroupAuthorizationInformation.GroupInfo">
	<summary>
     A user group which has been authorized
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.GroupAuthorizationInformation.ServerGroupInfo">
	<summary>
     A server group where this authorization shall take effect
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.GroupAuthorizationInformation.GroupID">
	<summary>
     The ID value of the user group
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.GroupAuthorizationInformation.SecurityObjectID">
	<summary>
     The ID value of the targetted security object
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.GroupAuthorizationInformation.ServerGroupID">
	<summary>
     The ID value of the effected server group
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.GroupAuthorizationInformation.IsDenyRule">
	<summary>
 Allow-rules GRANT access, Deny-rules DENY the access
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.GroupAuthorizationInformation.IsDevRule">
	<summary>
 Allow-rules GRANT access, Deny-rules DENY the access
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.GroupAuthorizationInformation.ReleasedBy_UserID">
	<summary>
     The release has been done by this user
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.GroupAuthorizationInformation.ReleasedBy_UserInfo">
	<summary>
     The release has been done by this user
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.GroupAuthorizationInformation.ReleasedOn">
	<summary>
     The release has been done on this date/time
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.Authorizations.GroupAuthorizationInformation">
	<summary>
     An authorization for an user group
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.UserAuthorizationInformation.ID">
	<summary>
     The ID value for this authorization item
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.UserAuthorizationInformation.AlsoVisibleIfDisabled">
	<summary>
     Is the user allowed to see and access the link to this security object application even if the security object hasn't been activated?
 </summary>
	<value></value>
	<remarks>
     Often, developers need access to test their new applcations before they can go live
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.UserAuthorizationInformation.IsDenyRule">
	<summary>
 Allow-rules GRANT access, Deny-rules DENY the access
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.UserAuthorizationInformation.SecurityObjectInfo">
	<summary>
     A security object which is pointed by this authorization 
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.UserAuthorizationInformation.UserInfo">
	<summary>
     The user which has got the authorization
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.UserAuthorizationInformation.ServerGroupInfo">
	<summary>
     The server group where this authorization shall take effect
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.UserAuthorizationInformation.UserID">
	<summary>
     The user which has got the authorization
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.UserAuthorizationInformation.SecurityObjectID">
	<summary>
     A security object which is pointed by this authorization 
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.UserAuthorizationInformation.ServerGroupID">
	<summary>
     The server group where this authorization shall take effect
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.UserAuthorizationInformation.ReleasedBy_UserID">
	<summary>
     The release has been done by this user
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.UserAuthorizationInformation.ReleasedBy_UserInfo">
	<summary>
     The release has been done by this user
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Authorizations.UserAuthorizationInformation.ReleasedOn">
	<summary>
     The release has been done on this date/time
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.Authorizations.UserAuthorizationInformation">
	<summary>
     An authorization for an user
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.Authorizations.#ctor(System.Int32,CompuMaster.camm.WebManager.WMSystem@,System.Int32)">
	<summary>
     Load the list of assigned authorizations
 </summary>
	<param name="SecurityObjectID">When not null (Nothing in VisualBasic) then filter for this security object else don't filter for this value</param>
	<param name="WebManager">The instance of a camm Web-Manager</param>
	<param name="ServerGroupID">When not null (Nothing in VisualBasic) then filter for this server group else don't filter for this value</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.Authorizations.#ctor(CompuMaster.camm.WebManager.WMSystem,System.Int32,System.Int32,System.Int32,System.Int64)">
	<summary>
     Load the list of assigned authorizations
 </summary>
	<param name="webManager">The instance of a camm Web-Manager</param>
	<param name="securityObjectID">When not null (Nothing in VisualBasic) then filter for this security object else don't filter for this value</param>
	<param name="serverGroupID">When not null (Nothing in VisualBasic) then filter for this server group else don't filter for this value</param>
	<param name="userGroupID">When not null (Nothing in VisualBasic) then filter for this user group else don't filter for this value</param>
	<param name="userID">When not null (Nothing in VisualBasic) then filter for this user else don't filter for this value</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.Authorizations.#ctor(System.Int32,CompuMaster.camm.WebManager.WMSystem@,System.Int32,System.Int32,System.Int64)">
	<summary>
     Load the list of assigned authorizations
 </summary>
	<param name="securityObjectID">When not null (Nothing in VisualBasic) then filter for this security object else don't filter for this value</param>
	<param name="webManager">The instance of a camm Web-Manager</param>
	<param name="serverGroupID">When not null (Nothing in VisualBasic) then filter for this server group else don't filter for this value</param>
	<param name="userGroupID">When not null (Nothing in VisualBasic) then filter for this user group else don't filter for this value</param>
	<param name="userID">When not null (Nothing in VisualBasic) then filter for this user else don't filter for this value</param>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.Authorizations">
	<summary>
     Authorizations
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetSubAuthorizationStatus(System.String,System.Int32,System.Int64,System.String)">
	<summary>
     Should be public but is not possible while it has to be overloaded with a function only differing by a long and an integer
 </summary>
	<param name="TableName"></param>
	<param name="TablePrimID"></param>
	<param name="UserID"></param>
	<param name="RequiredAuth"></param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_IsSecurityMaster(System.String,System.Int32)">
	<summary>
     Is an user a security master?
 </summary>
	<param name="TableName">Either 'Groups' or 'Applications'</param>
	<param name="UserID">The user ID</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_IsSecurityMaster(System.String,System.Int64)">
	<summary>
     Is an user a security master?
 </summary>
	<param name="TableName">Either 'Groups' or 'Applications'</param>
	<param name="UserID">The user ID</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_IsSuperVisor(System.Int32)">
	<summary>
     Is an user a supervisor?
 </summary>
	<param name="UserID"></param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_IsSuperVisor(System.Int64)">
	<summary>
     Is an user a supervisor?
 </summary>
	<param name="UserID"></param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_IsMember(System.Int64,System.String)">
	<summary>
     Is an user a member of a group (by effective rule)?
 </summary>
	<param name="userID">The ID of the user account which shall be analyzed</param>
	<param name="groupName">The name of the group where the user shall be a member</param>
	<returns>True if the user is a member, otherwise false</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_IsSecurityOperator(System.Int32)">
	<summary>
     Is an user a security operator which has got some administration priviledges?
 </summary>
	<param name="UserID"></param>
	<remarks>
     The difference to a security master is that an operator has no priviledges, first. And a security master has got all priviledges to do all things regarding his master role.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_IsSecurityOperator(System.Int64)">
	<summary>
     Is an user a security operator which has got some administration priviledges?
 </summary>
	<param name="UserID"></param>
	<returns>True if the user is a security operator or a supervisor</returns>
	<remarks>
		<para>The difference to a security master is that an operator has no priviledges, first. And a security master has got all priviledges to do all things regarding his master role.</para>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_SetUserPassword(CompuMaster.camm.WebManager.WMSystem.UserInformation,System.String,CompuMaster.camm.WebManager.WMSystem.WMNotifications)">
	<summary>
     Set a new password for an user account and sends required notification messages
 </summary>
	<param name="userInfo">The user information object which shall get a new password</param>
	<param name="newPassword">A new password</param>
	<param name="notificationProvider">An instance of a notification class which handles the distribution of all required mails</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_SetUserPassword(CompuMaster.camm.WebManager.WMSystem.UserInformation,System.String,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
     Set a new password for an user account and sends required notification messages
 </summary>
	<param name="userInfo">The user information object which shall get a new password</param>
	<param name="newPassword">A new password</param>
	<param name="notificationProvider">An instance of a NotificationProvider class which handles the distribution of all required mails</param>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.AccessLevelInformation.ID">
	<summary>
     The ID value for this access level role
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.AccessLevelInformation.Title">
	<summary>
     The title for this access level role
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.AccessLevelInformation.Remarks">
	<summary>
     Some optional remarks on this role
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.AccessLevelInformation.ServerGroups">
	<summary>
     A list of server groups which are accessable by this role
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.AccessLevelInformation.UserIDs">
	<summary>
     A list of users which are assigned to this role
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.AccessLevelInformation.Users">
	<summary>
     A list of users which are assigned to this role
 </summary>
	<value></value>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.AccessLevelInformation">
	<summary>
     Access level information
 </summary>
	<remarks>
     Access levels are user roles defining the availability of the existant server groups for the user
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.NamespaceDoc">
	<summary>
     Application classes, pages, controls and modules of camm Web-Manager
 </summary>
	<remarks>
		<para>
         The basic API of camm Web-Manager is implemented in <see cref="T:CompuMaster.camm.WebManager.WMSystem">CompuMaster.camm.WebManager.WMSystem</see>. Every cammWebManager object on your page will provide these interfaces. The recommendation is to use <see cref="T:CompuMaster.camm.WebManager.Pages.Page">CompuMaster.camm.WebManager.Pages.Page</see> instead of the normal System.Web.UI.Page if you like to access the cammWebManager property from your code-behind source code.
     </para>
		<para>For a fully functional camm Web-Manager, your webserver's user account needs write access to following directories
         <list>
				<item><code>/sysdata/</code> for a working web editor in your website's editorial, copyright and data protection page</item>
				<item><code>/system/downloads/</code> for a fully featured download handler which provides advanced technologies to provide dynamic download files</item>
			</list>
		</para>
	</remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UI">
	<summary>
     User interface related properties and methods
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.DownloadHandler">
	<summary>
     The download handler provides a secure, powerfull and resource saving possibility for sending files or data to a client
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.PasswordSecurity">
	<summary>
 Array of WMPasswordSecurity classes needed to set up password policies for each separate access level
 </summary>
	<value></value>
	<remarks>Each separate access level can get its own password policy. For example, users with internal access need at least 8 characters, but external access only users only need 3 characters in their passwords.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Environment">
	<summary>
 Environmental information, e. g. product details, licence
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Licence">
	<summary>
     Licence details of the camm Web-Manager instance
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.System_ProductName">
	<summary>
 Product name of camm Web-Manager
 </summary>
	<value></value>
	<remarks>Product name could be for example "camm Enterprise WebManager"</remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.System_Licence">
	<summary>
 Licence hash code for camm Web-Manager
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.System_DebugLevel">
	<summary>
 Debug level of camm Web-Manager
 </summary>
	<value>The new debug level</value>
	<remarks>The logging of warnings, errors can be influenced by this property as well as redirection of e-mails and the functionality level of automatic redirects. This is very helpfull on first setup of camm Web-Manager if you experience any problems or you don't want e-mails to be sent to the origin receipients except you yourself.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.DebugLevel">
	<summary>
 Debug level of camm Web-Manager
 </summary>
	<value>The new debug level</value>
	<remarks>The logging of warnings, errors can be influenced by this property as well as redirection of e-mails and the functionality level of automatic redirects. This is very helpfull on first setup of camm Web-Manager if you experience any problems or you don't want e-mails to be sent to the origin receipients except you yourself.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Internationalization">
	<summary>
 The internationalization class contains all common strings and functions for proper internationalization
 </summary>
	<value></value>
	<remarks>You are able to update the values or to extend the values in the file ~/sysdata/custom_internationalization.vb</remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Statistics">
	<summary>
 The statistics class provides methods to identify common figures
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.DefaultNotifications">
	<summary>
 Creates the notifications for all default events of camm Web-Manager
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.Notifications">
	<summary>
 Creates the notifications for all default events of camm Web-Manager
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.IsSupported">
	<summary>
 Which features are supported by the current instance of camm Web-Manager?
 </summary>
	<value></value>
	<remarks>Each instance is set up separately. Some ones support the sending of SMS messages because the gateways are configured, other instances haven't got prepared to send SMS messages. That's why you can and should ask the current configuration here.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.IsLoggedOn">
	<summary>
 Is there a logon of an user or are we anynoumsly visiting the web site?
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.PageTitle">
	<summary>
 The page title of the current page can be modified here
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.PageMETA_Name">
	<summary>
 Configures additional META NAME tags
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.PageMETA_HttpEquiv">
	<summary>
 Configures additional META HTTP-EQUIV tags
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.PageAdditionalHeaders">
	<summary>
 Configures additional tags inside of the HEAD tag
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.PageAdditionalBodyAttributes">
	<summary>
 Configures additional attributes inside of the BODY tag
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.AdditionalBodyTags">
	<summary>
 Do not use! Subject of removal in v3.x!
 </summary>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.User_Auth_Config_CurSMTPServer">
	<summary>
 Do not use! Subject of getting private in v3.x!
 </summary>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.User_Auth_Config_CurSMTPServer_Port">
	<summary>
 Do not use! Subject of getting private in v3.x!
 </summary>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.UserCloneExludedAdditionalFlags">
	<summary>
 The Names (Keys) of Additional-Flags to exclude from cloned user
 </summary>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.DevelopmentEMailAccountAddress">
	<summary>
 The e-mail address of the developer is used when errors shall be reported
 </summary>
	<value>Valid e-mail address</value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.StandardEMailAccountName">
	<summary>
 The common title of the 1st level support team
 </summary>
	<value>The public title for the 1st level support team contact address</value>
	<remarks>The e-mail address is used for all common activities inside of the camm WebManager world, for example a general contact for feedback or support requests. Mostly, the security administrators get all those e-mail. Depending of the content, they can answer directly or redirect to a 2nd level support team.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.StandardEMailAccountAddress">
	<summary>
 The common e-mail address of the 1st level support team
 </summary>
	<value>Valid e-mail address</value>
	<remarks>The e-mail address is used for all common activities inside of the camm WebManager world, for example a general contact for feedback or support requests. Mostly, the security administrators get all those e-mail. Depending of the content, they can answer directly or redirect to a 2nd level support team.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.TechnicalServiceEMailAccountName">
	<summary>
 The common e-mail address of the technical support team
 </summary>
	<value>The public title for the techical support team contact address</value>
	<remarks>The e-mail address is used for all technical activities.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.TechnicalServiceEMailAccountAddress">
	<summary>
 The common e-mail address of the technical support team
 </summary>
	<value>Valid e-mail address</value>
	<remarks>The e-mail address is used for all technical activities.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.System_SecurityQueryCache_MaxAgeInSeconds">
	<summary>
 Sets up the duration the security cache is used without refresh from the database
 </summary>
	<value></value>
	<remarks>The security queries can be cached for performace issues, but the cache could contain some old data.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SMTPServerName">
	<summary>
 The SMTP server name for sending e-mails
 </summary>
	<value></value>
	<remarks>The camm Web-Manager is heavily using e-mails for information and workflow purposes.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SMTPServerPort">
	<summary>
 The SMTP server port for sending e-mails
 </summary>
	<value></value>
	<remarks>The camm Web-Manager is heavily using e-mails for information and workflow purposes.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SMTPUserName">
	<summary>
     Sets up an user name for the SMTP server
 </summary>
	<value>The user name</value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SMTPPassword">
	<summary>
     Sets up a password for the SMTP server
 </summary>
	<value>The password</value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SMTPAuthType">
	<summary>
     Configures the authentication methods for the SMTP server
 </summary>
	<value>The authentification type, possible values are "" or "NONE", "LOGIN", "PLAIN", "CRAM-MD5", or "NTLM"</value>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.ResetUserLoginName">
	<summary>
     Only for internal use; do not use in your regular applications! Resets the logged in username to nothing
 </summary>
	<remarks>
     This method shouldn't be used by your application. Please use Logout() instead.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.SetUserLoginName(System.String)">
	<summary>
     Set up the username in the environment/session
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.CurrentUserLoginName">
	<summary>
 The currently logged on user
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.LookupUserNameByScriptEngineSessionID(System.Int32,CompuMaster.camm.WebManager.WMSystem.ScriptEngines,System.String)">
	<summary>
     Lookup the username in the list of active/current user sessions which is registered for the current browser session on the specified server
 </summary>
	<param name="serverID">The server ID which is running the requested browser session</param>
	<param name="scriptEngineID">The ID of the script engine which is related to the SessionID</param>
	<param name="scriptEngineSessionID">A SessionID string of the script engine which is registered for a special user session</param>
	<returns>The loginname of the registered user or Nothing if no user is registered for the specified browser session</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.LookupUserNameByScriptEngineSessionID(CompuMaster.camm.WebManager.WMSystem.ScriptEngines,System.String)">
	<summary>
     Lookup the username in the list of active/current user sessions which is registered for the current browser session on the specified server
 </summary>
	<param name="scriptEngineID">The ID of the script engine which is related to the SessionID</param>
	<param name="scriptEngineSessionID">A SessionID string of the script engine which is registered for a special user session</param>
	<returns>The loginname of the registered user or Nothing if no user is registered for the specified browser session</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.LookupUserSessionIDByScriptEngineSessionID(System.Int32,CompuMaster.camm.WebManager.WMSystem.ScriptEngines,System.String)">
	<summary>
     Lookup the internal session ID of a user in the list of active/current user sessions which is registered for the current browser session on the specified server
 </summary>
	<param name="serverID">The server ID which is running the requested browser session</param>
	<param name="scriptEngineID">The ID of the script engine which is related to the SessionID</param>
	<param name="scriptEngineSessionID">A SessionID string of the script engine which is registered for a special user session</param>
	<returns>The session ID in camm Web-Manager for the specified browser session or zero value (0) if no one can be found</returns>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.CurrentScriptEngineSessionID">
	<summary>
     Provides the current script engine session ID or a randomized session ID for non-http applications
 </summary>
	<value></value>
	<remarks>
 May throw an exception in web environments if no session ID can be looked up from cookie or ASP.NET session handler
 In windows or console applications, there will be returned a self-created session ID
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem._CurrentServerIdentString">
	<summary>
 The identification string of the current web server instance
 </summary>
	<remarks><para>The current webserver has to be identifiable by camm Web-Manager to be a known server of a known server group. Each server has got its own identification string. In the easiest case, the identification string contains the IP address of the web server.</para>
		<para>ATTENTION: The maximum length of this value is 32 characters.</para></remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem._ConnectionString">
	<summary>
 The connection string to the database
 </summary>
	<remarks></remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.DebugLevels.NoDebug">
	<summary>
     No debugging
 </summary>
	<remarks>
     This feature is set to disabled.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.DebugLevels.Low_WarningMessagesOnAccessError">
	<summary>
     Access error warnings only
 </summary>
	<remarks>
     Warning messages will be sent to the developer contact configured in your config files.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.DebugLevels.Low_WarningMessagesOnAccessError_AdditionalDetails">
	<summary>
     More access error warnings
 </summary>
	<remarks>
     Additional warning messages will be sent to the developer contact configured in your config files.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.DebugLevels.Medium_LoggingOfDebugInformation">
	<summary>
     Actively collect data for debugging
 </summary>
	<remarks>
     Even more additional warning messages will be sent to the developer contact configured in your config files.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.DebugLevels.Medium_LoggingOfDebugInformation_AdditionalDetails">
	<summary>
     Send all e-mails to developer account - never use in production environments!
 </summary>
	<remarks>
		<para>ATTENTION: Never use this mode in production environments!</para>
		<para>All e-mails will be redirected to the developer; no e-mail will be sent to the origin receipient. This is optimal for project development and testing environments.</para>
		<para>The messages will be sent to the developer contact configured in your config files.</para>
	</remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.DebugLevels.Medium_LoggingAndRedirectAllEMailsToDeveloper">
	<summary>
     Send all e-mails to developer account - never use in production environments!
 </summary>
	<remarks>
		<para>ATTENTION: Never use this mode in production environments!</para>
		<para>All e-mails will be redirected to the developer; no e-mail will be sent to the origin receipient. This is optimal for project development and testing environments.</para>
		<para>The messages will be sent to the developer contact configured in your config files.</para>
	</remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.DebugLevels.Max_RedirectPageRequestsManually">
	<summary>
     Maximum debug level - never use in production environments!
 </summary>
	<remarks>
		<para>ATTENTION: Never use this mode in production environments!</para>
		<para>All e-mails will be redirected to the developer; no e-mail will be sent to the origin receipient. This is optimal for setting up the project.</para>
		<para>The messages will be sent to the developer contact configured in your config files.</para>
		<para>Automatic redirects have to be manually executed. This is ideally for solving redirection bugs or when loosing session paths in cookieless scenarios.</para>
	</remarks>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.DebugLevels">
	<summary>
 Existing debug levels in camm Web-Manager
 </summary>
	<remarks></remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.SpecialGroups.Group_Supervisors">
	<summary>
 Supervisors
 </summary>
	<remarks>A supervisor has got all authorizations, sees everthing, can do everything.</remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.SpecialGroups.Group_SecurityAdministrators">
	<summary>
 Security administrators
 </summary>
	<remarks>
		<para>Security administrators manage the incoming account creation notifications, assign authorizations, trouble shoot users with their problems.</para>
		<para>The possibilities to manage authorizations, etc. are defined by the delegation of security authorizations.</para>
		<para>The security administrator gets a notification when a user account has been created. So, he's able to authorize the new user for all applications, the security administrator is responsible for assignments.</para>
		<list>
			<listheader>Following security authorizations exist:</listheader>
			<item>Owner</item>
			<item>New</item>
			<item>Delete</item>
			<item>Update</item>
			<item>Update relations</item>
			<item>Security Master (available only in applications overview or users overview)</item>
		</list>
	</remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.SpecialGroups.Group_SecurityRelatedContacts">
	<summary>
 Users who may access security administration area for review purposes (e.g. log access)
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.SpecialGroups.Group_DataProtectionCoordinators">
	<summary>
 Users who are responsible for data protection compliance and rules
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.SpecialGroups.Group_SecurityAccessEverything">
	<summary>
 Users who are allowed to access all applications/security objects, but without supervisor priviledges for administration
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.SpecialGroups">
	<summary>
 Special pre-defined groups in camm Web-Manager
 </summary>
	<remarks></remarks>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.SpecialUsers">
	<summary>
 Special users/groups pre-defined by camm Web-Manager
 </summary>
	<remarks>
     Values &gt; 0 are really existing users;
     Values &lt; 0 are pseudonyms
     Values = 0 are invalid
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.ScriptEngines">
	<summary>
 Supported script engines of camm Web-Manager
 </summary>
	<remarks></remarks>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.Logging_ConflictTypes">
	<summary>
 Values for the different events in the protocol
 </summary>
	<remarks></remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.ReturnValues_UserValidation.UnknownError">
	<summary>
     Unknown error without any detailed message
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.ReturnValues_UserValidation.ServerNotFound">
	<summary>
     Angegebener Server nicht gefunden oder deaktiviert
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.ReturnValues_UserValidation.NoLoginRightForThisServer">
	<summary>
     Benutzer hat (keine) Anmeldeerlaubnis auf diesem Server (oder unvollständige Parameterliste)
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.ReturnValues_UserValidation.ValidationSuccessfull_ButNoAuthorizationForRequiredSecurityObject">
	<summary>
     Keine Berechtigung für angeforderte Anwendung, Login jedoch erfolgreich
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.ReturnValues_UserValidation.AlreadyLoggedIn">
	<summary>
     Bereits angemeldet
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.ReturnValues_UserValidation.AccessDenied">
	<summary>
     Access denied (Benutzer fehlt Recht)
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.ReturnValues_UserValidation.TooManyLoginFailures">
	<summary>
     Login zu oft fehlgeschlagen! Konto gesperrt!
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.ReturnValues_UserValidation.ValidationSuccessfull">
	<summary>
     Validierung erfolgreich
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.ReturnValues_UserValidation.UserOrPasswortMisstyped_OR_AccountLocked_OR_LoginDeniedAtThisServerGroup">
	<summary>
     User oder Passwort oder beides konnten nicht authentifiziert werden oder Konto gesperrt oder Anmeldung auf Server verweigert
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.ReturnValues_UserValidation.UserNotFound_BecauseOf_UserAccountAccessability">
	<summary>
     CurUserAccountAccessability Is Null --&gt; User nicht gefunden
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.ReturnValues_UserValidation.UserAccountLocked">
	<summary>
     Benutzerkonto gesperrt
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.ReturnValues_UserValidation.LoginFromAnotherWorkstation">
	<summary>
     Reauthentifizierung fehlgeschlagen (Login von einer anderen Station)
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.ReturnValues_UserValidation.LoginRequired">
	<summary>
     Login ausstehend und erforderlich
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.ReturnValues_UserValidation.UserForDemandedExternalAccountNotFound">
	<summary>
     The lookup process for an external account name hasn't found a matching user
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.ReturnValues_UserValidation">
	<summary>
     Return values of the validation method for users
 </summary>
	<remarks>
     kein Record    --&gt;	    nicht definiert! --&gt; Fehler!
     DBNull	        --&gt;     nicht definiert! --&gt; Fehler!
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.SystemAppTypes.UserDefined">
	<summary>
     Default item
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.SystemAppTypes.LoginServer">
	<summary>
     Master server items are subject of changes while reconfiguration of master server setup
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.SystemAppTypes.AdminServer">
	<summary>
     Admin server items are subject of changes while reconfiguration of admin server setup
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.SystemAppTypes.AdminServerCategory3">
	<summary>
     Admin server items are subject of changes while reconfiguration of admin server setup
 </summary>
	<remarks>
 Status per 2016-07-29 JW: exact intention is unknown why to use ID values 2 and 3 - in SQL maybe a difference in how/when deleting auths, but at the end not the real matter?!?
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.SystemAppTypes">
	<summary>
     System application types
 </summary>
	<remarks>
     Attached servers like SAP, DocWare are using SystemAppTypes IDs &lt; 0 (smaller than zero)
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObjectSuccessfullyTested">
	<summary>
     The name of a security object that has been successfully checked for authorization
 </summary>
	<value>The name of the security object</value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SecurityObject">
	<summary>
     The name of a security object to be automatically checked for authorization when the page loads
 </summary>
	<value>The name of the security object</value>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.IsConfigurationLoaded">
	<summary>
 Indicates if the configuration has been loaded and authorization checks may successfully complete
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetHtmlMetaBlock">
	<summary>
     Get the META information for placing it into the HTML head area.
 </summary>
	<returns>A string with some META information for the current page</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserPassword(System.String)">
	<summary>
     Recover the password of a user
 </summary>
	<param name="MyLoginName">Login name of the user</param>
	<returns>The demanded password. If decryption isn't possible, an empty string</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserPassword(System.String,System.String)">
	<summary>
     Recover the password of a user
 </summary>
	<param name="MyLoginName">Login name of the user</param>
	<param name="MyEMailAddress">The user's e-mail address</param>
	<returns>The demanded password. If decryption isn't possible, an empty string</returns>
	<remarks>Keeping this around for now as I don't know whether there is code out there using this function and passing the email address which is of course unnecessary when you have unique usernames... </remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.DatabaseIsNewerBuildThanWebManagerApplication">
	<summary>
     Is the Web-Manager database newer than this application? If yes, we're incompatible to the new database!
 </summary>
	<value></value>
	<remarks>
     Used from property ConnectionString only
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.URLReplacements">
	<summary>
     Collection of strings to be replaced in hyperlinks
 </summary>
	<value>The new collection</value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.CurrentServerIdentStringNoAutoLookup">
	<summary>
     The server identification string of the current server
 </summary>
	<value>A server identification string</value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.CurrentServerIdentString">
	<summary>
     The server identification string of the current server
 </summary>
	<value>A server identification string</value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.CurrentServerInfo">
	<summary>
     The server information object of the current server
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.CurrentRemoteClientAddress">
	<summary>
     The address of the client accessing the camm Web-Manager system
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.SafeMode">
	<summary>
     Safe mode is for error page to allow ignoring of exceptions while loading the custom configuration
 </summary>
	<value></value>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.Initialized">
	<summary>
     Track initialization state because a repeated initalization would lead to an override of LogonScriptUrls and others which might be customized (e. g. in cookieless scenarios)
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ConnectionString">
	<summary>
     The connection string to the camm Web-Manager database
 </summary>
	<value>A string containing all information required to successfully establish a connection to the database</value>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.TripleState">
	<summary>
     Represents a state with 3 possible values: True, False and Undefined (default)
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.CheckCompatibilityToDatabaseByBuildNumber">
	<summary>
     Check the database build number to be smaller or equal than this camm Web-Manager version (the DLL).
 </summary>
	<remarks>
     Throws an exception if the database is newer than this application. This is to prevent data corruption by old methods.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.CurrentWebAppAssemblyLocation">
	<summary>
 A unique assembly location for each logical (IIS) web application
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.CurrentWebAppInstanceID">
	<summary>
 A unique hash ID for each logical (IIS) web application
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.LogAssemblyVersionToDatabaseOnce">
	<summary>
 Log the current assembly version and its execution location to the database
 </summary>
	<remarks>
 This feature assists the website administrator to review potential breakdowns before he updates the database build no. A newer database version than the CWM assembly version which would lead to an application break-down.
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.AutoSecurityCheckLogsPageHit">
	<summary>
 Enumeration of available behaviours for property AutoSecurityCheckLogsPageAccess
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.AutoSecurityCheckLogsPageAccess">
	<summary>
 If the authorization of the current user to the current security object is checked by camm Web-Manager automatisms, how shall the page access be logged?
 </summary>
	<value></value>
	<remarks>
 As soon as you set up a value for property SecurityObject, camm Web-Manager automatically checks if the current user is really authorized to access this security object.
 By default, all security validations will be handled as a page access in the log analysis. In some cases, it may be useful to not log every access as a hit. For this, you can setup the required behaviour regarding the logging of hits.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.#ctor(System.String)">
	<summary>
     Creates a new instance of the camm Web-Manager
 </summary>
	<param name="databaseConnectionString">The connection string to the database</param>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem._ignoreCheckCompatibilityToDatabaseByBuildNumber">
	<summary>
 Compatibility check library vs. database version: standard behaviour must be to ensure data integrity starting with checks for too old CWM libs not being trusted to cooperate correctly in all situations with newer CWM database version
 </summary>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.AdditionalConfiguration">
	<summary>
 Additional configuration values setup from e.g. global.asax in MS Azure cloud service environments
 </summary>
	<value></value>
	<remarks>Config values are considered if the configuration value hasn't been found in web.config (missing or empty value)</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.#ctor">
	<summary>
     Creates a new instance of the camm Web-Manager
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.#ctor(System.Type)">
	<summary>
     Creates a new instance of the camm Web-Manager - internal version to prevent the obsoletion warning
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.CalculateUrl(System.Int32,System.Int32,System.String)">
	<summary>
     Create an absolute URL with protocol, server name and port, the path and if required a session ID modifier
 </summary>
	<param name="serverID">The server this URL shall target to</param>
	<param name="scriptEngineID">The script engine ID in charge</param>
	<param name="pathFromRootDirectory">The path to the requested file on the server</param>
	<history>
 	[adminsupport]	23.04.2005	Created

 </history>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.CalculateUrlConstructor(System.String,System.Int32,System.String,System.String)">
	<summary>
     Create the new URL by inserting the given pieces of the new URL at the correct position
 </summary>
	<param name="serverUrlWithoutTrailingSlash">Protocol and server name and port</param>
	<param name="scriptEngineID">The script engine ID in charge</param>
	<param name="urlPartForSessionIDOfScriptEngine">The session ID string as it can be inserted into the URL inclusive a leading path separator</param>
	<param name="pathFromRootDirectory">The path to the requested file on the server</param>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.PerformanceMethods">
	<summary>
 Methods for fast data querying
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetNextLogonURI(System.String)">
	<summary>
     Get the next relogon address to make the roundtrip to all web servers and their script engines and to enable/refresh the session state
 </summary>
	<param name="LoginNameOfUser">Login name of the user</param>
	<returns>A URL where to redirect to</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_SupportsMultiplePasswordAlgorithms">
	<summary>
 Checks whether database schema supports multiple password algorithms. Older versions don't.
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetDefaultPasswordAlgorithm">
	<summary>
 Fetches the default algorithm selected by the admin
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_SetDefaultPasswordAlgorithm(CompuMaster.camm.WebManager.PasswordAlgorithm)">
	<summary>
 Sets the default algorithm 
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetPasswordRecoveryBehavior">
	<summary>
 Returns the behavior chosen for password recovery by the administrator
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_SetPasswordRecoveryBehavior(CompuMaster.camm.WebManager.PasswordRecoveryBehavior)">
	<summary>
 Sets the password recovery behavior
 </summary>
	<param name="behavior"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetCryptedUserPassword(System.String)">
	<summary>
 Returns the crypted password of a user
 </summary>
	<param name="username">user who's crypted password should be returned.</param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserPasswordTransformationResult(System.String)">
	<summary>
 Returns the transformation result structure, containing the crypted password, algorithm and IV/salt used. 
 </summary>
	<param name="userName">u</param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_IsSessionTerminated(System.String)">
	<summary>
     Is the user's camm Web-Manager session terminated?
 </summary>
	<param name="LoginNameOfUser">The login name to be checked</param>
	<returns>True when the session has ended</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.TryToRetrieveUserNameFromScriptEngineSessionID">
	<summary>
     Try to get an earlier unclosed Web-Manager session with our webserver session ID
 </summary>
	<remarks>
     Only for internal use; this method is not intended for execution by your applications
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetNextLogonURIOfUserAnonymous">
	<summary>
     Get the next relogon address to make the roundtrip to all web servers and their script engines and to enable/refresh the session state
 </summary>
	<returns>A URL where to redirect to</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetServerURL(System.String)">
	<summary>
     Get the URL of the requested server
 </summary>
	<param name="ServerIP">The server identification string to get the URL from</param>
	<returns>A URL like https://www.yourcompany.com without a trailing slash</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetMasterServerURL(System.String)">
	<summary>
     Get the URL of the master server of the requested server
 </summary>
	<param name="ServerIP">The server identification string to get the master server URL from</param>
	<returns>A URL like https://www.yourcompany.com without a trailing slash</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserAdminServer_SystemURL(System.String)">
	<summary>
     Get the URL of the administration server of the requested server
 </summary>
	<param name="ServerIP">The server identification string to get the administration server URL from</param>
	<returns>A URL like https://www.yourcompany.com/sysdata/admin/ with a trailing slash</returns>
	<remarks>
     The returned URL also contains the session ID in cookie-less environments
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetServerGroupTitle(System.String)">
	<summary>
     Get the server group title of the requested server
 </summary>
	<param name="ServerIP">A server identification string</param>
	<returns>The requested server group title</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetServerGroupImageSmallAddr(System.String)">
	<summary>
     Get the address to the small server group image of the requested server
 </summary>
	<param name="ServerIP">A server identification string</param>
	<returns>An URL to the requested server group logo</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetServerGroupImageBigAddr(System.String)">
	<summary>
     Get the address to the big server group image of the requested server
 </summary>
	<param name="ServerIP">A server identification string</param>
	<returns>An URL to the requested server group logo</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetServerID(System.String)">
	<summary>
     Get a server ID value by the server identification string
 </summary>
	<param name="ServerIP">A server identification string, if missing this will be the current server</param>
	<returns>A server ID</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetServerInfo(System.String)">
	<summary>
     Get detailled information on the current or another server
 </summary>
	<param name="ServerIP">A server identification string, if missing this is the current server</param>
	<returns>A ServerInformation object with detailled data</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetServerConfig(System.String,System.String)">
	<summary>
     Query for a special property of a server configuration
 </summary>
	<param name="ServerIP">A server identification string</param>
	<param name="PropertyName">The name of the required property</param>
	<returns>The requested property value, may be DBNull</returns>
	<remarks>
     Once the server information has been queried, it will be cached in the application context for the next request
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.IsUserAuthorized(System.String)">
	<summary>
     Query the authorization status of the current user for a given security object name, but doesn't create any log records
 </summary>
	<param name="SecurityObjectName">A name of a security object</param>
	<returns>True if the current user is authorized for that security object at the current server</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.IsUserAuthorized(System.String,System.String)">
	<summary>
     Query the authorization status of the current user for a given security object name, but doesn't create any log records
 </summary>
	<param name="SecurityObjectName">A name of a security object</param>
	<param name="ServerName">The server identification string where the security object should be validated</param>
	<returns>True if the current user is authorized for that security object at the required server</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.IsUserAuthorized(System.String,System.Boolean,System.Boolean)">
	<summary>
     Query the authorization status of the current user for a given security object name, but doesn't create any log records
 </summary>
	<param name="SecurityObjectName">A name of a security object</param>
	<param name="AllowSecurityCache_Read">Allow to read this information from the cache</param>
	<param name="AllowSecurityCache_Write">Allow to write this information to the cache</param>
	<returns>True if the current user is authorized for that security object at the required server</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.IsUserAuthorized(System.String,System.String,System.Boolean,System.Boolean)">
	<summary>
     Query the authorization status of the current user for a given security object name, but doesn't create any log records
 </summary>
	<param name="SecurityObjectName">A name of a security object</param>
	<param name="ServerName">The server identification string where the security object should be validated</param>
	<param name="AllowSecurityCache_Read">Allow to read this information from the cache</param>
	<param name="AllowSecurityCache_Write">Allow to write this information to the cache</param>
	<returns>True if the current user is authorized for that security object at the required server</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.IsUserAuthorized(System.Int64,System.String,System.String)">
	<summary>
     Query the authorization status of the current user for a given security object name, but doesn't create any log records
 </summary>
	<param name="userID">A user ID</param>
	<param name="securityObjectName">A name of a security object</param>
	<param name="serverName">The server identification string where the security object should be validated</param>
	<returns>True if the current user is authorized for that security object at the required server</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.IsUserAuthorized(System.Int64,System.Int32,CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation)">
	<summary>
     Query the authorization status of the current user for a given security object name, but doesn't create any log records
 </summary>
	<param name="userID">A user ID</param>
	<param name="securityObjectID">An ID of a security object</param>
	<param name="serverGroupInfo">The server group where the security object shall be validated</param>
	<returns>True if the current user is authorized for that security object at the required server</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.IsUserAuthorized(System.Int64,System.Int32,System.Int32)">
	<summary>
     Query the authorization status of the current user for a given security object name, but doesn't create any log records
 </summary>
	<param name="userID">A user ID</param>
	<param name="securityObjectID">An ID of a security object</param>
	<param name="serverGroupID">The server group ID where the security object shall be validated</param>
	<returns>True if the current user is authorized for that security object at the required server</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.IsUserAuthorized(System.Int64,System.String,CompuMaster.camm.WebManager.WMSystem.ServerInformation)">
	<summary>
     Query the authorization status of the current user for a given security object name, but doesn't create any log records
 </summary>
	<param name="userID">A user ID</param>
	<param name="securityObjectName">A name of a security object (which might exist under several security object IDs)</param>
	<param name="serverInfo">The server where the security object shall be validated</param>
	<returns>True if the current user is authorized for that security object at the required server</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.IsUserAuthorized(System.Int64,System.String,CompuMaster.camm.WebManager.WMSystem.ServerGroupInformation)">
	<summary>
     Query the authorization status of the current user for a given security object name, but doesn't create any log records
 </summary>
	<param name="userID">A user ID</param>
	<param name="securityObjectName">A name of a security object (which might exist under several security object IDs)</param>
	<param name="serverGroupInfo">The server group where the security object shall be validated</param>
	<returns>True if the current user is authorized for that security object at the required server</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.IsUserAuthorized(System.Int64,System.String,System.Int32)">
	<summary>
     Query the authorization status of the current user for a given security object name, but doesn't create any log records
 </summary>
	<param name="userID">A user ID</param>
	<param name="securityObjectName">A name of a security object (which might exist under several security object IDs)</param>
	<param name="serverGroupID">The server group ID where the security object shall be validated</param>
	<returns>True if the current user is authorized for that security object at the required server</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.IsUserAuthorized(System.Int64,System.String,System.String,System.Boolean,System.Boolean)">
	<summary>
     Query the authorization status of the current user for a given security object name, but doesn't create any log records
 </summary>
	<param name="userID">A user ID</param>
	<param name="securityObjectName">A name of a security object</param>
	<param name="serverName">The server identification string where the security object should be validated</param>
	<param name="allowSecurityCache_Read">Allow to read this information from the cache</param>
	<param name="allowSecurityCache_Write">Allow to write this information to the cache</param>
	<returns>True if the current user is authorized for that security object at the required server</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_IsUserAuthorizedForApp(System.String,System.String,System.Boolean,System.Boolean)">
	<summary>
     Query the authorization status of the current user for a given security object name, but doesn't create any log records
 </summary>
	<param name="SecurityObjectName">A name of a security object</param>
	<param name="ServerName">The server identification string where the security object should be validated</param>
	<param name="AllowSecurityCache_Read">Allow to read this information from the cache</param>
	<param name="AllowSecurityCache_Write">Allow to write this information to the cache</param>
	<returns>True if the current user is authorized for that security object at the required server</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem._IsUserAuthorized(System.String,System.String,System.Boolean,System.Boolean)">
	<summary>
     Query the authorization status of the current user for a given security object name, but doesn't create any log records
 </summary>
	<param name="SecurityObjectName">A name of a security object</param>
	<param name="ServerName">The server identification string where the security object should be validated</param>
	<param name="AllowSecurityCache_Read">Allow to read this information from the cache</param>
	<param name="AllowSecurityCache_Write">Allow to write this information to the cache</param>
	<returns>True if the current user is authorized for that security object at the required server</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem._IsUserAuthorized(System.String,System.String,System.String,System.Boolean,System.Boolean)">
	<summary>
     Query the authorization status of the current user for a given security object name, but doesn't create any log records
 </summary>
	<param name="UserName">An user name or an empty string for anonymous user (invalid user names or user names of deleted users will be treated as anonymous user)</param>
	<param name="SecurityObjectName">A name of a security object</param>
	<param name="ServerName">The server identification string where the security object should be validated</param>
	<param name="AllowSecurityCache_Read">Allow to read this information from the cache</param>
	<param name="AllowSecurityCache_Write">Allow to write this information to the cache</param>
	<returns>True if the current user is authorized for that security object at the required server</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_IsValidLanguageID(System.Int32)">
	<summary>
     Validates if the given language ID is valid and active
 </summary>
	<param name="LanguageID">The ID to be verified</param>
	<returns>True if it's activated</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetSessionValue(System.String)">
	<summary>
     Get a value saved in the user's camm Web-Manager session
 </summary>
	<param name="SettingName">The name of the value</param>
	<returns>The requested value (can be DBNull)</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_SetSessionValue(System.String,System.Object)">
	<summary>
     Save a value in the user's camm Web-Manager session
 </summary>
	<param name="SettingName">The name of the variable where to save the value</param>
	<param name="SettingValue">The value to be saved</param>
	<returns>A boolean value which indicates a successfull write operation</returns>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.ActiveMarkets">
	<summary>
     Available markets for activation/localization
 </summary>
	<value>An array of integers representing the IDs of the markets</value>
	<remarks>
     The browsers will be asked for its preferred language, but is that language offered by the camm Web-Manager system?
     Per default, camm Web-Manager provides all activated languages, but you can also provide a custom value by the configuration file.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.IsMarketActivated(System.Int32)">
	<summary>
     Is the given market one of the supported/active markets?
 </summary>
	<param name="marketID">A market ID to validate</param>
	<returns>True when it is supported/activated, otherwise False</returns>
	<remarks>
 If the application defines any supported languages in the configuration file, this list of market IDs will be used for checking, otherwise the general list of activated markets will be loaded from the database.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.GetBrowserPreferredLanguage">
	<summary>
     Detect the favorite browser language which is supported by the currently configured instance of camm Web-Manager
 </summary>
	<returns>The language ID which matches best; if nothing matches, the result is 1 (English)</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.LookupCurrentMarket">
	<summary>
     Auto-detect the best match for the current market/language
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.CurLanguage(System.Int32)">
	<summary>
     The current language
 </summary>
	<param name="ForceLanguageForThisPage">Force this language ID for this page only</param>
	<returns>The current language ID</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.CurLanguage">
	<summary>
     The current market
 </summary>
	<returns>The current market ID</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.CurLanguage(CompuMaster.camm.WebManager.WMSystem.LanguageInformation)">
	<summary>
     The current market
 </summary>
	<param name="ForceLanguageForThisPage">Force this market ID for this page only</param>
	<returns>The current market ID</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.CurLanguageInfo">
	<summary>
     The current market
 </summary>
	<returns>The current market information object</returns>
	<remarks>
     Requires a database connection
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.CurLanguageInfo(CompuMaster.camm.WebManager.WMSystem.LanguageInformation)">
	<summary>
     The current market
 </summary>
	<param name="ForceLanguageForThisPage">Force this market ID for this page only</param>
	<returns>The current market information object</returns>
	<remarks>
     Requires a database connection
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.CurLanguageInfo(System.Int32)">
	<summary>
     The current market
 </summary>
	<param name="ForceLanguageForThisPage">Force this market ID for this page only</param>
	<returns>The current market information object</returns>
	<remarks>
     Requires a database connection
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UILanguage">
	<summary>
     The language ID of the current market
 </summary>
	<returns>An integer value with the ID of the language of the current market</returns>
	<remarks>
     This is the value you receive when you ask for the alternative language of a market/language.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UIMarket">
	<summary>
     The ID value of the current market
 </summary>
	<returns>An integer value with the ID of the current market</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UIMarket(System.Int32)">
	<summary>
     The ID value of the current market
 </summary>
	<param name="forceMarketLanguageForThisPage">Force this market ID for this page only</param>
	<returns>An integer value with the ID of the current market</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UIMarket(CompuMaster.camm.WebManager.WMSystem.LanguageInformation)">
	<summary>
     The ID value of the current market
 </summary>
	<param name="forceMarketLanguageForThisPage">Force this market for this page only</param>
	<returns>An language information object with meta data on the current market</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UIMarketInfo">
	<summary>
     The current market
 </summary>
	<returns>An language information object with meta data on the current market</returns>
	<remarks>
     Requires a database connection
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UIMarketInfo(CompuMaster.camm.WebManager.WMSystem.LanguageInformation)">
	<summary>
     The current market
 </summary>
	<param name="ForceMarketForThisPage">Force this language ID for this page only</param>
	<returns>An language information object with meta data on the current market</returns>
	<remarks>
     Requires a database connection
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.UIMarketInfo(System.Int32)">
	<summary>
     The current market
 </summary>
	<param name="ForceMarketForThisPage">Force this language ID for this page only</param>
	<returns>An language information object with meta data on the current market</returns>
	<remarks>
     Requires a database connection
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetCurUserID">
	<summary>
     Get the current user ID; requires a successfull login, first
 </summary>
	<returns>The ID of the current user</returns>
	<remarks>
     If no user has logged in, this function throws an exception
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.CurrentUserInfo">
	<summary>
     Get the current user information object; requires a successfull login, first
 </summary>
	<returns>The user information object of the current user</returns>
	<remarks>
     If no user has logged in, this function aborts, throws a runtime exception and redirect the browser to an error page
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.CurrentUserInfo(CompuMaster.camm.WebManager.WMSystem.SpecialUsers)">
	<summary>
     Get the current user information object
 </summary>
	<returns>The user information object of the current user</returns>
	<remarks>
     If no user has logged in, this function aborts, throws a runtime exception and redirect the browser to an error page
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.InternalCurrentUserID">
	<summary>
     Get the current user ID; requires a successfull login, first
 </summary>
	<returns>The ID of the current user</returns>
	<remarks>
     If no user has logged in, this function aborts, throws a runtime exception and redirect the browser to an error page
 </remarks>
	<exception cref="T:System.Exception">May throw an Exception when no user is logged on</exception>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.CurrentUserID">
	<summary>
     Get the current user ID; requires a successfull login, first
 </summary>
	<returns>The ID of the current user</returns>
	<remarks>
     If no user has logged in, this function aborts, throws a runtime exception and redirect the browser to an error page
 </remarks>
	<exception cref="T:System.Exception">May throw an Exception when no user is logged on</exception>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetCurUserID(CompuMaster.camm.WebManager.WMSystem.SpecialUsers)">
	<summary>
     Get the current user ID or SpecialUsers.User_Anonymous when no user has logged on or an alternative ID when the current context is not in an HTTP application
 </summary>
	<returns>The ID of the current user</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.CurrentUserID(CompuMaster.camm.WebManager.WMSystem.SpecialUsers)">
	<summary>
     Get the current user ID or SpecialUsers.User_Anonymous (for HttpContexts) or the alternative ID (for non-HttpContexts)
 </summary>
	<param name="AlternativeUserIDIfNotDetectable"></param>
	<returns>The ID of the current user</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.LookupUserIDOfExternalUserAccount(System.String)">
	<summary>
 Search for a user with the specified external account name
 </summary>
	<param name="externalAccountName">The name of the external account</param>
	<returns>The user's ID or Nothing if no valid data has been found</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserIDs">
	<summary>
     Load the list of all user IDs
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_LookupUserID(System.String)">
	<summary>
     Get a user ID by a login name
 </summary>
	<param name="userLoginName">The login name to get the user ID from</param>
	<returns>The requested user ID or -1 for anonymous (=empty) user name or 0 in the case of an invalid (or deleted) login name</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_LookupUserID(System.String,CompuMaster.camm.WebManager.WMSystem.SpecialUsers)">
	<summary>
     Get a user ID by a login name
 </summary>
	<param name="userLoginName">The login name to get the user ID from</param>
	<param name="reportMissingUserAsSpecialUser">In case of a missing user (not anonymous user), report this value</param>
	<returns>The requested user ID or -1 for anonymous (=empty) user name or the value of reportMissingUserAsSpecialUser in the case of an invalid (or deleted) login name</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserID(System.String,System.Boolean)">
	<summary>
     Get a user ID by a login name
 </summary>
	<param name="userLoginName">The login name to get the user ID from</param>
	<param name="returnMinus1InsteadOfDBNullIfUserDoesntExist">If this user doesn't exist, return -1 instead of DBNull</param>
	<returns>The requested user ID or DBNull respectively -1 in the case of an invalid login name</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.IsSystemUser(System.Int64)">
	<summary>
 Check if a given user is a special user account to camm Web-Manager
 </summary>
	<param name="UserID">An ID of an user account</param>
	<remarks>
 camm Web-Manager knows some special user accounts like User_Anonymous, User_Code, User_Public, User_UpdateProcessor
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_SetUserDetail(System.Data.SqlClient.SqlConnection,System.Int64,System.String,System.Object,System.Boolean)">
	<summary>
     Set a user profile setting
 </summary>
	<param name="dbConnection">An open connection which shall be used or nothing if a new one shall be created independently and on the fly</param>
	<param name="MyUserID"></param>
	<param name="MyProperty"></param>
	<param name="MyNewValue"></param>
	<param name="DoNotLogSuccess"></param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_Get1stPreferredLanguageWhichIsSupportedByTheSystem(System.Int32)">
	<summary>
     Detect the favorite language of a user which is supported by the this configured instance of camm Web-Manager 
 </summary>
	<param name="MyUserID">A user ID</param>
	<returns>The language ID which matches best</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_Get1stPreferredLanguageWhichIsSupportedByTheSystem(System.Int64)">
	<summary>
     Detect the favorite language of a user which is supported by the this configured instance of camm Web-Manager 
 </summary>
	<param name="MyUserID">A user ID</param>
	<returns>The language ID which matches best</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_Get1stPreferredLanguageWhichIsSupportedByTheSystem(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Detect the favorite language of a user which is supported by the this configured instance of camm Web-Manager 
 </summary>
	<param name="UserInfo">A user information object</param>
	<returns>The language ID which matches best</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserAddresses(System.Int32)">
	<summary>
     Get the salutation based on the gender of the given user
 </summary>
	<param name="MyUserID">A user ID</param>
	<returns>Returns "Mr." respectively "Ms." in the current language</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserAddresses(System.Int64)">
	<summary>
     Get the salutation based on the gender of the given user
 </summary>
	<param name="MyUserID">A user ID</param>
	<returns>Returns "Mr." respectively "Ms." in the current language</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserAddresses(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Get the salutation based on the gender of the given user
 </summary>
	<param name="UserInfo">A user information object</param>
	<returns>Returns "Mr." respectively "Ms." in the current language</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserFormOfAddress(System.Int32)">
	<summary>
     Get the letter salutation based on the gender of the given user
 </summary>
	<param name="MyUserID">A user ID</param>
	<returns>Returns "Dear Mr." respectively "Dear Ms." in the current language</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserFormOfAddress(System.Int64)">
	<summary>
     Get the letter salutation based on the gender of the given user
 </summary>
	<param name="MyUserID">A user ID</param>
	<returns>Returns "Dear Mr." respectively "Dear Ms." in the current language</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserFormOfAddress(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Get the letter salutation based on the gender of the given user
 </summary>
	<param name="UserInfo">A user information object</param>
	<returns>Returns "Dear Mr." respectively "Dear Ms." in the current language</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetCurUserCompleteName">
	<summary>
     Get the complete name of a user with academic title, first name, last name
 </summary>
	<returns>The complete name of the current user, for example "Dr. Paul van Kampen" or DBNull if the user doesn't exist</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserLogonServers(System.Object)">
	<summary>
     Get a string with all logon servers for a user 
 </summary>
	<param name="userID">A user ID</param>
	<returns>A string with all relative server groups; every server group is placed in a new line.</returns>
	<remarks>
     If there is only 1 server group available, the returned string contains only the simply URL of the master server of this server group.
     Are there 2 or more server groups available then each URL of the corresponding master server is followed by the server group title in parenthesis.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_Nz(System.Object,System.Object)">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetLanguageTitle(System.Int32,System.String)">
	<summary>
     Queries detailed information for a language
 </summary>
	<param name="LanguageID">The ID of the requested language</param>
	<param name="DescriptionType">The type of the returned value: "Abbreviation", "Description_OwnLanguage", "Description_English", "Description_German", "BrowserLanguageID", "AlternativeLanguage", "IsActive"</param>
	<returns>The requested value of the requested language</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_SetLanguageState(System.Int32,System.Boolean)">
	<summary>
     Set the activation status for a market/language
 </summary>
	<param name="marketID"></param>
	<param name="activated"></param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetServerGroups">
	<summary>
     Queries for all existing server groups
 </summary>
	<returns>A hashtable with ID and name of all server groups</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserNameByScriptEngineSessionID">
	<summary>
     This method is for compatibility purposes only and subject of getting friend member in newer versions
 </summary>
	<returns>A user login name or nothing if unsuccessfull</returns>
	<remarks>
     USE ONLY FOR DEBUG/LOG OUTPUT!
     Tries to retrieve the user login name by the current script engine session ID of the current web server
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_CheckForAccessAuthorization_NoRedirect(System.String,System.Object,System.String,System.Boolean,System.Boolean)">
	<summary>
     Checks for authorization of the current user for the given security object name and creates a log entry for a page view
 </summary>
	<param name="securityObjectName">The security object ID which the user should be authorized for</param>
	<param name="intReserved">Reserved. Do not use.</param>
	<param name="serverIP">The identification string of that server where the user should has got authorization for the given security object</param>
	<param name="allowSecurityCache_Read">Allow to read the security settings from a cache, recommended for lower security issues where performance is more important</param>
	<param name="allowSecurityCache_Write">Allow to write the security to a cache, recommended for lower security issues where performance is more important</param>
	<returns>The value with detailled information on successfull or unsuccessfull validation</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_CheckForAccessAuthorization_NoRedirect(System.String,System.String@,System.Boolean,System.String,System.Boolean,System.Boolean)">
	<summary>
     Checks for authorization of the current user for the given security object name and creates a log entry for a page view
 </summary>
	<param name="securityObjectName">The security object ID which the user should be authorized for</param>
	<param name="redirect2URL">A reference to a string variable which shall be set with the suggested URL for redirection after a successfull validation. It's recommended to check the result value, first.</param>
	<param name="loggingSuccessDisabled">Disable hit logging</param>
	<param name="serverIP">The identification string of that server where the user should has got authorization for the given security object</param>
	<param name="allowSecurityCache_Read">Allow to read the security settings from a cache, recommended for lower security issues where performance is more important</param>
	<param name="allowSecurityCache_Write">Allow to write the security to a cache, recommended for lower security issues where performance is more important</param>
	<returns>The value with detailled information on successfull or unsuccessfull validation</returns>
	<remarks>
    Caution: if cache validation is used and if it is also successful, page hits will not be logged for log analysis
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem._System_CheckForAccessAuthorization_NoRedirect(System.String,System.String@,System.Boolean,System.String,System.Boolean,System.Boolean)">
	<summary>
     Checks for authorization of the current user for the given security object name and creates a log entry for a page view
 </summary>
	<param name="securityObjectName">The security object ID which the user should be authorized for</param>
	<param name="redirect2URL">A reference to a string variable which shall be set with the suggested URL for redirection after a successfull validation. It's recommended to check the result value, first.</param>
	<param name="loggingSuccessDisabled">Disable hit logging</param>
	<param name="serverIP">The identification string of that server where the user should has got authorization for the given security object</param>
	<param name="allowSecurityCache_Read">Allow to read the security settings from a cache, recommended for lower security issues where performance is more important</param>
	<param name="allowSecurityCache_Write">Allow to write the security to a cache, recommended for lower security issues where performance is more important</param>
	<returns>The value with detailled information on successfull or unsuccessfull validation</returns>
	<remarks>
    Caution: if cache validation is used and if it is also successful, page hits will not be logged for log analysis
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.RedirectToLogonPage(System.String,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Redirects to the logon page
 </summary>
	<param name="DebugDetailsOnRedirectionCause">Additional information usefull for debugging purposes</param>
	<param name="DebugDetailsOnRequest">Additional information usefull for debugging purposes</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.RedirectToLogonPage(CompuMaster.camm.WebManager.WMSystem.System_AccessAuthorizationChecks_LoginPageForwarderIDs,System.String,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Redirects to the logon page
 </summary>
	<param name="ErrorType">The cause why the user gets redirected to the logon page</param>
	<param name="DebugDetailsOnRedirectionCause">Additional information usefull for debugging purposes</param>
	<param name="DebugDetailsOnRequest">Additional information usefull for debugging purposes</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.RedirectToLogonPage(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Redirects to the logon page
 </summary>
	<param name="Redirect2ThisUrlAfterSuccessfullLogon">Redirect to this URL after a successfull login</param>
	<param name="DebugDetailsOnRedirectionCause">Additional information usefull for debugging purposes</param>
	<param name="DebugDetailsOnRequest">Additional information usefull for debugging purposes</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.RedirectToLogonPage(System.String,System.String,System.String,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Redirects to the logon page
 </summary>
	<param name="su"></param>
	<param name="ru"></param>
	<param name="DebugDetailsOnRedirectionCause">Additional information usefull for debugging purposes</param>
	<param name="DebugDetailsOnRequest">Additional information usefull for debugging purposes</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.RedirectToErrorPage(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Redirects to the error page
 </summary>
	<param name="errorDetails">The cause (free details) why the user gets redirected to the error page</param>
	<param name="debugDetailsOnRedirectionCause">Additional information usefull for debugging purposes</param>
	<param name="debugDetailsOnRequest">Additional information usefull for debugging purposes</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.RedirectToErrorPage(CompuMaster.camm.WebManager.WMSystem.System_AccessAuthorizationChecks_ErrorPageForwarderIDs,System.String,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Redirects to the error page
 </summary>
	<param name="errorType">The cause why the user gets redirected to the error page</param>
	<param name="debugDetailsOnRedirectionCause">Additional information usefull for debugging purposes</param>
	<param name="debugDetailsOnRequest">Additional information usefull for debugging purposes</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.RedirectToErrorPage(CompuMaster.camm.WebManager.WMSystem.System_AccessAuthorizationChecks_ErrorPageForwarderIDs,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
	<summary>
     Redirects to the error page
 </summary>
	<param name="errorType">The cause why the user gets redirected to the error page</param>
	<param name="errorDetails">Exception details to display to the user</param>
	<param name="debugDetailsOnRedirectionCause">Additional information usefull for debugging purposes</param>
	<param name="debugDetailsOnRequest">Additional information usefull for debugging purposes</param>
	<param name="displayFrameSet"></param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.RedirectToErrorPage(CompuMaster.camm.WebManager.WMSystem.System_AccessAuthorizationChecks_ErrorPageForwarderIDs,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.String,System.Boolean)">
	<summary>
     Redirects to the error page
 </summary>
	<param name="errorType">The cause why the user gets redirected to the error page</param>
	<param name="errorDetails">The cause (free text) why the user gets redirected to the error page</param>
	<param name="debugDetailsOnRedirectionCause">Additional information usefull for debugging purposes</param>
	<param name="debugDetailsOnRequest">Additional information usefull for debugging purposes</param>
	<param name="userName">The username which is related to the current exception (depends on SendPassword page only)</param>
	<param name="eMailAddress">The e-mail address related to the current exception (depends on SendPassword page only)</param>
	<param name="displayFrameSet"></param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.RedirectTo(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Redirects to another URL
 </summary>
	<param name="RedirectToURL">The address of the new URL</param>
	<param name="DebugDetailsOnRedirectionCause">Additional information usefull for debugging purposes</param>
	<param name="DebugDetailsOnRequest">Additional information usefull for debugging purposes</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.RedirectTo(System.String)">
	<summary>
     Redirects to another URL
 </summary>
	<param name="RedirectToURL">The address of the new URL</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.RedirectTo(System.String,System.String)">
	<summary>
     Redirects to another URL
 </summary>
	<param name="RedirectToURL">The address of the new URL</param>
	<param name="DebugDetailsOnRedirectionCause">Additional information usefull for debugging purposes</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.RedirectWithPostDataTo(System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Redirects with POST data to another URL
 </summary>
	<param name="RedirectToURL">The address of the new URL</param>
	<param name="DebugDetailsOnRedirectionCause">Additional information usefull for debugging purposes</param>
	<param name="DebugDetailsOnRequest">Additional information usefull for debugging purposes</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.AuthorizeDocumentAccess(System.String)">
	<summary>
     Checks for authorization of the current user for the given security object name and creates a log entry for a page view
 </summary>
	<param name="securityObjectName">The security object ID which the user should be authorized for</param>
	<remarks>
     This method is applicable for web applications, only, otherwise it will throw an exception respectively redirect to the logon page
     Authentication caching is not activated for this method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.AuthorizeDocumentAccess(System.String,System.String)">
	<summary>
     Checks for authorization of the current user for the given security object name and creates a log entry for a page view
 </summary>
	<param name="securityObjectName">The security object ID which the user should be authorized for</param>
	<param name="serverIdentificationString">The identification string of that server where the user should has got authorization for the given security object</param>
	<remarks>
    This method is applicable for web applications, only, otherwise it will throw an exception respectively redirect to the logon page
    Authentication caching is not activated for this method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.AuthorizeDocumentAccess(System.String,System.Boolean,System.Boolean)">
	<summary>
     Checks for authorization of the current user for the given security object name and creates a log entry for a page view
 </summary>
	<param name="securityObjectName">The security object ID which the user should be authorized for</param>
	<param name="allowSecurityCacheRead">Allow to read the security settings from a cache, recommended for lower security issues where performance is more important</param>
	<param name="allowSecurityCacheWrite">Allow to write the security to a cache, recommended for lower security issues where performance is more important</param>
	<remarks>
    This method is applicable for web applications, only, otherwise it will throw an exception respectively redirect to the logon page
    Caution: if cache validation is used and if it is also successful, page hits will not be logged for log analysis
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.AuthorizeDocumentAccess(System.String,System.String,System.Boolean,System.Boolean)">
	<summary>
     Checks for authorization of the current user for the given security object name and creates a log entry for a page view
 </summary>
	<param name="securityObjectName">The security object ID which the user should be authorized for</param>
	<param name="serverIdentificationString">The identification string of that server where the user should has got authorization for the given security object</param>
	<param name="allowSecurityCacheRead">Allow to read the security settings from a cache, recommended for lower security issues where performance is more important</param>
	<param name="allowSecurityCacheWrite">Allow to write the security to a cache, recommended for lower security issues where performance is more important</param>
	<remarks>
    This method is applicable for web applications, only, otherwise it will throw an exception respectively redirect to the logon page
    Caution: if cache validation is used and if it is also successful, page hits will not be logged for log analysis
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.AuthorizeDocumentAccess(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
     Checks for authorization of the current user for the given security object name and creates a log entry for a page view
 </summary>
	<param name="securityObjectName">The security object ID which the user should be authorized for</param>
	<param name="serverIdentificationString">The identification string of that server where the user should has got authorization for the given security object</param>
	<param name="allowSecurityCacheRead">Allow to read the security settings from a cache, recommended for lower security issues where performance is more important</param>
	<param name="allowSecurityCacheWrite">Allow to write the security to a cache, recommended for lower security issues where performance is more important</param>
	<param name="logPageHit">Log the page access as a hit in the web access logs</param>
	<remarks>
    This method is applicable for web applications, only, otherwise it will throw an exception respectively redirect to the logon page
    Caution: if cache validation is used and if it is also successful, page hits will not be logged for log analysis
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.AuthorizeDocumentAccessRedirectToLogonPageBecauseLoginIsRequired(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Redirect to the logon page when the document authorization check resulted with a login required state
 </summary>
	<param name="defaultLogonUrl">The default URL for the logon page as it has been suggested by the method AuthorizeDocumentAccess</param>
	<param name="redirectionCause">A short description why the redirect has happened</param>
	<param name="requestDetails">More information on the requested redirection</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_CheckForAccessAuthorization(System.String,System.Object,System.String,System.Boolean,System.Boolean)">
	<summary>
     Checks for authorization of the current user for the given security object name and creates a log entry for a page view
 </summary>
	<param name="securityObjectName">The security object ID which the user should be authorized for</param>
	<param name="intReserved">Reserved. No further use.</param>
	<param name="serverIP">The identification string of that server where the user should has got authorization for the given security object</param>
	<param name="allowSecurityCache_Read">Allow to read the security settings from a cache, recommended for lower security issues where performance is more important</param>
	<param name="allowSecurityCache_Write">Allow to write the security to a cache, recommended for lower security issues where performance is more important</param>
	<remarks>
    This method is applicable for web applications, only, otherwise it will throw an exception respectively redirect to the logon page
    Caution: if cache validation is used and if it is also successful, page hits will not be logged for log analysis
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem._System_CheckForAccessAuthorization(System.String,System.Boolean,System.String,System.Boolean,System.Boolean)">
	<summary>
     Checks for authorization of the current user for the given security object name and creates a log entry for a page view
 </summary>
	<param name="securityObjectName">The security object ID which the user should be authorized for</param>
	<param name="loggingSuccessDisabled">Disable hit logging</param>
	<param name="serverIP">The identification string of that server where the user should has got authorization for the given security object</param>
	<param name="allowSecurityCache_Read">Allow to read the security settings from a cache, recommended for lower security issues where performance is more important</param>
	<param name="allowSecurityCache_Write">Allow to write the security to a cache, recommended for lower security issues where performance is more important</param>
	<remarks>
    This method is applicable for web applications, only, otherwise it will throw an exception respectively redirect to the logon page
    Caution: if cache validation is used and if it is also successful, page hits will not be logged for log analysis
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.RemoteHostUrl">
	<summary>
     The server address as it shall be/has been used by the client
 </summary>
	<remarks>
     In most cases, this Uri is the same as in HttpContext.Current.Request.Url, but there might be some situations, where it's different. When you use a forwarding proxy (e. g. with Apache), the proxy might be configured to the IP address instead of the origin server name because the origin server name has been resolved to your forwarding proxy server. This situation is sometimes used for Intranets, when your firewall configuration doesn't allow a direct access to the genuine webserver. So, this method replaces the host name by the value provided by the HTTP_X_FORWARDED_HOST server variable which will be added by the forwarding proxy server.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_LoginAsUser(System.String,System.String,System.Boolean)">
	<summary>
     Login with login name and password
 </summary>
	<param name="LoginName">The login name of a user</param>
	<param name="Password">The password of this user</param>
	<param name="ForceLogin">Force the login even if the user has already logged on at another work station</param>
	<returns>A result value telling some details on successfull or unsuccessfull login</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.Login(System.String,System.String,System.Boolean)">
	<summary>
     Login with login name and password
 </summary>
	<param name="loginName">The login name of a user</param>
	<param name="password">The password of this user</param>
	<param name="forceLogin">Force the login even if the user has already logged on at another work station</param>
	<returns>A result value telling some details on successfull or unsuccessfull login, but web applications return nothing</returns>
	<remarks>
     Web applications require to login/logout to multiple servers, that's why there will be initiated some redirections 
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.ExecuteLoginWithExternalAccountInfo(System.String,System.Boolean)">
	<summary>
     Login with the account which corresponds to the name of the given, external account
 </summary>
	<param name="externalAccountName">The external account, e. g. from a MS Windows Domain (ADS)</param>
	<returns>True when the user has been logged on, false when there is already another user logged on or when the user can't be found</returns>
	<remarks>
     Do not use this method in your web applications since this method doesn't support server groups. It's intended for offline applications only.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.ExecuteLogin(System.String,System.String,System.Boolean)">
	<summary>
     Login with login name and password
 </summary>
	<param name="loginName">The login name of a user</param>
	<param name="password">The password of this user</param>
	<param name="forceLogin">Force the login even if the user has already logged on at another work station</param>
	<returns>A result value telling some details on successfull or unsuccessfull login</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem._ExecuteLogin(System.String,System.String,System.Boolean)">
	<summary>
     Login with user name and password
 </summary>
	<param name="loginName">The login name of a user</param>
	<param name="password">The password of this user</param>
	<param name="forceLogin">Force the login even if the user has already logged on at another work station</param>
	<returns>A result value telling some details on successfull or unsuccessfull login</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.PreValidateLoginCredentials(System.String,System.String,System.Boolean)">
	<summary>
 Pre-validate user login credentials without loggin in
 </summary>
	<param name="loginName">The login name of a user</param>
	<param name="password">The password of this user</param>
	<param name="ignoreCurrentlyLoggedOnState">If True, a currently logged in user will successfully validate, if False it will return with a AlreadyLoggedIn value</param>
	<remarks>In case of mistypings, the login failure number will be increased anyway.</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.ValidateLoginCredentials(System.String,System.String)">
	<summary>
 Validate a user name and its password
 </summary>
	<param name="loginName">The username</param>
	<param name="password">The password to check</param>
	<returns>True if successful else False if not matching</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.ExecuteLogin(System.String,System.Boolean)">
	<summary>
     Login with login name and password
 </summary>
	<param name="loginName">The login name of a user</param>
	<param name="forceLogin">Force the login even if the user has already logged on at another work station</param>
	<returns>A result value telling some details on successfull or unsuccessfull login</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.Logout">
	<summary>
     Logout and perform some clean ups
 </summary>
	<remarks>
     Web applications require to login/logout to multiple servers, that's why there will be initiated some redirections 
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.ExecuteLogout">
	<summary>
     Logout and perform some clean-ups
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem._ExecuteLogout(System.Boolean)">
	<summary>
     Logout and perform some clean-ups
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_ResetAuthorizationStatusCache">
	<summary>
     Reset the complete authorization cache
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetNavItems(System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
     Get all navigation items in a datatable (old result style)
 </summary>
	<param name="UserID">The user ID the navigation should be for</param>
	<param name="LanguageID">The needed language of the navigation</param>
	<param name="ServerIdentString">The server identification string for the navigation</param>
	<param name="AutoAddLogonLinks">Automatically add navigation items for login/logout, change profile, etc.</param>
	<param name="AllowCacheRead">Allow to read from a cache</param>
	<param name="AllowCacheWrite">Allow to save the navigation items to a cache</param>
	<returns>A datatable with all navigation items</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetNavItems(System.Int64,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
     Get all navigation items in a datatable (old result style)
 </summary>
	<param name="UserID">The user ID the navigation should be for</param>
	<param name="LanguageID">The needed language of the navigation</param>
	<param name="ServerIdentString">The server identification string for the navigation</param>
	<param name="AutoAddLogonLinks">Automatically add navigation items for login/logout, change profile, etc.</param>
	<param name="AllowCacheRead">Allow to read from a cache</param>
	<param name="AllowCacheWrite">Allow to save the navigation items to a cache</param>
	<returns>A datatable with all navigation items</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem._System_GetNavItems(System.Int64,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
     Get all navigation items in a datatable (old result style)
 </summary>
	<param name="UserID">The user ID the navigation should be for</param>
	<param name="LanguageID">The needed language of the navigation</param>
	<param name="ServerIdentString">The server identification string for the navigation</param>
	<param name="AutoAddLogonLinks">Automatically add navigation items for login/logout, change profile, etc.</param>
	<param name="AllowCacheRead">Allow to read from a cache</param>
	<param name="AllowCacheWrite">Allow to save the navigation items to a cache</param>
	<returns>A datatable with all navigation items</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetGroupNavigationElements(System.Int64,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
     Get all navigation items in a datatable
 </summary>
	<param name="groupID">The group ID the navigation should be for</param>
	<param name="languageID">The needed language of the navigation</param>
	<param name="serverIdentString">The server identification string for the navigation</param>
	<param name="autoAddLogonLinks">Automatically add navigation items for login/logout, change profile, etc.</param>
	<param name="allowCacheRead">Allow to read from a cache</param>
	<param name="allowCacheWrite">Allow to save the navigation items to a cache</param>
	<returns>A datatable with all navigation items</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserNavigationElements(System.Int64,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
     Get all navigation items in a datatable
 </summary>
	<param name="userID">The user ID the navigation should be for</param>
	<param name="languageID">The needed language of the navigation</param>
	<param name="serverIdentString">The server identification string for the navigation</param>
	<param name="autoAddLogonLinks">Automatically add navigation items for login/logout, change profile, etc.</param>
	<param name="allowCacheRead">Allow to read from a cache</param>
	<param name="allowCacheWrite">Allow to save the navigation items to a cache</param>
	<returns>A datatable with all navigation items</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem._System_GetGroupOrUserNavigationElements(System.Int64,System.Boolean,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
     Get all navigation items in a datatable
 </summary>
	<param name="ID">The user or group ID the navigation should be for</param>
	<param name="IsUser">Get navigation items for a user or a group</param>
	<param name="languageID">The needed language of the navigation</param>
	<param name="serverIdentString">The server identification string for the navigation</param>
	<param name="autoAddLogonLinks">Automatically add navigation items for login/logout, change profile, etc.</param>
	<param name="allowCacheRead">Allow to read from a cache</param>
	<param name="allowCacheWrite">Allow to save the navigation items to a cache</param>
	<returns>A datatable with all navigation items</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_ModifyNavLink(System.Int32,System.Object,System.Int32)">
	<summary>
     Modify a navigation link
 </summary>
	<param name="NavID">The ID of the navigation item</param>
	<param name="TableValue">The current address of the link</param>
	<param name="CompatibilityLevel">The compatiblity level for this method, &lt;=2 for old data style, &gt;=4 for new data style since MilestoneDBVersion_ApplicationsDividedIntoNavItemsAndSecurityObjects</param>
	<returns>A string with the correct value for the link address</returns>
	<remarks>
     Following substrings get replaced: "[MASTERSERVER]", "[MASTERURL]", "[LOGONPAGE]", "[LOGOFFPAGE]", "[ADMINURL]", "[SESSIONID:????]", "[SAP:????]", "[NAVID]"
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.LookupScriptEngineSessionID(System.Int32,System.Int32)">
	<summary>
     Lookup the script engine session ID of the current user on a server/script engine
 </summary>
	<param name="serverID">The server that is part of the same server group</param>
	<param name="scriptEngineID">An ID of a script engine which runs on that server</param>
	<returns>The session ID of the script engine on the specified server</returns>
	<remarks>
 Nothing will be returned e.g. WebService context is always without session data, so every lookup for a session must fail
 </remarks>
	<return>The session ID for the specified server and scriptEngine or Nothing (null) in case that the current session can't be used to lookup the CWM session details</return>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.LookupBrowserSessionIDForAnotherServerOrScriptEngineTarget(System.String,System.Int32,System.Int32,System.Int32,CompuMaster.camm.WebManager.WMSystem.ScriptEngines,System.String)">
	<summary>
     Retrieve the session ID of the current script engine on the current server from the camm Web-Manager session
 </summary>
	<param name="userName">The login name of a user</param>
	<param name="requiredServerID">The desired server for which to lookup the browser session ID</param>
	<param name="requiredScriptEngineID">The desired script engine for which to lookup the browser session ID</param>
	<param name="currentServerID">The current server with a valid/registered session</param>
	<param name="currentScriptEngineID">The current script engine with a valid/registered session</param>
	<param name="currentScriptEngineSessionID">The browser session ID for the current session</param>
	<returns>The browser session ID on the requested target or Nothing (null) if session hasn't been found</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetServerIDOfNavID(System.Int32,System.Int32)">
	<summary>
     Get the server ID from a navigation item ID
 </summary>
	<param name="NavID">A navigation item ID</param>
	<param name="CompatibilityLevel">The compatiblity level for this method, &lt;=2 for old data style, &gt;=4 for new data style since MilestoneDBVersion_ApplicationsDividedIntoNavItemsAndSecurityObjects</param>
	<returns>A server ID</returns>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.EMailAttachement.AttachmentData_Filename">
	<summary>
     The filename for the binary data
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.EMailAttachement.AttachmentFile">
	<summary>
     A path to a file which shall be included
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.EMailAttachement.PlaceholderInMHTML_ToReplaceWithCID">
	<summary>
     A placeholder string in the HTML code of the message which shall be replaced by the CID code of the attachment
 </summary>
	<remarks>
     Define the placeholder which shall be replaced by the Content-ID for the contents of a file to the email. Emails formatted in HTML can include images with this information and internally reference the image through a "cid" hyperlink.
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.EMailAttachement">
	<summary>
     An e-mail attachment
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.MailSystem">
	<summary>
     The preferred system for sending e-mails
 </summary>
	<value>The new favorite</value>
	<remarks>
     Please note: if the mail system in unavailable, camm Web-Manager tries to send the e-mail with other systems automatically.
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.MessagingEMails">
	<summary>
     The messaging methods for e-mail distribution
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.MessagingQueueMonitoring">
	<summary>
     The queue monitoring methods for message distribution
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_SendEMail(System.String,System.String,System.String,System.String,System.String,System.String,CompuMaster.camm.WebManager.WMSystem.MailImportance)">
	<summary>
     Sends an e-mail
 </summary>
	<param name="RcptName">The name of the receipient</param>
	<param name="RcptAddress">The e-mail address of the receipient</param>
	<param name="MsgSubject">A subject for the new e-mail</param>
	<param name="MsgBody">The message text</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="Priority">The priority of the e-mail</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_SendEMailEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.String@,CompuMaster.camm.WebManager.WMSystem.EMailAttachement[],CompuMaster.camm.WebManager.WMSystem.MailImportance,CompuMaster.camm.WebManager.WMSystem.MailSensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Sends an e-mail
 </summary>
	<param name="RcptName">The name of the receipient</param>
	<param name="RcptAddress">The e-mail address of the receipient</param>
	<param name="MsgSubject">A subject for the new e-mail</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="MsgTextBody">The message text as plain text</param>
	<param name="MsgHTMLBody">The message text as HTML code</param>
	<param name="MsgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<param name="Attachments">An array of optional attachments</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="RequestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="AdditionalHeaders">A collection of optinally additional e-mail headers</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_SendEMail_MultipleRcpts(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,CompuMaster.camm.WebManager.WMSystem.EMailAttachement[],CompuMaster.camm.WebManager.WMSystem.MailImportance,CompuMaster.camm.WebManager.WMSystem.MailSensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Sends an e-mail to multiple receipients
 </summary>
	<param name="RcptAddresses_To">The receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="RcptAddresses_CC">The copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="RcptAddresses_BCC">The blind copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="MsgSubject">A subject for the new e-mail</param>
	<param name="MsgTextBody">The message text as plain text</param>
	<param name="MsgHTMLBody">The message text as HTML code</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="MsgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<param name="Attachments">An array of optional attachments</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="RequestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="AdditionalHeaders">A collection of optinally additional e-mail headers</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.Log">
	<summary>
     Event log of camm Web-Manager
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.WMLog">
	<summary>
     Event log methods of camm Web-Manager
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_DebugTraceWrite(System.String,CompuMaster.camm.WebManager.WMSystem.DebugLevels)">
	<summary>
     Add a trace item into the current HTTP context
 </summary>
	<param name="message">The trace message to identify the location or the intended purpose</param>
	<param name="RequiredDebugLevel">The required debug level of camm Web-Manager</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_DebugTraceWarn(System.String,CompuMaster.camm.WebManager.WMSystem.DebugLevels)">
	<summary>
     Add a trace warning item into the current HTTP context
 </summary>
	<param name="message">The trace message to identify the location or the intended purpose</param>
	<param name="RequiredDebugLevel">The required debug level of camm Web-Manager</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_DebugServerConnectivity">
	<summary>
     Checks the connectivity and minimal configuration of a server
 </summary>
	<returns>An HTML string containing detailed information on the status of the current server</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetRequestQueryStringComplete(System.String[])">
	<summary>
     Get the complete query string of the current request in a form usable for recreating this query string for a following request
 </summary>
	<param name="removeParameters">Remove all values with this name form the query string</param>
	<returns>A new string with all query string information without the starting questionmark character</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetPublicGroupIDOfCurServer">
	<summary>
     Get the ID of the public group
 </summary>
	<returns>A group ID for the public user group</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetAnonymousGroupIDOfCurServer">
	<summary>
     Get the ID of the anonymous group
 </summary>
	<returns>A group ID for the anonymous user group</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_Version_Ex">
	<summary>
     Get the version information from the current camm Web-Manager library (cammWM.dll)
 </summary>
	<returns>The version of the executing camm Web-Manager library</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_Version">
	<summary>
     Get the version information from the current camm Web-Manager library (cammWM.dll)
 </summary>
	<returns>A string with the major and minor version of the executing camm Web-Manager library</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_Build">
	<summary>
     Get the version information from the current camm Web-Manager library (cammWM.dll)
 </summary>
	<returns>A string with the build version of the executing camm Web-Manager library</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_DBVersion_Ex">
	<summary>
     Get the version information from the current camm Web-Manager database
 </summary>
	<returns>The version of the connected camm Web-Manager database</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_DBVersion_Ex(System.Boolean)">
	<summary>
     Get the version information from the current camm Web-Manager database
 </summary>
	<param name="allowCaching">True to allow reading from cache</param>
	<returns>The version of the connected camm Web-Manager database</returns>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.InitializationStates.None">
	<summary>
     camm Web-Manager instance can't provide any services; the database connection is not available
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.InitializationStates.DatabaseAccessAvailable">
	<summary>
     Database access is available, basic logging is available
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.InitializationStates.ServerCommunicationAvailable">
	<summary>
     All features are available, but all settings are with manufacturer's default
 </summary>
	<remarks>
     Loading and saving of user profiles, server environment, etc. is available
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.InitializationStates">
	<summary>
     camm Web-Manager initialization states
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.InitializationState">
	<summary>
     Is the camm Web-Manager initialization complete minimally to allow server communication?
 </summary>
	<value></value>
	<remarks>
     There
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.IsInitializedInHttpApplication">
	<summary>
     Has the HttpApplication been initialized by a camm Web-Manager HttpApplication?
 </summary>
	<value></value>
	<remarks>
     This property will be used typically to detect if the automatic cleanup procedures in HttpApplication can work
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetLanguagesInfo(System.Boolean)">
	<summary>
     Get all data of the available languages
 </summary>
	<param name="alsoFindInactiveLanguages">Find inactive languages, too</param>
	<returns>An array of language information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetLanguagesInfo(System.Int32[],System.Boolean)">
	<summary>
     Load some language information objects
 </summary>
	<param name="marketIDs">An array of some market/language IDs</param>
	<param name="alsoFindInactiveLanguages">Find inactive languages, too</param>
	<returns>An array of language information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetLanguagesInfo(System.Int32[],System.Boolean,System.Boolean)">
	<summary>
     Load some language information objects
 </summary>
	<param name="marketIDs">An array of some market/language IDs</param>
	<param name="alsoFindInactiveLanguages">Find inactive languages, too</param>
	<param name="allowReadCache">Find inactive languages, too</param>
	<returns>An array of language information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetServerGroupsInfo">
	<summary>
     Get all server group information
 </summary>
	<returns>An array of server group information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetServerGroupsInfo(System.Int32)">
	<summary>
     Get all server group information
 </summary>
	<param name="AccessLevelID">Only retrieve servergroups available for this access level ID; use -1 if you need information on all available server groups</param>
	<returns>An array of server group information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetAccessLevelInfos(System.Int32)">
	<summary>
     Get all access level information 
 </summary>
	<returns>An array of access level information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetAccessLevelInfos">
	<summary>
     Get all access level information 
 </summary>
	<returns>An array of access level information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetServersInfo(System.Int32)">
	<summary>
     Get all server information
 </summary>
	<param name="ServerGroupID">Only retrieve servers of a special server group ID</param>
	<returns>An array of server information</returns>
	<remarks>
     No caching of any data
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetCurUserInfo">
	<summary>
     Get the current user information
 </summary>
	<returns>A user information</returns>
	<remarks>
     Throws an exception if there is no user logged on 
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_CreateGroup(System.String,System.Int64,System.String)">
	<summary>
     Create a new user group
 </summary>
	<param name="groupName">The new group name</param>
	<param name="changedByUserID">Who shall be tracked as modifier?</param>
	<param name="groupDescription"></param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_UpdateGroup(CompuMaster.camm.WebManager.WMSystem.GroupInformation,System.Int64)">
	<summary>
     Save changes of the group information (without memberships)
 </summary>
	<param name="groupInfo">The group information object which shall be saved</param>
	<param name="changedByUserID">Who shall be tracked as modifier?</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_RemoveGroup(System.Int32)">
	<summary>
     Drop the group with the given ID
 </summary>
	<param name="groupID">The ID of a group</param>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_SetUserInfo(CompuMaster.camm.WebManager.WMSystem.UserInformation@,System.String@,CompuMaster.camm.WebManager.WMSystem.WMNotifications)">
	<summary>
     Save changes to a user information object 
 </summary>
	<param name="UserInfo">The user information object</param>
	<param name="NewPassword">A new password</param>
	<param name="Notifications">The notifications for sending appropriate information to the user</param>
	<returns>The ID of that user profile that has been saved</returns>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_SetUserInfo(CompuMaster.camm.WebManager.WMSystem.UserInformation@,System.String@,CompuMaster.camm.WebManager.WMSystem.WMNotifications,System.Boolean)">
	<summary>
     Save changes to a user information object 
 </summary>
	<param name="userInfo">The user information object</param>
	<param name="newPassword">A new password</param>
	<param name="notifications">The notifications for sending appropriate information to the user</param>
	<param name="suppressNotifications">False sends e-mails regulary, true disables all user notifications</param>
	<returns>The ID of that user profile that has been saved</returns>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_SetUserInfo(CompuMaster.camm.WebManager.WMSystem.UserInformation@,System.String@,CompuMaster.camm.WebManager.Notifications.INotifications,System.Boolean)">
	<summary>
     Save changes to a user information object 
 </summary>
	<param name="userInfo">The user information object</param>
	<param name="newPassword">A new password</param>
	<param name="notifications">The notifications for sending appropriate information to the user</param>
	<param name="suppressAllNotifications">False sends e-mails regulary, true disables all user and admin notifications</param>
	<returns>The ID of that user profile that has been saved</returns>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_SetUserInfo(CompuMaster.camm.WebManager.WMSystem.UserInformation@,System.String@,CompuMaster.camm.WebManager.Notifications.INotifications,System.Boolean,System.Boolean)">
	<summary>
     Save changes to a user information object 
 </summary>
	<param name="userInfo">The user information object</param>
	<param name="newPassword">A new password</param>
	<param name="notifications">The notifications for sending appropriate information to the user</param>
	<param name="suppressUserNotifications">False sends e-mails regulary, true disables all user notifications</param>
	<param name="suppressSecurityAdminNotifications">False sends e-mails regulary, true disables all admin notifications</param>
	<returns>The ID of that user profile that has been saved</returns>
	<remarks>
 ATTENTION: if the user profile hasn't been fully loaded, changes might be lost because of internally caused full load commands initiated by the save method
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserInfo(System.Int32)">
	<summary>
     Get a user information object
 </summary>
	<param name="UserID">A user ID</param>
	<returns>A user information object</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserInfo(System.Int64)">
	<summary>
     Get a user information object
 </summary>
	<param name="UserID">A user ID</param>
	<returns>A user information object</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserInfos(System.Collections.ArrayList)">
	<summary>
     Get some user information objects
 </summary>
	<param name="UserIDs">An arraylist of user IDs</param>
	<returns>An array of user information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserInfos(System.Int32[])">
	<summary>
     Get some user information objects
 </summary>
	<param name="UserIDs">An array of user IDs</param>
	<returns>An array of user information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserInfos(System.Int64[])">
	<summary>
     Get some user information objects
 </summary>
	<param name="UserIDs">An array of user IDs (special user IDs won't be processed)</param>
	<returns>An array of user information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserInfos">
	<summary>
     Get all user information objects
 </summary>
	<returns>An array of user information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetUserInfos(System.Data.IDbCommand)">
	<summary>
     Get some user information objects
 </summary>
	<param name="dbCommand">A database command which returns some lines from table "Benutzer"</param>
	<returns>An array of user information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem._System_GetGroupInfos(System.String)">
	<summary>
     Collect all groups with given SQL statement
 </summary>
	<param name="SQLStatement">An SQL statement</param>
	<returns>An array of group information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetGroupInfos">
	<summary>
     Return all groups
 </summary>
	<returns>An array of group information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetGroupInfos(System.Collections.ArrayList)">
	<summary>
     Return selected groups
 </summary>
	<param name="GroupIDs">An arraylist of group IDs</param>
	<returns>An array of group information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetGroupInfos(System.Int32[])">
	<summary>
     Return selected groups
 </summary>
	<param name="GroupIDs">An array of group IDs</param>
	<returns>An array of group information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetGroupInfo(System.String)">
	<summary>
     Load group information data
 </summary>
	<param name="groupName">A name of a group (case insensitive)</param>
	<returns>A group information object or Nothing if the group can't be found</returns>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.Sex">
	<summary>
     The gender of a user
 </summary>
	<remarks>Additional enumeration items like m, f, male, female are available just for improved value lookup on user import from text files</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetSecurityObjectInformations">
	<summary>
     Get all security object information
 </summary>
	<returns>An array of security object information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetSecurityObjectInformations(System.String)">
	<summary>
     Get a security object information
 </summary>
	<param name="SecurityObjectName">A name of a security object</param>
	<returns>The requested security object information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetSecurityObjectInformations(System.Int32[])">
	<summary>
     Get selected security object information
 </summary>
	<returns>An array of security object information</returns>
</member><member name="M:CompuMaster.camm.WebManager.WMSystem.System_GetSecurityObjectInformations_Internal(System.Data.SqlClient.SqlCommand)">
	<summary>
     Get selected security object information
 </summary>
	<returns>An array of security object information</returns>
</member><member name="E:CompuMaster.camm.WebManager.WMSystem.LanguageDataLoaded">
	<summary>
     Fires when a language change has been forced
 </summary>
	<remarks>
     To ensure the correct localization of the user interface, all important text switches should perform when this event gets fired.
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem.Configuration">
	<summary>
     Configuration settings read from web.config/app.config
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.WMSystem.CompactPolicyFullRights">
	<summary>
     A prepared policy with a full set of rights allowing (nearly) everything
 </summary>
	<remarks>
     Without warranty or promised purpose for anything - use at your own risk!
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSystem.CompactPolicyHeader">
	<summary>
     A compact policy header to be sent to the client
 </summary>
	<value></value>
</member><member name="T:CompuMaster.camm.WebManager.WMSystem">
	<summary>
     camm Web-Manager base class
 </summary>
	<remarks>
		<p>This is the base class of camm Web-Manager. Instantiate this one in your ASP.NET pages by using ~/system/cammWebManager.ascx</p>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.WindowsClient.#ctor">
	<summary>
 Create an instance of camm Web-Manager client
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WindowsClient.#ctor(System.String)">
	<summary>
 Create an instance of camm Web-Manager client
 </summary>
	<param name="connectionString">The connection string to the camm Web-Manager database</param>
</member><member name="P:CompuMaster.camm.WebManager.WindowsClient.ConnectionString">
	<summary>
     The connection string to the camm Web-Manager database
 </summary>
	<value>A string containing all information required to successfully establish a connection to the database</value>
</member><member name="P:CompuMaster.camm.WebManager.WindowsClient.ServerIdentString">
	<summary>
 The server identification string for the current server
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.WindowsClient.Login(System.String,System.String)">
	<summary>
     Login with login name and password
 </summary>
	<param name="loginName">The login name of a user</param>
	<param name="password">The password of this user</param>
	<exception cref="T:System.Exception">If the login fails, this exception will be thrown</exception>
</member><member name="M:CompuMaster.camm.WebManager.WindowsClient.Logout">
	<summary>
     Logout and perform some clean-ups
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WindowsClient.VersionDatabase">
	<summary>
 camm Web-Manager database version
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WindowsClient.VersionDatabase(System.Boolean)">
	<summary>
 camm Web-Manager database version
 </summary>
	<param name="allowCaching">True to allow reading from cache</param>
</member><member name="M:CompuMaster.camm.WebManager.WindowsClient.VersionAssembly">
	<summary>
 camm Web-Manager assembly/library version
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WindowsClient.UI">
	<summary>
     User interface related properties and methods
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.WindowsClient.PerformanceMethods">
	<summary>
 Methods for fast data querying
 </summary>
	<value></value>
</member><member name="T:CompuMaster.camm.WebManager.WindowsClient">
	<summary>
 A camm Web-Manager client for windows and console applications
 </summary>
	<remarks>
 This client is not intended for web applications and throws an exception if used in a HttpContext.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.UserInterface.TextModule(System.String)">
	<summary>
     Load a text module
 </summary>
	<param name="key">The name of the key which uniquely identifies the required value</param>
	<returns>A plain text string or HTML code (defined by the variable type) with the complete value of the text</returns>
	<remarks>
     By default, the requested websitAreaID is empty.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.UserInterface.TextModule(System.String,System.String[])">
	<summary>
     Load a text module
 </summary>
	<param name="key">The name of the key which uniquely identifies the required value</param>
	<param name="websitAreaID">An array of strings with unique IDs of the website area, e. g. {"Shop", "default", ""} - the order defines the priority</param>
	<returns>A plain text string or HTML code (defined by the variable type) with the complete value of the text</returns>
</member><member name="M:CompuMaster.camm.WebManager.UserInterface.TextModule(System.String,System.String[],System.Int32,System.Int32)">
	<summary>
     Load a text module
 </summary>
	<param name="key">The name of the key which uniquely identifies the required value</param>
	<param name="websitAreaID">An array of strings with unique IDs of the website area, e. g. {"Shop", "default", ""} - the order defines the priority</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<returns>A plain text string or HTML code (defined by the variable type) with the complete value of the text</returns>
</member><member name="T:CompuMaster.camm.WebManager.UserInterface">
	<summary>
     Provide the cammWebManager.UI elements
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Statistics.NumberOfUsersCurrentlyOnline(System.Int32)">
	<param name="SessionTimeout">A value in minutes how long a user session is regarded as active when no logout and no further action have been performed</param>
</member><member name="P:CompuMaster.camm.WebManager.Registration.CwmInstallationInfo.version">
	<summary>
 CIM assembly version
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Registration.CwmInstallationInfo.VersionAssembly">
	<summary>
 CIM database version
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Registration.CwmInstallationInfo.VersionWebCron">
	<summary>
 CIM database version
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.CwmInstallationInfo.SignData">
	<summary>
 Sign the transaction data and validate its completeness
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.CwmInstallationInfo.ValidateInstallationInfo(CompuMaster.camm.WebManager.Registration.CwmInstallationInfo)">
	<summary>
 Perform some logical checks on data
 </summary>
	<param name="info"></param>
</member><member name="M:CompuMaster.camm.WebManager.Registration.CwmInstallationInfo.GenerateTokenForInstallationInfo(CompuMaster.camm.WebManager.Registration.CwmInstallationInfo)">
	<summary>
 Create the signing token
 </summary>
	<param name="info"></param>
</member><member name="T:CompuMaster.camm.WebManager.Registration.CwmInstallationInfo">
	<summary>
 Data sent to the webservice, used for validation purposes
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.CwmInstallationInfoFactory.GetCountPerServerGroup(System.Int32)">
	<summary>
 Lookup the number of users per server group
 </summary>
	<param name="serversGroupsCount"></param>
</member><member name="M:CompuMaster.camm.WebManager.Registration.CwmInstallationInfoFactory.GetDatetimeNzResult(System.Data.IDbCommand)">
	<summary>
 Query from db command without automatic changes on connection status
 </summary>
	<param name="cmd"></param>
</member><member name="M:CompuMaster.camm.WebManager.Registration.CwmInstallationInfoFactory.GetStringNzResult(System.Data.IDbCommand)">
	<summary>
 Query from db command without automatic changes on connection status
 </summary>
	<param name="cmd"></param>
</member><member name="M:CompuMaster.camm.WebManager.Registration.CwmInstallationInfoFactory.GetIntegerResult(System.Data.IDbCommand)">
	<summary>
 Query from db command without automatic changes on connection status
 </summary>
	<param name="cmd"></param>
</member><member name="M:CompuMaster.camm.WebManager.Registration.CwmInstallationInfoFactory.GetLongResult(System.Data.IDbCommand)">
	<summary>
 Query from db command without automatic changes on connection status
 </summary>
	<param name="cmd"></param>
</member><member name="M:CompuMaster.camm.WebManager.Registration.CwmInstallationInfoFactory.CollectInstallationInfo">
	<summary>
 Collect statistics and information on the current camm Web-Manager instance
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Registration.CwmInstallationInfoFactory">
	<summary>
 Create instance of CwmInstallationInfo
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Registration.LicenceData">
	<summary>
 License details
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.LicenceInfo.IsLicenceModelWithSupport(CompuMaster.camm.WebManager.Registration.LicenceData.LicenseModel)">
	<summary>
 Returns whether support is provided for the passed licence model
 </summary>
	<param name="model"></param>
</member><member name="M:CompuMaster.camm.WebManager.Registration.LicenceInfo.IsExpiringLicenceModel(CompuMaster.camm.WebManager.Registration.LicenceData.LicenseModel)">
	<summary>
 Returns whether the licence model is one that can expire
 </summary>
	<param name="model"></param>
</member><member name="T:CompuMaster.camm.WebManager.Registration.LicenceInfo">
	<summary>
 License checks
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Registration.InstanceValidationResult.SupportContractExpirationDate">
	<summary>
 Date when the the support and maintenance contract expires
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Registration.InstanceValidationResult.UpdateAvailable">
	<summary>
 General update available
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Registration.InstanceValidationResult.SecurityUpdateAvailable">
	<summary>
 Security update available - strongly recommended to update ASAP
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Registration.InstanceValidationResult">
	<summary>
 Validation result data of the product registration service
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistrationClient.GenerateTokenForValidationResult(CompuMaster.camm.WebManager.Registration.InstanceValidationResult)">
	<summary>
 Computes HMAC for passed InstanceValidationResult class, so we can check the data wasn't manipulated 
 </summary>
	<param name="validationResult"></param>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistrationClient.VerifyValidationResult(CompuMaster.camm.WebManager.Registration.InstanceValidationResult)">
	<summary>
 Checks whether received data has been tampered with or not
 </summary>
	<param name="info"></param>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistrationClient.ServiceVersion">
	<summary>
 Lookup the version of the product registration server service
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistrationClient.ServiceVersionHttps">
	<summary>
 Lookup the version of the product registration server service - only for diagnostics by test library: HTTPS access to product registration server service
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistrationClient.ServiceVersionHttp">
	<summary>
 Lookup the version of the product registration server service - only for diagnostics by test library: HTTP access to product registration server service
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistrationClient.GetWebRequest(System.Uri)">
	<summary>
 Always send instance ID with every webservice request
 </summary>
	<param name="uri"></param>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistrationClient.ValidateInstallation(CompuMaster.camm.WebManager.Registration.CwmInstallationInfo)">
	<summary>
 Send the validation data to the product registration server service and recieve its result
 </summary>
	<remarks>NEVER RUN THIS METHOD DIRECTLY - ONLY INTENDED FOR INTERNAL REFLECTION BY System.Web.Services</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistrationClient.ValidateInstallationHttpsOrHttp">
	<summary>
 Send the validation data to the product registration server service and recieve its result
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistrationClient.ValidateInstallationHttp">
	<summary>
 Send the validation data to the product registration server service and recieve its result - only for diagnostics by test library: HTTP access to product registration server service
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistrationClient.ValidateInstallationHttps">
	<summary>
 Send the validation data to the product registration server service and recieve its result - only for diagnostics by test library: HTTP access to product registration server service
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Registration.ProductRegistrationClient">
	<summary>
 The service client which contacts the server to ask whether licence etc. are still valid
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Registration.ContractExpirationNotificationTypes">
	<summary>
 The several kinds of notification e-mails
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Registration.ContractExpirationRecipient">
	<summary>
 An e-mail recipient for expiration notifications
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ContractExpirationNotifier.AddRecipient(CompuMaster.camm.WebManager.Registration.ContractExpirationRecipient)">
	<summary>
 Add a single user to the list of recipients
 </summary>
	<param name="recipient"></param>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ContractExpirationNotifier.AddRecipient(System.String,System.String)">
	<summary>
 Add a single user to the list of recipients
 </summary>
	<param name="name"></param>
	<param name="email"></param>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ContractExpirationNotifier.AddRecipient(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
 Add a single user to the list of recipients
 </summary>
	<param name="user"></param>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ContractExpirationNotifier.AddRecipient(CompuMaster.camm.WebManager.WMSystem.SpecialGroups)">
	<summary>
 Add all members of a group to the list of recipients
 </summary>
	<param name="group"></param>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ContractExpirationNotifier.Notify">
	<summary>
 Send the notification e-mails to all recipients (but don't send 2 or more e-mails to the same e-mail address)
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistration.FetchValidationDataFromRemoteLicenseServer(System.Boolean)">
	<summary>
 Contacts our "licence server" and fetches expiration data etc.
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistration.FetchDateFromGlobalPropertiesDbTable(System.String)">
	<summary>
 Fetches datetime value with the corresponding key form the global properties table
 </summary>
	<param name="key"></param>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistration.SendExpiredSupportContractNotificationMails(System.DateTime)">
	<summary>
 Notifies appropriate recipients when the support and maintanence contract has expired
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistration.IsRemoteLicenseServerMarkedOffline">
	<summary>
 Returns whether the licence server is marked as being down 
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistration.MarkRemoteLicenseServerAsOffline">
	<summary>
 Mark the server as currently down to try again later.
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistration.IsRefreshFromRemoteLicenseServerRequired(System.Int32)">
	<summary>
 Returns whether it's time to fetch validation data from server
 </summary>
	<param name="hours">specifies how many hours must have passed since the last check</param>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistration.RefreshValidationDataFromRemoteLicenseServer(System.Boolean)">
	<summary>
 Fetches data from the licence server and saves it into SystemGlobalProperties database table
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistration.GetCachedValidationResult">
	<summary>
 Load validation result data from cache data in SystemGlobalProperties database table
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.ProductRegistration.CheckRegistration(System.Boolean)">
	<summary>
 Method called by the webservice to check the registration
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Registration.ProductRegistration">
	<summary>
 Client logic for the product registration service 
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Registration.InstanceValidationDao.GetExpirationDate(System.String)">
	<summary>
 Fetches datetime value with the corresponding key form the global properties table
 </summary>
	<param name="key"></param>
 TODO: this doesn't belong to this class, it should probably be in one which is made for this purpose...

</member><member name="M:CompuMaster.camm.WebManager.Registration.InstanceValidationDao.GetBooleanValue(System.String,System.Boolean)">
	<summary>
 Fetches bit value with the corresponding key form the global properties table
 </summary>
	<param name="key"></param>
 TODO: this doesn't belong to this class, it should probably be in one which is made for this purpose...

</member><member name="M:CompuMaster.camm.WebManager.Registration.InstanceValidationDao.GetLicenceModel">
	<summary>
 Returns the license model
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Registration.InstanceValidationDao">
	<summary>
 Data access object/layer
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.PerformanceMethods.IsUserExisting(System.String)">
	<summary>
 Is a login name existing?
 </summary>
	<param name="loginName">A login name</param>
	<returns>True if it exists, otherwise false</returns>
</member><member name="M:CompuMaster.camm.WebManager.PerformanceMethods.LookupExistingUserID(System.String)">
	<summary>
 Query database for an existing user
 </summary>
	<param name="loginName"></param>
	<returns></returns>
</member><member name="M:CompuMaster.camm.WebManager.PerformanceMethods.ActiveUsers">
	<summary>
 Query a list of existing user IDs
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.PerformanceMethods.ActiveAndDeletedUsers">
	<summary>
 Query a list of user IDs from existing plus deleted users
 </summary>
	<returns>A hashtable containing the user ID as key field (Int64) and the status "Deleted" as a boolean value in the hashtable's value field (true indicates a deleted user)</returns>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.INotifications.NotificationForUser_Welcome_UserRegisteredByHimself(CompuMaster.camm.WebManager.WMSystem.UserInformation,System.String)">
	<summary>
     Welcome notification e-mail for the self registered user with mention of the password 
 </summary>
	<param name="userInfo">The user information object</param>
	<param name="password">The new password</param>
	<remarks>
     This method will be called by the standard mechanisms of camm Web-Manager
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.INotifications.NotificationForUser_Welcome_UserRegisteredByHimself(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Welcome notification e-mail for the self registered user 
 </summary>
	<param name="userInfo">The user information object</param>
	<remarks>
     This method will be called by the standard mechanisms of camm Web-Manager
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.INotifications.NotificationForUser_Welcome_UserHasBeenCreated(CompuMaster.camm.WebManager.WMSystem.UserInformation,System.String)">
	<summary>
     Welcome notification e-mail for the user created by a security administrator with mention of the password 
 </summary>
	<param name="userInfo">The user information object</param>
	<param name="password">The new password</param>
	<remarks>
     This method will be called by the standard mechanisms of camm Web-Manager
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.INotifications.NotificationForSecurityAdministration_ReviewNewUserAccount(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Notification e-mail for every security administrator to review and authorize a new user account
 </summary>
	<param name="userInfoToBeReviewed">The user information object to be reviewed</param>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.INotifications.NotificationForUser_ResettedPassword(CompuMaster.camm.WebManager.WMSystem.UserInformation,System.String)">
	<summary>
     Notification e-mail for the user with mention of the password when the password has been changed by a security administrator
 </summary>
	<param name="userInfo">The user information object</param>
	<param name="newPassword">The new password</param>
	<remarks>
     This method will be called by the standard mechanisms of camm Web-Manager
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.INotifications.NotificationForUser_ForgottenPassword(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Notification e-mail for the user who has forgotten his password
 </summary>
	<param name="userInfo">The user information object</param>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.INotifications.NotificationForUser_PasswordResetLink(CompuMaster.camm.WebManager.WMSystem.UserInformation,System.String)">
	<summary>
    Notifcation e-mail for the user. This will send a link to a formular in which the user can set a new password
 </summary>
	<param name="userInfo"></param>
	<param name="resetLinkUrl"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.INotifications.NotificationForUser_AuthorizationsSet(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Notification e-mail for the user that he has got his first authorizations and that it makes sense now to revisit us again
 </summary>
	<param name="userInfo"></param>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.INotifications.NotificationForUser_ActivationRequired(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Notification e-mail for the user that he has to activate his account
 </summary>
	<param name="userInfo"></param>
</member><member name="T:CompuMaster.camm.WebManager.Notifications.INotifications">
	<summary>
     The common interface for all notification providers
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.DefaultNotifications.#ctor(CompuMaster.camm.WebManager.WMSystem)">
	<summary>
     Creates a new WMNotifications class
 </summary>
	<param name="webManager">The camm Web-Manager instance this class shall work with</param>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.DefaultNotifications.GetUserLogonServers(CompuMaster.camm.WebManager.IWebManager,System.Int64)">
	<summary>
     Get a string with all logon servers for a user
 </summary>
	<param name="webManager">An instance of camm Web-Manager</param>
	<param name="userID">A user ID</param>
	<returns>A string with all relative server groups; every server group is placed in a new line.</returns>
	<remarks>
     If there is only 1 server group available, the returned string contains only the simply URL of the master server of this server group.
     Are there 2 or more server groups available then each URL of the corresponding master server is followed by the server group title in parenthesis.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.DefaultNotifications.HtmlTagOpener">
	<summary>
 The HTML tag with correct left-to-right or right-to-left direction
 </summary>
	<remarks>
 Arabic, hebrew and some other languages require a right-to-left writing instead of the default left-to-right. This method creates an HTML tag based on the current UI culture.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.DefaultNotifications.NotificationForUser_Welcome_UserRegisteredByHimself(CompuMaster.camm.WebManager.WMSystem.UserInformation,System.String)">
	<summary>
     Welcome notification e-mail for the self registered user with mention of the password 
 </summary>
	<param name="userInfo">The user information object</param>
	<param name="password">The new password</param>
	<remarks>
     This method will be called by the standard mechanisms of camm Web-Manager
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.DefaultNotifications.NotificationForUser_Welcome_UserRegisteredByHimself(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Welcome notification e-mail for the self registered user 
 </summary>
	<param name="userInfo">The user information object</param>
	<remarks>
     This method will be called by the standard mechanisms of camm Web-Manager
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.DefaultNotifications.NotificationForUser_Welcome_UserHasBeenCreated(CompuMaster.camm.WebManager.WMSystem.UserInformation,System.String)">
	<summary>
     Welcome notification e-mail for the user created by a security administrator with mention of the password 
 </summary>
	<param name="userInfo">The user information object</param>
	<param name="password">The new password</param>
	<remarks>
     This method will be called by the standard mechanisms of camm Web-Manager
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.DefaultNotifications.NotificationForSecurityAdministration_ReviewNewUserAccount(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Notification e-mail for every security administrator to review and authorize a new user account
 </summary>
	<param name="userInfoToBeReviewed">The user information object to be reviewed</param>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.DefaultNotifications.NotificationForUser_ResettedPassword(CompuMaster.camm.WebManager.WMSystem.UserInformation,System.String)">
	<summary>
     Notification e-mail for the user with mention of the password when the password has been changed by a security administrator
 </summary>
	<param name="userInfo">The user information object</param>
	<param name="newPassword">The new password</param>
	<remarks>
     This method will be called by the standard mechanisms of camm Web-Manager
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.DefaultNotifications.NotificationForUser_ForgottenPassword(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Notification e-mail for the user who has forgotten his password
 </summary>
	<param name="userInfo">The user information object</param>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.DefaultNotifications.NotificationForUser_AuthorizationsSet(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Notification e-mail for the user that he has got his first authorizations and that it makes sense now to revisit us again
 </summary>
	<param name="userInfo"></param>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.DefaultNotifications.NotificationForUser_ActivationRequired(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Notification e-mail for the user that he has to activate his account
 </summary>
	<param name="userInfo"></param>
</member><member name="T:CompuMaster.camm.WebManager.Notifications.DefaultNotifications">
	<summary>
     The default notification e-mails of camm Web-Manager
 </summary>
	<remarks>
     Use this class to modify/customize the e-mails to all your users
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.NoNotifications.#ctor(CompuMaster.camm.WebManager.WMSystem)">
	<summary>
     Creates a new WMNotifications class
 </summary>
	<param name="webManager">The camm Web-Manager instance this class shall work with</param>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.NoNotifications.NotificationForUser_Welcome_UserRegisteredByHimself(CompuMaster.camm.WebManager.WMSystem.UserInformation,System.String)">
	<summary>
     Welcome notification e-mail for the self registered user with mention of the password 
 </summary>
	<param name="userInfo">The user information object</param>
	<param name="password">The new password</param>
	<remarks>
     This method will be called by the standard mechanisms of camm Web-Manager
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.NoNotifications.NotificationForUser_Welcome_UserRegisteredByHimself(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Welcome notification e-mail for the self registered user 
 </summary>
	<param name="UserInfo">The user information object</param>
	<remarks>
     This method will be called by the standard mechanisms of camm Web-Manager
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.NoNotifications.NotificationForUser_Welcome_UserHasBeenCreated(CompuMaster.camm.WebManager.WMSystem.UserInformation,System.String)">
	<summary>
     Welcome notification e-mail for the user created by a security administrator with mention of the password 
 </summary>
	<param name="userInfo">The user information object</param>
	<param name="password">The new password</param>
	<remarks>
     This method will be called by the standard mechanisms of camm Web-Manager
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.NoNotifications.NotificationForSecurityAdministration_ReviewNewUserAccount(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Notification e-mail for every security administrator to review and authorize a new user account
 </summary>
	<param name="userInfoToBeReviewed">The user information object to be reviewed</param>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.NoNotifications.NotificationForUser_ResettedPassword(CompuMaster.camm.WebManager.WMSystem.UserInformation,System.String)">
	<summary>
     Notification e-mail for the user with mention of the password when the password has been changed by a security administrator
 </summary>
	<param name="userInfo">The user information object</param>
	<param name="newPassword">The new password</param>
	<remarks>
     This method will be called by the standard mechanisms of camm Web-Manager
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.NoNotifications.NotificationForUser_ForgottenPassword(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Notification e-mail for the user who has forgotten his password
 </summary>
	<param name="UserInfo">The user information object</param>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.NoNotifications.NotificationForUser_AuthorizationsSet(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Notification e-mail for the user that he has got his first authorizations and that it makes sense now to revisit us again
 </summary>
	<param name="userInfo"></param>
</member><member name="M:CompuMaster.camm.WebManager.Notifications.NoNotifications.NotificationForUser_ActivationRequired(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Notification e-mail for the user that he has to activate his account
 </summary>
	<param name="userInfo"></param>
</member><member name="M:CompuMaster.camm.WebManager.WMNotifications.#ctor(CompuMaster.camm.WebManager.WMSystem)">
	<summary>
     Creates a new WMNotifications class
 </summary>
	<param name="webManager">The camm Web-Manager instance this class shall work with</param>
</member><member name="T:CompuMaster.camm.WebManager.WMNotifications">
	<summary>
     The default notification e-mails of camm Web-Manager
 </summary>
	<remarks>
     Use this class to modify/customize the e-mails to all your users
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.WriteEventLogTrace(System.String,System.Diagnostics.EventLogEntryType,System.Boolean)">
	<summary>
 Write a log entry into the sytem's event log in case tracing is enabled in configuration
 </summary>
	<param name="data">The event details</param>
	<param name="type">Default type is Information</param>
	<param name="writeAlwaysIndependentlyFromConfig">Write this entry always independently from the configured web.config setting WebManager.EventLogTrace</param>
</member><member name="M:CompuMaster.camm.WebManager.Log.LogToFileError(System.Exception)">
	<summary>
 Collect and write error data into the error log file on webserver disk (see app_data directory)
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Log.LogToFileWarning(System.Exception)">
	<summary>
 Collect and write warning data into the warning log file on webserver disk (see app_data directory)
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Log.LogToFileDebugInfo(System.String)">
	<summary>
 Collect and write debug data into the debug log file on webserver disk (see app_data directory)
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Log.ReportWarningViaEMail(System.Exception,System.String)">
	<summary>
 Send an exception notification to the responsible contact
 </summary>
	<param name="exception">A warning message which shall be reported to the developer/technical contact</param>
	<param name="messageSubject">The e-mail subject</param>
	<remarks>
 Requires an active e-mail system. Errors will be ignored.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.ReportWarningByEMail(System.Exception,System.String)">
	<summary>
 Send an exception notification to the responsible contact
 </summary>
	<param name="exception">A warning message which shall be reported to the developer/technical contact</param>
	<param name="messageSubject">The e-mail subject</param>
	<returns>True if the e-mail could be sent using a configured e-mail send system, False if no configured e-mail send system has been available or if another error occured</returns>
	<remarks>
 Requires an active e-mail system. Errors will be ignored.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.ReportWarningViaEMail(System.String,System.String,System.String)">
	<summary>
 Send a warning notification to the responsible contact
 </summary>
	<param name="plainText">A plain text warning message which shall be reported to the developer/technical contact</param>
	<param name="htmlText">An HTML warning message which shall be reported to the developer/technical contact</param>
	<param name="messageSubject">The e-mail subject</param>
	<remarks>
 Requires an active e-mail system. Errors will be ignored.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.ReportWarningByEMail(System.String,System.String,System.String)">
	<summary>
 Send a warning notification to the responsible contact
 </summary>
	<param name="plainText">A plain text warning message which shall be reported to the developer/technical contact</param>
	<param name="htmlText">An HTML warning message which shall be reported to the developer/technical contact</param>
	<param name="messageSubject">The e-mail subject</param>
	<returns>True if the e-mail could be sent using a configured e-mail send system, False if no configured e-mail send system has been available or if another error occured</returns>
	<remarks>
 Requires an active e-mail system. Errors will be ignored.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.ReportErrorViaEMail(System.Exception,System.String)">
	<summary>
 Send an exception notification to the responsible contact
 </summary>
	<param name="exception">An error which shall be reported to the developer/technical contact</param>
	<param name="messageSubject">The e-mail subject</param>
	<remarks>
 Requires an active e-mail system. Errors will be ignored.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.ReportErrorByEMail(System.Exception,System.String)">
	<summary>
 Send an exception notification to the responsible contact
 </summary>
	<param name="exception">An error which shall be reported to the developer/technical contact</param>
	<param name="messageSubject">The e-mail subject</param>
	<returns>True if the e-mail could be sent using a configured e-mail send system, False if no configured e-mail send system has been available or if another error occured</returns>
	<remarks>
 Requires an active e-mail system. Errors will be ignored.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.AdditionalDataOfException(System.Exception)">
	<summary>
 Step through the exception tree and collection additional data
 </summary>
	<param name="ex"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.ReportErrorViaEMail(System.String,System.String,System.String)">
	<summary>
 Send an error notification to the responsible contact
 </summary>
	<param name="plainText">A plain text error message which shall be reported to the developer/technical contact</param>
	<param name="htmlText">An HTML error message which shall be reported to the developer/technical contact</param>
	<param name="messageSubject">The e-mail subject</param>
	<remarks>
 Requires an active e-mail system. Errors will be ignored.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.ReportErrorByEMail(System.String,System.String,System.String)">
	<summary>
 Send an error notification to the responsible contact
 </summary>
	<param name="plainText">A plain text error message which shall be reported to the developer/technical contact</param>
	<param name="htmlText">An HTML error message which shall be reported to the developer/technical contact</param>
	<param name="messageSubject">The e-mail subject</param>
	<returns>True if the e-mail could be sent using a configured e-mail send system, False if no configured e-mail send system has been available or if another error occured</returns>
	<remarks>
 Requires an active e-mail system. Errors will be ignored.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.GetCodeLocation">
	<summary>
 The location of the executed code/assembly, typically somewhere in the parent or grand parent directory
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Log.ReportErrorByEMail(System.String,System.String,System.String,System.Security.Principal.IPrincipal,System.Web.HttpRequest,System.Web.HttpContext)">
	<summary>
 Send an exception notification to the responsible contact
 </summary>
	<param name="plainText">A plain text error message which shall be reported to the developer/technical contact</param>
	<param name="htmlText">An HTML error message which shall be reported to the developer/technical contact</param>
	<param name="messageSubject">The e-mail subject</param>
	<param name="user">The current user principal</param>
	<param name="request">The current request</param>
	<param name="context">The current context of the request</param>
	<returns>True if the e-mail could be sent using a configured e-mail send system, False if no configured e-mail send system has been available or if another error occured</returns>
	<remarks>
 Requires an active e-mail system. Errors will be ignored.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.BuildPlainMessage(System.String,System.String,System.String,System.Web.HttpRequest,System.Web.HttpContext,System.Security.Principal.IPrincipal,CompuMaster.camm.WebManager.WMSystem,System.Int32)">
	<summary>
     Prepare the message text for the exception in plain text format
 </summary>
	<param name="exceptionDetails"></param>
	<param name="exceptionIdentifier"></param>
</member><member name="M:CompuMaster.camm.WebManager.Log.BuildHtmlMessage(System.String,System.String,System.String,System.Web.HttpRequest,System.Web.HttpContext,System.Security.Principal.IPrincipal,CompuMaster.camm.WebManager.WMSystem,System.Int32)">
	<summary>
     Prepare the message text for the exception in HTML output format
 </summary>
	<param name="exceptionDetailsAsHtml">Details on the exception in valid HTML code (and without body or script tags or similar)</param>
	<param name="exceptionIdentifier"></param>
</member><member name="M:CompuMaster.camm.WebManager.Log.UserAgentClassification(System.Web.HttpRequest)">
	<summary>
 Classifies the user agent types based on crawler/potential machine agent information
 </summary>
	<param name="request"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.UserAgentClassification(System.Boolean,System.Boolean)">
	<summary>
 Classifies the user agent types based on crawler/potential machine agent information
 </summary>
	<param name="isCrawler"></param>
	<param name="potentiallyIsCrawler"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.Write(System.String,CompuMaster.camm.WebManager.WMSystem.DebugLevels)">
	<summary>
     Create an information log entry in camm Web-Manager's event log
 </summary>
	<param name="message">An message which shall be logged</param>
	<param name="requiredDebugLevel">The required debug level before this message gets logged</param>
</member><member name="M:CompuMaster.camm.WebManager.Log.Warn(System.String,CompuMaster.camm.WebManager.WMSystem.DebugLevels)">
	<summary>
     Create a warning log entry in camm Web-Manager's event log
 </summary>
	<param name="message">An message which shall be logged</param>
	<param name="requiredDebugLevel">The required debug level before this message gets logged</param>
</member><member name="M:CompuMaster.camm.WebManager.Log.Warn(System.Exception)">
	<summary>
     Create a warning log entry in camm Web-Manager's event log and do not throw the exception
 </summary>
	<param name="exception"></param>
</member><member name="M:CompuMaster.camm.WebManager.Log.Warn(System.String,System.String)">
	<summary>
     Create a warning log entry in camm Web-Manager's event log and do not throw the exception
 </summary>
	<param name="message">An message which shall be logged</param>
	<param name="stackTrace">A stacktrace for tracking the error or Nothing for auto-generation of StackTrace</param>
</member><member name="M:CompuMaster.camm.WebManager.Log.Warn(System.String,System.String,CompuMaster.camm.WebManager.WMSystem.DebugLevels,System.Boolean,System.Boolean)">
	<summary>
     Create a warning log entry in camm Web-Manager's event log and do not throw the exception
 </summary>
	<param name="message">An message which shall be logged</param>
	<param name="stackTrace">A stacktrace for tracking the error or Nothing for auto-generation of StackTrace</param>
	<param name="neverSendWarningMails"></param>
	<param name="abortRequest"></param>
</member><member name="M:CompuMaster.camm.WebManager.Log.Exception(System.Exception,System.Boolean)">
	<summary>
     Create an error log entry in camm Web-Manager's event log and optionally throw it
 </summary>
	<param name="exception">An exception which shall be logged</param>
	<param name="throwException">Throw the exception or ignore it</param>
</member><member name="M:CompuMaster.camm.WebManager.Log.Exception(System.String,System.Boolean)">
	<summary>
     Create an error log entry in camm Web-Manager's event log and optionally throw it
 </summary>
	<param name="message">An message which shall be logged</param>
	<param name="throwException">Throw the exception or ignore it</param>
</member><member name="M:CompuMaster.camm.WebManager.Log.RuntimeInformation(System.String,CompuMaster.camm.WebManager.WMSystem.DebugLevels,System.Boolean)">
	<summary>
 Create an error log entry in camm Web-Manager's event log and do not throw it
 </summary>
	<param name="message">The message which has to be logged</param>
	<param name="requiredDebugLevel">Logging will happen if this debug level is set.</param>
	<param name="neverSendWarningMails">If set to false, there will be an e-mail notification to the TechnicalService contact</param>
</member><member name="M:CompuMaster.camm.WebManager.Log.RuntimeWarning(System.String,System.String)">
	<summary>
 Create an error log entry in camm Web-Manager's event log and do not throw it
 </summary>
	<param name="Message">The message which has to be logged</param>
	<param name="stackTrace">The exception StackTrace or System.Environment.StackTrace</param>
</member><member name="M:CompuMaster.camm.WebManager.Log.RuntimeWarning(System.String,System.String,CompuMaster.camm.WebManager.WMSystem.DebugLevels,System.Boolean,System.Boolean)">
	<summary>
 Create an error log entry in camm Web-Manager's event log and throw it
 </summary>
	<param name="message">The message which has to be logged</param>
	<param name="stackTrace">The exception StackTrace or System.Environment.StackTrace</param>
	<param name="requiredDebugLevel">Logging will happen if this debug level is set.</param>
	<param name="neverSendWarningMails">If set to false, there will be an e-mail notification to the TechnicalService contact</param>
	<param name="abortRequest"></param>
</member><member name="M:CompuMaster.camm.WebManager.Log.RuntimeWarning(System.Exception,System.Boolean,CompuMaster.camm.WebManager.WMSystem.DebugLevels)">
	<summary>
 Create an error log entry in camm Web-Manager's event log and do not throw it
 </summary>
	<param name="exception">An exception which shall be logged</param>
	<param name="neverSendWarningMails">If set to false, there will be an e-mail notification to the TechnicalService contact</param>
	<param name="requiredDebugLevelBeforeLogging">Logging will happen if this debug level is set. (But throwing the exception will always happen)</param>
</member><member name="M:CompuMaster.camm.WebManager.Log.RuntimeException(System.Exception,System.Boolean,System.Boolean,CompuMaster.camm.WebManager.WMSystem.DebugLevels)">
	<summary>
     Create an error log entry in camm Web-Manager's event log and do not throw it
 </summary>
	<param name="exception">An exception which shall be logged</param>
	<param name="neverSendWarningMails">If set to false, there will be an e-mail notification to the TechnicalService contact</param>
	<param name="throwException">True will throw the exception after logging, with false it will return to the calling method</param>
	<param name="requiredDebugLevelBeforeLogging">Logging will happen if this debug level is set. (But throwing the exception will always happen)</param>
</member><member name="M:CompuMaster.camm.WebManager.Log.RuntimeException(System.Exception,System.Boolean,System.Boolean)">
	<summary>
 Create an error log entry in camm Web-Manager's event log and throw it
 </summary>
	<param name="exception">An exception which shall be logged</param>
	<param name="neverSendWarningMails">If set to false, there will be an e-mail notification to the TechnicalService contact</param>
	<param name="abortRequestAndRedirectToAnErrorPage">Redirect the user to an error page</param>
</member><member name="M:CompuMaster.camm.WebManager.Log.RuntimeException(System.String,System.Boolean,System.Boolean)">
	<summary>
 Create an error log entry in camm Web-Manager's event log and throw it
 </summary>
	<param name="message">A message which shall be logged</param>
	<param name="neverSendWarningMails">If set to false, there will be an e-mail notification to the TechnicalService contact</param>
	<param name="abortRequestAndRedirectToAnErrorPage">Redirect the user to an error page</param>
</member><member name="M:CompuMaster.camm.WebManager.Log.RuntimeException(System.String,System.String,System.Boolean,System.Boolean)">
	<summary>
 Create an error log entry in camm Web-Manager's event log and throw it
 </summary>
	<param name="displayMessage">A message which shall be displayed</param>
	<param name="logMessage">A message which shall be logged</param>
	<param name="neverSendWarningMails">If set to false, there will be an e-mail notification to the TechnicalService contact</param>
	<param name="abortRequestAndRedirectToAnErrorPage"></param>
</member><member name="M:CompuMaster.camm.WebManager.Log.WriteLogItem(System.String,CompuMaster.camm.WebManager.WMSystem.Logging_ConflictTypes,CompuMaster.camm.WebManager.WMSystem.DebugLevels,System.Boolean)">
	<summary>
     Write a log entry to the database
 </summary>
	<param name="message">An message which shall be logged</param>
	<param name="conflictType">The type of the message to get protocolled</param>
	<param name="requiredDebugLevel">The required debug level before this message gets logged</param>
	<param name="neverSendWarningMails">Never send warning mails even if an exception gets thrown</param>
</member><member name="M:CompuMaster.camm.WebManager.Log.WriteLogItem(System.String,CompuMaster.camm.WebManager.WMSystem.Logging_ConflictTypes,CompuMaster.camm.WebManager.WMSystem.DebugLevels,System.Boolean,System.String)">
	<summary>
     Write a log entry to the database
 </summary>
	<param name="message">An message which shall be logged</param>
	<param name="conflictType">The type of the message to get protocolled</param>
	<param name="requiredDebugLevel">The required debug level before this message gets logged</param>
	<param name="neverSendWarningMails">Never send warning mails even if an exception gets thrown</param>
	<param name="address">The address/URL which is related to this log item</param>
</member><member name="P:CompuMaster.camm.WebManager.Log.RowsInLogTable">
	<summary>
     The current approximate number of log entries in the event log
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.Log.RefreshedRowsInLogTable">
	<summary>
 Requery the very current count of records in log table and refresh the RowsInLogTable property and return the current count
 </summary>
	<returns>The very current amount of log entries in database</returns>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.Log.MaxRetentionDays">
	<summary>
 Amount of days logs should be retained
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.Log.MaxRowsInLogTable">
	<summary>
     The number of maximum rows in the event log before older logs get truncated
 </summary>
	<value></value>
	<remarks>
     A zero value leads to infinite log entries.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.GetCacheItem(System.String)">
	<summary>
 Returns an item from the cache
 </summary>
	<param name="key"></param>
</member><member name="M:CompuMaster.camm.WebManager.Log.SetCacheItem(System.String,System.Object)">
	<summary>
 Adds or updates a cache entry
 </summary>
	<param name="key"></param>
	<param name="value"></param>
</member><member name="M:CompuMaster.camm.WebManager.Log.SetIntegerConfigEntry(System.String,System.Int32)">
	<summary>
 Saves an integer into the  [System]_[GlobalProperties] table or updates it
 </summary>
	<param name="key"></param>
	<param name="value"></param>
</member><member name="M:CompuMaster.camm.WebManager.Log.GetConflictTypeLifetimes">
	<summary>
 Returns a hashtable containing the lifetime of a conflict type in days
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Log.SetConflictTypesLifetime(System.Collections.Hashtable)">
	<summary>
 Stores a hashtable containing the lifetime of a conflict type in days
 </summary>
	<param name="hashTable"></param>
</member><member name="M:CompuMaster.camm.WebManager.Log.GetIntegerConfigEntry(System.String)">
	<summary>
 Read configuration value
 </summary>
	<param name="key"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.CountRowsInLogTable">
	<summary>
 Query the current row number of logs from database
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.LogCleanupAction(System.String)">
	<summary>
 Log a cleanup action
 </summary>
	<param name="msg"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.ShrinkTableToMaxRows(System.Int32)">
	<summary>
 Enforces that we don't have more rows than allowed
 </summary>
	<return>Number of deleted rows from log table</return>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.DeleteExpiredEntries(System.Int32)">
	<summary>
 Removes expired log entries
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Log.CleanUpLogTable">
	<summary>
     Remove old lines from the log to save memory in database
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Log.CleanUpLogTableInternal">
	<summary>
     Remove old lines from the log to save memory in database
 </summary>
	<return>Number of deleted rows from log table</return>
</member><member name="T:CompuMaster.camm.WebManager.Log.SystemException">
	<summary>
 An exception of the internal system
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Log">
	<summary>
     Event log methods of camm Web-Manager
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Environment.Licence">
	<summary>
     Licence details of the camm Web-Manager instance
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Environment.ProductName">
	<summary>
 Product name of camm Web-Manager
 </summary>
	<value></value>
	<remarks>Product name could be for example "camm Enterprise WebManager"</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Environment.LicenceKeyShortened">
	<summary>
 Shortened licence hash code for camm Web-Manager
 </summary>
	<value></value>
	<remarks>This shortened license code is not intended for licence identification, but for project discussions to clarify the instance in discussion</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Environment.LicenceKey">
	<summary>
 Licence hash code for camm Web-Manager
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.Licence.Licencee">
	<summary>
     The licencee, the name or an identifier of the organization 
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Licence.IsLicenced">
	<summary>
     A cached value wether this application has been unlocked successfully
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.GlobalConfiguration.QueryConfigRecord(System.String)">
	<summary>
 Read configuration set based on 1 record per key
 </summary>
	<param name="key"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.GlobalConfiguration.QueryConfigRecords(System.String)">
	<summary>
 Read configuration set based on 0 up to multiple records per key
 </summary>
	<param name="key"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.GlobalConfiguration.QueryConfigRecordsWithSubKeys(System.String)">
	<summary>
 Read configuration set based on 0 up to multiple records per key
 </summary>
	<param name="key"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.GlobalConfiguration.DeleteConfigRecord(System.String)">
	<summary>
 Delete a configuration set based on 1 record per key
 </summary>
	<param name="key"></param>
</member><member name="M:CompuMaster.camm.WebManager.GlobalConfiguration.DeleteConfigRecords(System.String)">
	<summary>
 Delete a configuration set based on 0 up to multiple records per key
 </summary>
	<param name="key"></param>
</member><member name="M:CompuMaster.camm.WebManager.GlobalConfiguration.WriteConfigRecord(CompuMaster.camm.WebManager.GlobalConfiguration.ConfigRecord)">
	<summary>
 Save a configuration set based on 1 record per key to the central database
 </summary>
	<param name="data"></param>
</member><member name="M:CompuMaster.camm.WebManager.GlobalConfiguration.WriteConfigRecords(System.String,System.Collections.Generic.List{CompuMaster.camm.WebManager.GlobalConfiguration.ConfigRecord})">
	<summary>
 Save a configuration set based on 0 up to multiple records per key to the central database
 </summary>
	<param name="key"></param>
	<param name="dataSet"></param>
</member><member name="M:CompuMaster.camm.WebManager.GlobalConfiguration.QueryInt64ConfigEntry(System.String)">
	<summary>
 Read configuration value
 </summary>
	<param name="key"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.GlobalConfiguration.QueryStringConfigEntry(System.String)">
	<summary>
 Read configuration value
 </summary>
	<param name="key"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.GlobalConfiguration.QueryBooleanConfigEntry(System.String)">
	<summary>
 Read configuration value
 </summary>
	<param name="key"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.GlobalConfiguration.QueryByteArrayConfigEntry(System.String)">
	<summary>
 Read configuration value
 </summary>
	<param name="key"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.GlobalConfiguration.QueryDoubleConfigEntry(System.String)">
	<summary>
 Read configuration value
 </summary>
	<param name="key"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.GlobalConfiguration.QueryDecimalConfigEntry(System.String)">
	<summary>
 Read configuration value
 </summary>
	<param name="key"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.GlobalConfiguration.QueryDateTimeConfigEntry(System.String)">
	<summary>
 Read configuration value
 </summary>
	<param name="key"></param>
	<remarks></remarks>
</member><member name="T:CompuMaster.camm.WebManager.FlagValidation.FlagValidationResultCode">
	<summary>
 The main result of the flag validation
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.FlagValidation.FlagValidationResult">
	<summary>
 The flag validation result information
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.FlagValidation.SetNameAndType">
	<summary>
 Internal assignment of FlagName and FlagType
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.FlagValidation.IsTypeFlag">
	<summary>
 Is the flag a strong type
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.FlagValidation.FlagCompleteDefinition">
	<summary>
 Returns the flag as it was passed here, so for example "Birthday{DATE}"
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.FlagValidation.FlagName">
	<summary>
 Returns the name of the flag without type information. So for "Birthday{DATE}" it would return "Birthday"
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.FlagValidation.FlagType">
	<summary>
 Returns the type of the flag. So for "Birthday{DATE}" it would return "DATE"
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.FlagValidation.IsCorrectValueForType(System.String)">
	<summary>
 Validates the given value against the type of this flag. 
 </summary>
	<param name="value">the value to be checked</param>
</member><member name="M:CompuMaster.camm.WebManager.FlagValidation.Validate(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
 Validate this flag requirement on a user information object
 </summary>
	<param name="userinfo"></param>
</member><member name="M:CompuMaster.camm.WebManager.FlagValidation.ValidateRequiredFlags(CompuMaster.camm.WebManager.WMSystem.UserInformation,System.String[],System.Boolean)">
	<summary>
 For the supplied user, check whether it has the required flags and whether the flags value are valid for the "type" of the flag
 </summary>
	<param name="userinfo"></param>
	<param name="requiredFlags"></param>
	<param name="filterForErrorsOnly">Report non-success items only</param>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.FlagValidation.RequiredFlagException.MoreWarningsAvailable">
	<summary>
 Only 1st warning filled, more warnings might be available
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.FlagValidation.RequiredFlagException">
	<summary>
 An exception with details on the failed flag validation results
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.FlagValidation">
	<summary>
 Additional flags of users can be strongly typed
 </summary>
	<remarks>
 Following strong typing is available:
 <list type="">
			<item>String</item>
			<list type="">
				<item>FlagName</item>
				<item>FlagName{String}</item>
				<item>FlagName{Text}</item>
			</list>
			<item>Integer 32 bit</item>
			<list type="">
				<item>FlagName{Integer}</item>
				<item>FlagName{Int}</item>
				<item>FlagName{Int32}</item>
				<item>FlagName{Number}</item>
			</list>
			<item>Integer 64 bit</item>
			<list type="">
				<item>FlagName</item>
				<item>FlagName{Long}</item>
				<item>FlagName{Int64}</item>
			</list>
			<item>Boolean (store values are "1" and "0")</item>
			<list type="">
				<item>FlagName{Bit}</item>
			</list>
			<item>Boolean (store values are "true" and "false")</item>
			<list type="">
				<item>FlagName{Bool}</item>
				<item>FlagName{Boolean}</item>
			</list>
			<item>DateTime (String with a date/time in international ISO format, e.g. "yyyy-MM-dd HH:mm:ss")</item>
			<list type="">
				<item>FlagName{Date}</item>
				<item>FlagName{Date/ISO}</item>
			</list>
		</list>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.DataProtectionSettings.GetLogTypes">
	<summary>
 Load currently in database used flag names and their related setting value
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.DataProtectionSettings.CleanupSettings">
	<summary>
 Cleanup all settings of already deleted users
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.DataProtectionSettings.SaveSettings">
	<summary>
 Save all settings
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMCapabilities.#ctor(CompuMaster.camm.WebManager.WMSystem)">
	<summary>
     Creates a new WMCapabilities class
 </summary>
	<param name="webManager">The camm Web-Manager instance this class shall work with</param>
</member><member name="P:CompuMaster.camm.WebManager.WMCapabilities.Messaging">
	<summary>
     Messaging capabilities
 </summary>
	<value>A new WMCapabilitiesMessaging</value>
</member><member name="P:CompuMaster.camm.WebManager.WMCapabilities.Delivery">
	<summary>
     The delivery capabilities
 </summary>
	<value>A new WMCapabilitiesDelivery</value>
</member><member name="M:CompuMaster.camm.WebManager.WMCapabilities.WMCapabilitiesMessaging.#ctor(CompuMaster.camm.WebManager.WMSystem)">
	<summary>
     Creates a new WMCapabilitiesMessaging class
 </summary>
	<param name="webManager">The camm Web-Manager instance this class shall work with</param>
</member><member name="P:CompuMaster.camm.WebManager.WMCapabilities.WMCapabilitiesMessaging.eMail">
	<summary>
     Support of e-mails
 </summary>
	<value>True if supported</value>
</member><member name="P:CompuMaster.camm.WebManager.WMCapabilities.WMCapabilitiesMessaging.SMS">
	<summary>
     Support of SMS
 </summary>
	<value>True if supported</value>
</member><member name="P:CompuMaster.camm.WebManager.WMCapabilities.WMCapabilitiesMessaging.MMS">
	<summary>
     Support of MMS
 </summary>
	<value>True if supported</value>
</member><member name="P:CompuMaster.camm.WebManager.WMCapabilities.WMCapabilitiesMessaging.eMailQueue">
	<summary>
     Support of e-mail queue
 </summary>
	<value>True if supported</value>
</member><member name="P:CompuMaster.camm.WebManager.WMCapabilities.WMCapabilitiesMessaging.SMSQueue">
	<summary>
     Support of SMS queue
 </summary>
	<value>True if supported</value>
</member><member name="P:CompuMaster.camm.WebManager.WMCapabilities.WMCapabilitiesMessaging.MMSQueue">
	<summary>
     Support of MMSQueue
 </summary>
	<value>True if supported</value>
</member><member name="P:CompuMaster.camm.WebManager.WMCapabilities.WMCapabilitiesMessaging.NewsArchiveSystem">
	<summary>
     Support of news archiving system
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.WMCapabilities.WMCapabilitiesMessaging">
	<summary>
     Messaging capabilities
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMCapabilities.WMCapabilitiesDelivery.#ctor(CompuMaster.camm.WebManager.WMSystem)">
	<summary>
     Creates a new WMCapabilities class
 </summary>
	<param name="webManager">The camm Web-Manager instance this class shall work with</param>
</member><member name="P:CompuMaster.camm.WebManager.WMCapabilities.WMCapabilitiesDelivery.DownloadHandler">
	<summary>
     Support of download handler
 </summary>
	<value>True if supported</value>
</member><member name="T:CompuMaster.camm.WebManager.WMCapabilities.WMCapabilitiesDelivery">
	<summary>
     Delivery capabilities
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.WMCapabilities">
	<summary>
     Capabilities of this configured camm Web-Manager instance
 </summary>
	<remarks>
     Several possibilities to do specific things have to be defined to work. This allows for example to send e-mails with a queue instead of the immediate distribution of every single e-mail.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.NetClient.#ctor">
	<summary>
 Create an instance of camm Web-Manager client
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.NetClient.WebManager">
	<summary>
 Provides access to the inner WMSystem object because several instantiations require it, currently
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="T:CompuMaster.camm.WebManager.NetClient">
	<summary>
 A Web-Manager instance for non-HTTP environment (but which can be used in HTTP-environments)
 </summary>
	<remarks></remarks>
</member><member name="F:CompuMaster.camm.WebManager.IWebManager.DebugLevels.NoDebug">
	<summary>
     No debugging
 </summary>
	<remarks>
     This feature is set to disabled.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.IWebManager.DebugLevels.Low_WarningMessagesOnAccessError">
	<summary>
     Access error warnings only
 </summary>
	<remarks>
     Warning messages will be sent to the developer contact configured in your config files.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.IWebManager.DebugLevels.Low_WarningMessagesOnAccessError_AdditionalDetails">
	<summary>
     More access error warnings
 </summary>
	<remarks>
     Additional warning messages will be sent to the developer contact configured in your config files.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.IWebManager.DebugLevels.Medium_LoggingOfDebugInformation">
	<summary>
     Actively collect data for debugging
 </summary>
	<remarks>
     Even more additional warning messages will be sent to the developer contact configured in your config files.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.IWebManager.DebugLevels.Medium_LoggingAndRedirectAllEMailsToDeveloper">
	<summary>
     Send all e-mails to developer account - never use in production environments!
 </summary>
	<remarks>
		<para>ATTENTION: Never use this mode in production environments!</para>
		<para>All e-mails will be redirected to the developer; no e-mail will be sent to the origin receipient. This is optimal for project development and testing environments.</para>
		<para>The messages will be sent to the developer contact configured in your config files.</para>
	</remarks>
</member><member name="F:CompuMaster.camm.WebManager.IWebManager.DebugLevels.Max_RedirectAllEMailsToDeveloper">
	<summary>
     Maximum debug level - never use in production environments!
 </summary>
	<remarks>
		<para>ATTENTION: Never use this mode in production environments!</para>
		<para>All e-mails will be redirected to the developer; no e-mail will be sent to the origin receipient. This is optimal for setting up the project.</para>
		<para>The messages will be sent to the developer contact configured in your config files.</para>
		<para>Automatic redirects have to be manually executed. This is ideally for solving redirection bugs or when loosing session paths in cookieless scenarios.</para>
	</remarks>
</member><member name="T:CompuMaster.camm.WebManager.IWebManager.DebugLevels">
	<summary>
 Existing debug levels in camm Web-Manager
 </summary>
	<remarks></remarks>
</member><member name="T:CompuMaster.camm.WebManager.IWebManager.SpecialUsers">
	<summary>
 Special users/groups pre-defined by camm Web-Manager
 </summary>
	<remarks>
     Values &gt; 0 are really existing users;
     Values &lt; 0 are pseudonyms
     Values = 0 are invalid
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.IWebManager.VersionAssembly">
	<summary>
 camm Web-Manager assembly/library version
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.IWebManager.VersionDatabase">
	<summary>
 camm Web-Manager database version
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.IWebManager.VersionDatabase(System.Boolean)">
	<summary>
 camm Web-Manager database version
 </summary>
	<param name="allowCaching">True to allow reading from cache</param>
</member><member name="T:CompuMaster.camm.WebManager.IWebManager">
	<summary>
     The common interface of the camm Web-Manager
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.UserNotFoundException">
	<summary>
 An exception which occurs when a user account can't be found/loaded
 </summary>
	<remarks></remarks>
</member><member name="T:CompuMaster.camm.WebManager.PasswordTooWeakException">
	<summary>
 An exception which occurs when a password is too weak
 </summary>
	<remarks></remarks>
</member><member name="T:CompuMaster.camm.WebManager.PasswordRequiredException">
	<summary>
 An exception which occurs when a password is required
 </summary>
	<remarks></remarks>
</member><member name="T:CompuMaster.camm.WebManager.RequiredFieldException">
	<summary>
 An exception which occurs when a password is required
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.WebServices.Core.ExecutePendingProcesses">
	<summary>
 Execute several processes which are timed asynchronously
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WebServices.Core.AnonymizeOldIPAddresses(System.Int32)">
	<summary>
 Anonymizes old IP Addresses
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.WebServices.Core.DeleteExpiredUserSessions(System.Int32)">
	<summary>
 Remove inactive and outdated user sessions
 </summary>
	<param name="maxNumberOfDeletedRows"></param>
</member><member name="T:CompuMaster.camm.WebManager.WebServices.Core">
	<summary>
     camm Web-Manager core web service
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WebServices.BaseWebService.cammWebManager">
	<summary>
     The current instance of camm Web-Manager
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.WebServices.BaseWebService.OnWebManagerJustInTimeCreation">
	<summary>
     Create a camm Web-Manager instance on the fly
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.WebServices.BaseWebService">
	<summary>
     The base web service which implements the cammWebManager property
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Setup.SetupBase">
	<summary>
 camm Web-Manager setup base class; must be inherited
 </summary>
	<ToDo>
     Allow recreation of database only when there is not a functional version of the database.
     An indicator for this situation is when in the log table are lesser than 10 entries of page views.
 </ToDo>
</member><member name="M:CompuMaster.camm.WebManager.Setup.Pages.Update.LoadCwmInstancesList">
	<summary>
 Load the list of reported camm Web-Manager instances accessing the database since the last update
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Setup.Pages.Update.ResetCwmInstancesList">
	<summary>
 Reset the list of camm Web-Manager instances
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Setup.Pages.Update">
	<summary>
     Database update page (accessable via About page)
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Setup.DatabaseUtils.CurrentDateTime(CompuMaster.camm.WebManager.IWebManager)">
	<summary>
 Lookup the database version
 </summary>
	<param name="webManager">The camm Web-Manager instance to query a database</param>
</member><member name="M:CompuMaster.camm.WebManager.Setup.DatabaseUtils.Version(CompuMaster.camm.WebManager.IWebManager)">
	<summary>
 Lookup the database version
 </summary>
	<param name="webManager">The camm Web-Manager instance to query a database</param>
</member><member name="M:CompuMaster.camm.WebManager.Setup.DatabaseUtils.Version(CompuMaster.camm.WebManager.IWebManager,System.Boolean)">
	<summary>
 Lookup the database version
 </summary>
	<param name="webManager">The camm Web-Manager instance to query a database</param>
	<param name="allowCaching">True allows usage of a cached value, False forces a direct query to the database</param>
</member><member name="P:CompuMaster.camm.WebManager.Setup.DatabaseSetup.ProgressOfTasks">
	<summary>Main steps like database creation, each separate database update (build)</summary>
</member><member name="P:CompuMaster.camm.WebManager.Setup.DatabaseSetup.ProgressOfSteps">
	<summary>Sub steps of a database update (build)</summary>
</member><member name="P:CompuMaster.camm.WebManager.Setup.DatabaseSetup.UpdatesOnly">
	<summary>
     Are only updates or also creation of the databases allowed 
 </summary>
	<value></value>
</member><member name="T:CompuMaster.camm.WebManager.Setup.DatabaseSetup.DatabasePatchCommandException">
	<summary>
 An exception that represents an error on executing a single SQL command on the database
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Setup.DatabaseSetup.GetCurrentDBBuildNo(System.String)">
	<summary>
 camm Web-Manager database build no.
 </summary>
	<param name="ConnectionString"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Setup.DatabaseSetup.GetCurrentDBBuildNo(System.Data.SqlClient.SqlConnection,System.Int32)">
	<summary>
 camm Web-Manager database build no.
 </summary>
	<param name="DBConnection"></param>
	<param name="DebugLevel"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Setup.DatabaseSetup.GetSQLServerVersion(System.String)">
	<summary>
 Evaluate the version of the connected sql server instance
 </summary>
	<param name="DBConnectionString"></param>
	<remarks></remarks>
</member><member name="T:CompuMaster.camm.WebManager.Setup.DatabaseSetup">
	<summary>
 camm Web-Manager database setup and update
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Setup.Configuration.FindConfigFilesInCurrentWebRootAndSubFolders">
	<summary>
     Find all configuration files which require an update
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Setup.Configuration.SaveDatabaseConnectionString(System.String)">
	<summary>
     Open all config files and update the connectionstring
 </summary>
	<param name="ConnectionString"></param>
</member><member name="M:CompuMaster.camm.WebManager.Setup.Configuration.SaveConfiguration(System.String,System.String)">
	<summary>
     Open all config files and update the connectionstring
 </summary>
	<param name="Name"></param>
	<param name="Value"></param>
</member><member name="M:CompuMaster.camm.WebManager.Setup.Configuration.SaveConfiguration(System.String,System.Int64)">
	<summary>
     Open all config files and update the connectionstring
 </summary>
	<param name="Name"></param>
	<param name="Value"></param>
</member><member name="T:CompuMaster.camm.WebManager.Setup.Configuration">
	<summary>
     Update the configuration files in the file system
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Setup.ApplicationUtils.Version">
	<summary>
     Get the version information from the current camm Web-Manager library (cammWM.dll)
 </summary>
	<returns>The version of the executing camm Web-Manager library</returns>
</member><member name="M:CompuMaster.camm.WebManager.Security.GroupAuthorizationItemsByRuleForGroups.EffectiveFinally(System.Int32)">
	<summary>
 Real time check for finally effective authorizations
 </summary>
	<param name="serverGroupID">The server group where an authorizations will be granted</param>
	<remarks>Note: Use method cammWebManager.IsUserAuthorized to check a single, finally effective authorization for a user</remarks>
</member><member name="T:CompuMaster.camm.WebManager.Security.GroupAuthorizationItemsByRuleForGroups">
	<summary>
 GroupAuthorizationItemsByRule for usage in GroupInformation class
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Security.UserAuthorizationItemsByRuleForUsers.EffectiveFinally(System.Int32)">
	<summary>
 Real time check for finally effective authorizations
 </summary>
	<param name="serverGroupID">The server group where an authorizations will be granted</param>
	<remarks>Note: Use method cammWebManager.IsUserAuthorized to check a single, finally effective authorization for a user</remarks>
</member><member name="T:CompuMaster.camm.WebManager.Security.UserAuthorizationItemsByRuleForUsers">
	<summary>
 UserAuthorizationItemsByRule for usage in UserInformation class
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Security.UserAuthorizationItemsByRuleForSecurityObjects.EffectiveFinally(System.Int32)">
	<summary>
 Real time check for finally effective authorizations
 </summary>
	<param name="serverGroupID">The server group where an authorizations will be granted</param>
	<remarks>Note: Use method cammWebManager.IsUserAuthorized to check a single, finally effective authorization for a user</remarks>
</member><member name="T:CompuMaster.camm.WebManager.Security.UserAuthorizationItemsByRuleForSecurityObjects">
	<summary>
 UserAuthorizationItemsByRule for usage in SecurityObjectInformation class
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.WMPasswordSecurity.#ctor(CompuMaster.camm.WebManager.WMSystem)">
	<summary>
     Creates a new WMPasswordSecurity class
 </summary>
	<param name="webManager">The camm Web-Manager instance this class shall work with</param>
</member><member name="T:CompuMaster.camm.WebManager.WMPasswordSecurity">
	<summary>
     Container for policy rules for password security
 </summary>
	<remarks>
     Defines a set of rules to validate and generate user passwords
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMPasswordSecurityInspectionSeverity.#ctor(CompuMaster.camm.WebManager.WMSystem)">
	<summary>
     Creates a new WMPasswordSecurityInspectionSeverity class
 </summary>
	<param name="webManager">The camm Web-Manager instance this class shall work with</param>
</member><member name="M:CompuMaster.camm.WebManager.WMPasswordSecurityInspectionSeverity.#ctor(CompuMaster.camm.WebManager.WMSystem,System.Int32,System.Int32)">
	<summary>
     Creates a new WMPasswordSecurityInspectionSeverity class
 </summary>
	<param name="webManager">The camm Web-Manager instance this class shall work with</param>
	<param name="requiredPasswordLength">The required password length</param>
	<param name="requiredComplexityPoints">A number of required complexity points for a successfull validation</param>
</member><member name="T:CompuMaster.camm.WebManager.WMPasswordSecurityInspectionSeverity">
	<summary>
     Policy rules for password security
 </summary>
	<remarks>
     Defines a set of rules to validate and generate user passwords
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.PasswordSecurity.#ctor(CompuMaster.camm.WebManager.WMSystem@)">
	<summary>
     Creates a new WMPasswordSecurity class
 </summary>
	<param name="webManager">The camm Web-Manager instance this class shall work with</param>
</member><member name="P:CompuMaster.camm.WebManager.PasswordSecurity.InspectionSeverities(System.Int32)">
	<summary>
     A WMPasswordSecurityInspectionSeverity for the selected access level
 </summary>
	<param name="accessLevelID">An access level ID</param>
	<value>A new WMPasswordSecurityInspectionSeverity which shall be assigned</value>
</member><member name="T:CompuMaster.camm.WebManager.PasswordSecurity">
	<summary>
     Container for policy rules for password security
 </summary>
	<remarks>
     Defines a set of rules to validate and generate user passwords
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.PasswordSecurityInspectionSeverity.#ctor(CompuMaster.camm.WebManager.WMSystem)">
	<summary>
     Creates a new WMPasswordSecurityInspectionSeverity class
 </summary>
	<param name="webManager">The camm Web-Manager instance this class shall work with</param>
</member><member name="M:CompuMaster.camm.WebManager.PasswordSecurityInspectionSeverity.#ctor(CompuMaster.camm.WebManager.WMSystem,System.Int32,System.Int32)">
	<summary>
     Creates a new WMPasswordSecurityInspectionSeverity class
 </summary>
	<param name="webManager">The camm Web-Manager instance this class shall work with</param>
	<param name="requiredPasswordLength">The required password length</param>
	<param name="requiredComplexityPoints">A number of required complexity points for a successfull validation</param>
</member><member name="P:CompuMaster.camm.WebManager.PasswordSecurityInspectionSeverity.ErrorMessageComplexityPoints(System.Int32)">
	<summary>
     The error message for the selected language when the required complexity points haven't been reached
 </summary>
	<param name="marketID">The language of the error message</param>
	<value>The new error message</value>
</member><member name="P:CompuMaster.camm.WebManager.PasswordSecurityInspectionSeverity.RequiredPasswordLength">
	<summary>
     The number of characters needed to successfully build or validate a password 
 </summary>
	<value>The number of required characters</value>
</member><member name="P:CompuMaster.camm.WebManager.PasswordSecurityInspectionSeverity.RequiredMaximumPasswordLength">
	<summary>
     The maximum number of characters allowed to successfully build or validate a password 
 </summary>
	<value>The maximum number of characters</value>
</member><member name="P:CompuMaster.camm.WebManager.PasswordSecurityInspectionSeverity.RequiredComplexityPoints">
	<summary>
     The number of complexity points to successfully build or validate a password 
 </summary>
	<value>The number of required complexity points</value>
</member><member name="P:CompuMaster.camm.WebManager.PasswordSecurityInspectionSeverity.RecommendedPasswordLength">
	<summary>
     The number of recommended characters to successfully generate a secure password 
 </summary>
	<value>The number of characters for randomly generated passwords</value>
</member><member name="M:CompuMaster.camm.WebManager.PasswordSecurityInspectionSeverity.CreateRandomSecurePassword(System.Int32)">
	<summary>
     Create a random, secure password
 </summary>
	<param name="length">The length of the new password</param>
	<returns>The new generated password</returns>
</member><member name="M:CompuMaster.camm.WebManager.PasswordSecurityInspectionSeverity.CreateRandomPassword(System.Int32)">
	<summary>
 Create a random, secure password with the given length
 </summary>
	<param name="length">The desired length for the new password</param>
	<returns>A string with a strong typed password</returns>
</member><member name="M:CompuMaster.camm.WebManager.PasswordSecurityInspectionSeverity.ValidatePasswordComplexity(System.String,CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Validates the complexity of a password with the user information
 </summary>
	<param name="password">The password to be validated</param>
	<param name="userInformation">The user's profile</param>
	<returns>The result of the validation</returns>
	<remarks>
     A password should never contain parts of the user name or other things often used by hackers.
     To prevent a user from creating those lazy passwords, there is the need to validate it against the data of his user profile.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.PasswordSecurityInspectionSeverity.ValidatePasswordComplexity(System.String,System.Int64)">
	<summary>
     Validates the complexity of a password with the user information
 </summary>
	<param name="password">The password to be validated</param>
	<param name="userID">The ID of the user the password is planned for</param>
	<returns>The result of the validation</returns>
	<remarks>
     A password should never contain parts of the user name or other things often used by hackers.
     To prevent a user from creating those lazy passwords, there is the need to validate it against the data of his user profile.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.PasswordSecurityInspectionSeverity.ValidatePasswordComplexity(System.String)">
	<summary>
     Validates the complexity of a password
 </summary>
	<param name="password">The password to be validated</param>
	<returns>The result of the validation</returns>
	<remarks>
     A password should never contain parts of the user name or other things often used by hackers.
     To prevent a user from creating those lazy passwords, there is the need to validate it against the data of his user profile.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.PasswordSecurityInspectionSeverity.ValidatePasswordComplexity(System.String,System.String[])">
	<summary>
     Validates the complexity of a password
 </summary>
	<param name="password">The password to be validated</param>
	<param name="textExcludes">Array of strings which should never be inside of the password</param>
	<returns>The result of the validation</returns>
	<remarks>
     A password should never contain parts of the user name or other things often used by hackers.
     To prevent a user from creating those lazy passwords, there is the need to validate it against the data of his user profile.
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.PasswordSecurityInspectionSeverity">
	<summary>
     Policy rules for password security
 </summary>
	<remarks>
     Defines a set of rules to validate and generate user passwords
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.PassswordReset.CreateResetUrl">
	<summary>
 Returns a URL the user can open in order to reset his password. 
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.PassswordReset.TokenIsValid(System.String)">
	<summary>
 Checks whether the passed stoken is valid for the user
 </summary>
	<param name="token"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.PasswordConverter.CountConvertable">
	<summary>
 Counts how many passwords can/must be converted to the new algorithm
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.PasswordConverter.ConvertPasswords(System.Int32)">
	<summary>
 Converts (up to) the specified amount of passwords into the new algorithm
 </summary>
	<param name="amount"></param>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.Security.BaseUserAuthorizationItemsByRule.EffectiveByDenyRuleStandardInternal(CompuMaster.camm.WebManager.Security.BaseUserAuthorizationItemsByRule.EffectivityType)">
	<summary>
 Effective authorizations (in context of user's current server group environment) are the combination of the rules [{AllowDevelopment} - {DenyDevelopment}] + [{AllowStandard} - {DenyStandard}]
 </summary>
	<remarks>
		<para>Authorizations for ServerGroup ID "0" always beat such ones for a ServerGroup ID &lt;&gt; 0</para>
		<para>User with different authorization setups are effective authorizations by standard rules as follows (0=false, 1=true)
 <list type="table">
				<listheader>
					<AllowDevelopment>AllowDevelopment</AllowDevelopment>
					<DenyDevelopment>DenyDevelopment</DenyDevelopment>
					<AllowStandard>AllowStandard</AllowStandard>
					<DenyStandard>DenyStandard</DenyStandard>
					<Result>Result IsAllowedEffectively</Result>
				</listheader>
				<item>
					<AllowDevelopment>0</AllowDevelopment>
					<DenyDevelopment>0</DenyDevelopment>
					<AllowStandard>0</AllowStandard>
					<DenyStandard>0</DenyStandard>
					<Result>0</Result>
				</item>
				<item>
					<AllowDevelopment>1</AllowDevelopment>
					<DenyDevelopment>0</DenyDevelopment>
					<AllowStandard>0</AllowStandard>
					<DenyStandard>0</DenyStandard>
					<Result>1</Result>
				</item>
				<item>
					<AllowDevelopment>0</AllowDevelopment>
					<DenyDevelopment>0</DenyDevelopment>
					<AllowStandard>1</AllowStandard>
					<DenyStandard>0</DenyStandard>
					<Result>1</Result>
				</item>
				<item>
					<AllowDevelopment>1</AllowDevelopment>
					<DenyDevelopment>0</DenyDevelopment>
					<AllowStandard>1</AllowStandard>
					<DenyStandard>0</DenyStandard>
					<Result>1</Result>
				</item>
				<item>
					<AllowDevelopment>1</AllowDevelopment>
					<DenyDevelopment>1</DenyDevelopment>
					<AllowStandard>1</AllowStandard>
					<DenyStandard>0</DenyStandard>
					<Result>1</Result>
				</item>
				<item>
					<AllowDevelopment>1</AllowDevelopment>
					<DenyDevelopment>0</DenyDevelopment>
					<AllowStandard>1</AllowStandard>
					<DenyStandard>1</DenyStandard>
					<Result>1</Result>
				</item>
				<item>
					<AllowDevelopment>0</AllowDevelopment>
					<DenyDevelopment>1</DenyDevelopment>
					<AllowStandard>1</AllowStandard>
					<DenyStandard>0</DenyStandard>
					<Result>1</Result>
				</item>
				<item>
					<AllowDevelopment>1</AllowDevelopment>
					<DenyDevelopment>1</DenyDevelopment>
					<AllowStandard>1</AllowStandard>
					<DenyStandard>1</DenyStandard>
					<Result>0</Result>
				</item>
				<item>
					<AllowDevelopment>1</AllowDevelopment>
					<DenyDevelopment>1</DenyDevelopment>
					<AllowStandard>0</AllowStandard>
					<DenyStandard>0</DenyStandard>
					<Result>0</Result>
				</item>
				<item>
					<AllowDevelopment>0</AllowDevelopment>
					<DenyDevelopment>0</DenyDevelopment>
					<AllowStandard>1</AllowStandard>
					<DenyStandard>1</DenyStandard>
					<Result>0</Result>
				</item>
				<item>
					<AllowDevelopment>1</AllowDevelopment>
					<DenyDevelopment>0</DenyDevelopment>
					<AllowStandard>0</AllowStandard>
					<DenyStandard>1</DenyStandard>
					<Result>1</Result>
				</item>
			</list>
		</para>
	</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Security.BaseUserAuthorizationItemsByRule.EffectiveByDenyRuleForDevelopmentInternal(CompuMaster.camm.WebManager.Security.BaseUserAuthorizationItemsByRule.EffectivityType)">
	<summary>
 Effective authorizations (in context of user's current server group environment) are the combination of the rules [{AllowIsDev} - {DenyIsDev}]
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Security.NavigationInformation.SetSecurityObjectInfoInternal(CompuMaster.camm.WebManager.WMSystem.SecurityObjectInformation)">
	<summary>
 Required as long as construction of NavInfos in not independent from SecurityObjectInfo (=as long as SplittedNav feature not fully supported)
 </summary>
	<param name="securityObject"></param>
</member><member name="M:CompuMaster.camm.WebManager.Security.GroupAuthorizationItemsByRuleForSecurityObjects.EffectiveFinally(System.Int32)">
	<summary>
 Real time check for finally effective authorizations
 </summary>
	<param name="serverGroupID">The server group where an authorizations will be granted</param>
	<remarks>Note: Use method cammWebManager.IsUserAuthorized to check a single, finally effective authorization for a user</remarks>
</member><member name="T:CompuMaster.camm.WebManager.Security.GroupAuthorizationItemsByRuleForSecurityObjects">
	<summary>
 GroupAuthorizationItemsByRule for usage in SecurityObjectInformation class
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.WMSymmetricCrypt.AlgorithmKey">
	<summary>
 Key for the symmetric algorithm
 </summary>
	<value></value>
	<remarks>Varies for different algorithms and must be overriden thus</remarks>
</member><member name="P:CompuMaster.camm.WebManager.WMSymmetricCrypt.ImplementedAlgorithm">
	<summary>
 Specifies which algorithm the subclass implements
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.WMSymmetricCrypt.TransformString(System.String)">
	<summary>
 Encrypts/Hashes the plaintext.
 </summary>
	<param name="plaintext">Plaintext to be hashed or crypted</param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.SymmetricCrypt.VerifyKeyLength(System.Byte[])">
	<summary>
 Throws an exception if key length is not suitable for this algorithm
 </summary>
	<param name="key"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.SymmetricCrypt.VerifyIVLength(System.Byte[])">
	<summary>
 Throws an exception if iv length is not suitable for this algorithm
 </summary>
	<param name="iv"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.SymmetricCrypt.CreateIV">
	<summary>
 Generates and returns an IV suitable for the algorithm
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.SymmetricCrypt.Transform(System.Security.Cryptography.ICryptoTransform,System.Byte[])">
	<summary>
 Performs the cryptographic transformation (encryption/decryption)
 </summary>
	<param name="transformer">Transformer</param>
	<param name="data">plaintext data, or encrypted data</param>
	<returns>Transfromed data</returns>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.SymmetricCrypt.EncryptBytes(System.Byte[],System.Byte[],System.Byte[])">
	<summary>
 Encrypts the given plaintext with the given key
 </summary>
	<param name="plaintext">Plaintext</param>
	<param name="key">Key suitable for the the key size of chosen algorithm</param>
	<param name="iv">Initialization vector to be used in the encryption</param>
	<returns>Encrypted text</returns>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.SymmetricCrypt.DecryptBytes(System.Byte[],System.Byte[],System.Byte[])">
	<summary>
 Decrypts the given plaintext with the given key
 </summary>
	<param name="cryptedText">Plaintext</param>
	<param name="key">Key suitable for the the key size of chosen algorithm</param>
	<param name="iv">Initialization vector to be used in the encryption</param>
	<returns>Decrypted textV</returns>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.PBKDF2.GenerateAlgorithmNonce">
	<summary>
 Generates the nonce. Format: [rounds (PBKDF2 iteraetions) as ascii bytes]-[salt bytes]
 </summary>
	<remarks>Not exactly only the nonce in this case, but we must prepend it with the nr. of rounds.</remarks>
</member><member name="M:CompuMaster.camm.WebManager.PBKDF2.VerifyRoundsSaltParam(System.Byte[])">
	<summary>
 Verifies that we got a correct parameter for our operation. Must have the format: [rounds (PBKDF2 iteraetions) as ascii bytes]-[salt bytes]
 </summary>
	<param name="roundsSaltParam"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.PBKDF2.ExtractRoundsFromParam(System.Byte[],System.Int32)">
	<summary>
 Extracts the iteration count
 </summary>
	<param name="roundsSaltParam">[rounds (PBKDF2 iteraetions) as ascii bytes]-[salt bytes]</param>
	<param name="dashPosition">0-based index of the dash which seperates rounds and salt</param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.PBKDF2.ExtractSaltFromParam(System.Byte[],System.Int32)">
	<summary>
 Extracts the salt
 </summary>
	<param name="roundsSaltParam">[rounds (PBKDF2 iteraetions) as ascii bytes]-[salt bytes]</param>
	<param name="dashPosition">0-based index of the dash which seperates rounds and salt</param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.PBKDF2.TransformString(System.String)">
	<summary>
 Encrypts/Hashes the plaintext.
 </summary>
	<param name="plaintext">Plaintext to be hashed or crypted</param>
	<remarks></remarks>
</member><member name="T:CompuMaster.camm.WebManager.Crypt">
	<summary>
 Kept around for applications that always used the old "Crypt" class which implemented EncDecMod, hence we cannot rename it. 
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.EncDecModSimple.TransformString(System.String)">
	<summary>
 Encrypts/Hashes the plaintext.
 </summary>
	<param name="plaintext">Plaintext to be hashed or crypted</param>
	<remarks></remarks>
</member><member name="T:CompuMaster.camm.WebManager.EncDecMOD">
	<summary>
     Encoding methods
 </summary>
	<remarks>
     ACHTUNG! Kompatibilität nur mit ANSI gegeben, nicht mit Unicode!
              Unicode-Strings werden wohl auch gecrypted, jedoch ist eine Rückkonvertierung nicht mehr funktional
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DefaultAlgoCryptor.TransformPlaintext(System.String)">
	<summary>
 Encrypts/Hashes the plaintext.
 </summary>
	<param name="plaintext">Plaintext to be hashed or crypted</param>
	<remarks></remarks>
</member><member name="T:CompuMaster.camm.WebManager.DefaultAlgoCryptor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.IWMPasswordTransformation.GenerateAlgorithmNonce">
	<summary>
 Generates a nonce (number used once or number once) which the algorithm needs to work (properly) with, e. g. IV or Salt
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.IWMPasswordTransformation.Transform(System.Byte[],System.Byte[])">
	<summary>
 Encryption/Hashing with plaintext and IV/salt. 
 </summary>
	<param name="plaintext"></param>
	<param name="noncevalue"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.IWMPasswordTransformation.TransformString(System.String,System.Byte[])">
	<summary>
 Encryption/Hashing with plaintext and IV/salt, returning ciphertext as a string (usually base64 encoded)
 </summary>
	<param name="plainText"></param>
	<param name="noncevalue"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.IWMPasswordTransformation.TransformString(System.String)">
	<summary>
 Encrypts/Hashes the string. Will generate IV/salt.
 </summary>
	<param name="plainText"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.IWMPasswordTransformationBackwards.TransformBack(System.Byte[],System.Byte[])">
	<summary>
 Decrypt with plaintext and IV/salt. 
 </summary>
	<param name="plaintext"></param>
	<param name="noncevalue"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.IWMPasswordTransformationBackwards.TransformStringBack(System.String,System.Byte[])">
	<summary>
 Decrypt with plaintext and IV/salt, returning ciphertext as a string (usually base64 encoded)
 </summary>
	<param name="encryptedString"></param>
	<param name="noncevalue"></param>
	<remarks></remarks>
</member><member name="F:CompuMaster.camm.WebManager.CryptoTransformationResult.Algorithm">
	<summary>
 Algorithm used for the transformation
 </summary>
	<remarks></remarks>
</member><member name="F:CompuMaster.camm.WebManager.CryptoTransformationResult.TransformedText">
	<summary>
 The transformed (encrypted/hashed) text
 </summary>
	<remarks></remarks>
</member><member name="F:CompuMaster.camm.WebManager.CryptoTransformationResult.Noncevalue">
	<summary>
 The nonce for the crypto algorithm used for the transformation. This is usually the IV or Salt
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.PasswordTransformerFactory.ProduceCryptographicTransformer(CompuMaster.camm.WebManager.PasswordAlgorithm)">
	<summary>
 Produces the proper algorithm
 </summary>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.Security.BaseGroupAuthorizationItemsByRule.EffectiveByDenyRuleStandardInternal(CompuMaster.camm.WebManager.Security.BaseGroupAuthorizationItemsByRule.EffectivityType)">
	<summary>
 Effective authorizations (in context of user's current server group environment) are the combination of the rules [{AllowDevelopment} - {DenyDevelopment}] + [{AllowStandard} - {DenyStandard}]
 </summary>
	<remarks>
		<para>Authorizations for ServerGroup ID "0" always beat such ones for a ServerGroup ID &lt;&gt; 0</para>
		<para>Group with different authorization setups are effective authorizations by standard rules as follows (0=false, 1=true)
 <list type="table">
				<listheader>
					<AllowDevelopment>AllowDevelopment</AllowDevelopment>
					<DenyDevelopment>DenyDevelopment</DenyDevelopment>
					<AllowStandard>AllowStandard</AllowStandard>
					<DenyStandard>DenyStandard</DenyStandard>
					<Result>Result IsAllowedEffectively</Result>
				</listheader>
				<item>
					<AllowDevelopment>0</AllowDevelopment>
					<DenyDevelopment>0</DenyDevelopment>
					<AllowStandard>0</AllowStandard>
					<DenyStandard>0</DenyStandard>
					<Result>0</Result>
				</item>
				<item>
					<AllowDevelopment>1</AllowDevelopment>
					<DenyDevelopment>0</DenyDevelopment>
					<AllowStandard>0</AllowStandard>
					<DenyStandard>0</DenyStandard>
					<Result>1</Result>
				</item>
				<item>
					<AllowDevelopment>0</AllowDevelopment>
					<DenyDevelopment>0</DenyDevelopment>
					<AllowStandard>1</AllowStandard>
					<DenyStandard>0</DenyStandard>
					<Result>1</Result>
				</item>
				<item>
					<AllowDevelopment>1</AllowDevelopment>
					<DenyDevelopment>0</DenyDevelopment>
					<AllowStandard>1</AllowStandard>
					<DenyStandard>0</DenyStandard>
					<Result>1</Result>
				</item>
				<item>
					<AllowDevelopment>1</AllowDevelopment>
					<DenyDevelopment>1</DenyDevelopment>
					<AllowStandard>1</AllowStandard>
					<DenyStandard>0</DenyStandard>
					<Result>1</Result>
				</item>
				<item>
					<AllowDevelopment>1</AllowDevelopment>
					<DenyDevelopment>0</DenyDevelopment>
					<AllowStandard>1</AllowStandard>
					<DenyStandard>1</DenyStandard>
					<Result>1</Result>
				</item>
				<item>
					<AllowDevelopment>0</AllowDevelopment>
					<DenyDevelopment>1</DenyDevelopment>
					<AllowStandard>1</AllowStandard>
					<DenyStandard>0</DenyStandard>
					<Result>1</Result>
				</item>
				<item>
					<AllowDevelopment>1</AllowDevelopment>
					<DenyDevelopment>1</DenyDevelopment>
					<AllowStandard>1</AllowStandard>
					<DenyStandard>1</DenyStandard>
					<Result>0</Result>
				</item>
				<item>
					<AllowDevelopment>1</AllowDevelopment>
					<DenyDevelopment>1</DenyDevelopment>
					<AllowStandard>0</AllowStandard>
					<DenyStandard>0</DenyStandard>
					<Result>0</Result>
				</item>
				<item>
					<AllowDevelopment>0</AllowDevelopment>
					<DenyDevelopment>0</DenyDevelopment>
					<AllowStandard>1</AllowStandard>
					<DenyStandard>1</DenyStandard>
					<Result>0</Result>
				</item>
				<item>
					<AllowDevelopment>1</AllowDevelopment>
					<DenyDevelopment>0</DenyDevelopment>
					<AllowStandard>0</AllowStandard>
					<DenyStandard>1</DenyStandard>
					<Result>1</Result>
				</item>
			</list>
		</para>
	</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Security.BaseGroupAuthorizationItemsByRule.EffectiveByDenyRuleForDevelopmentInternal(CompuMaster.camm.WebManager.Security.BaseGroupAuthorizationItemsByRule.EffectivityType)">
	<summary>
 Effective authorizations (in context of user's current server group environment) are the combination of the rules [{AllowIsDev} - {DenyIsDev}]
 </summary>
	<returns>
		<para>Authorizations for ServerGroup ID "0" always beat such ones for a ServerGroup ID &lt;&gt; 0</para>
	</returns>
</member><member name="T:CompuMaster.camm.WebManager.Security.BaseGroupAuthorizationItemsByRule">
	<summary>
  GroupAuthorizationItemsByRule for usage in SecurityObjectInformation class
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.UpdateUserProfile.FillMotivationControlValues(System.String)">
	<summary>
 Fill the motivation control elements to fit with the current user profile data
 </summary>
	<param name="flagValue"></param>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.UpdateUserProfile.FillComesFromControlValues(System.String)">
	<summary>
 Fill the comes-from control elements to fit with the current user profile data
 </summary>
	<param name="flagValue"></param>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.UpdateUserProfile.LookupItemListElementOther(System.Web.UI.WebControls.ListItemCollection)">
	<summary>
 Lookup the element of the list with value "Other"
 </summary>
	<param name="list"></param>
	<returns></returns>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.UpdateUserProfile.SplitFlagCommaSeparatedButWithParenthesisPriority(System.String)">
	<summary>
 Split a string by comma, but not if the comma is within parenthesis
 </summary>
	<param name="flagValue">Comma-separated list of values, e.g. "Abc,Def,Other (Some,other,commas)"</param>
	<returns>Separated text elements, e.g. "Abc", "Def", "Other (Some,other,commas)" </returns>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.UpdateUserProfile.BaseUpdateUserProfile_Load(System.Object,System.EventArgs)">
	<summary>
 DropdownCountry must contain list of countries before AssignUserInfoDataToForm is called and which would add the user's previous country value for a 2nd time to the dropdown list
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.UpdateUserProfile.FillMarketsList(System.Web.UI.WebControls.DropDownList)">
	<summary>
 Create a string with OPTION tags for all activated languages for embedding into the SELECT tag
 </summary>
	<param name="languageDropdownList">A dropdownlist control which shall be filled</param>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.CreateUserProfile.PasswordSeverityCheckStrings">
	<summary>
 Prohibited password parts for password complexity check
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.CreateUserProfile.FillUserAccount(CompuMaster.camm.WebManager.IUserInformation)">
	<summary>
     Fill the user profile with the new data which shall be saved
 </summary>
	<param name="userInfo">The current user profile which shall be created</param>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.CreateUserProfile.FillMarketsList(System.Web.UI.WebControls.DropDownList)">
	<summary>
 Create a string with OPTION tags for all activated languages for embedding into the SELECT tag
 </summary>
	<param name="languageDropdownList">A dropdownlist control which shall be filled</param>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.ChangeUserProfile.ResetMissingFieldItems">
	<summary>
     Clear the list of missing fields
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.ChangeUserProfile.AddMissingFieldItem(System.String)">
	<summary>
     Add an additional element to the list of missing fields
 </summary>
	<param name="name"></param>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.ChangeUserProfile.RequiredFormDataAvailable">
	<summary>
     Validate the form data to be complete
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.ChangeUserProfile.UpdateProfileData(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Fill the user profile with the new data which shall be saved
 </summary>
	<param name="userInfo">The current user profile which shall be updated</param>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.ChangeUserProfile.MarketsListOptions(System.Int32)">
	<summary>
 Create a string with OPTION tags for all activated languages for embedding into the SELECT tag
 </summary>
	<param name="preferredLanguageLevelID">1 for 1st language, 2 for the 2nd one, 3 for the 3rd one</param>
</member><member name="P:CompuMaster.camm.WebManager.Pages.UserAccount.BaseUpdateUserProfile.ConfirmationUserPassword">
	<summary>
 Pointing to the textbox with the confirmation password which shall be used for verification of the user
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.BaseUpdateUserProfile.CollectDataAndUpdateAccount">
	<summary>
 The main workflow for this page is to collect provided data from user, update the account 
 </summary>
	<remarks>If the creation is successful, method AfterUserUpdate will be executed</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.BaseUpdateUserProfile.LookupListItemWithValue(System.Web.UI.WebControls.ListItemCollection,System.String)">
	<summary>
 Try to find the specified list item case-insensitive
 </summary>
	<param name="collection"></param>
	<param name="value"></param>
	<returns>The list item or null (Nothing in VisualBasic) if not found</returns>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.BaseUpdateUserProfile.AssignUserInfoDataToForm">
	<summary>
 Assign the current user's profile settings to controls of this page
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.BaseUpdateUserProfile.AssignFormDataToUserInfo">
	<summary>
 Assign data from controls of this page to the current user
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.BaseUpdateUserProfile.AfterUserUpdate(CompuMaster.camm.WebManager.IUserInformation)">
	<summary>
 Overridable method for customized actions after the new user account has been written
 </summary>
	<param name="userInfo">The updated user account</param>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.BaseUpdateUserProfile.WriteUserAccount(CompuMaster.camm.WebManager.IUserInformation)">
	<summary>
 Finally write the user account
 </summary>
	<param name="userInfo"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.BaseUpdateUserProfile.ShowErrorMessage(System.String)">
	<summary>
 Show an error message on the GUI (e.g. in validator summary)
 </summary>
	<param name="message"></param>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.Pages.UserAccount.BaseUpdateUserProfile.LimitedAllowedCountries">
	<summary>
 The list of allowed values for the country field (or empty list in case of no limitation)
 </summary>
	<returns></returns>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.BaseCreateUserProfile.UrlAfterLogin(CompuMaster.camm.WebManager.IUserInformation)">
	<summary>
 After a successfull account creation and login, the user lands on this URL
 </summary>
	<param name="user">The user account that has been created</param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.BaseCreateUserProfile.CollectDataAndCreateAccountAndStartLoginWorkflow">
	<summary>
 The main workflow for this page is to collect provided data from user, create the account and login
 </summary>
	<remarks>If the creation is successful, method AfterUserCreation will be executed and the login workflow starts</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Pages.UserAccount.BaseCreateUserProfile.ForceLogin">
	<summary>
 Force the user login - also in case that the user already logged on at another terminal
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.BaseCreateUserProfile.ExecuteLogin(System.String,System.String,System.String)">
	<summary>
 Start the login workflow
 </summary>
	<param name="loginName"></param>
	<param name="password"></param>
	<param name="pageUrlAfterLogin"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.BaseCreateUserProfile.CreateUserInfo">
	<summary>
 Create an IUserInformation object based on provided data from user
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.BaseCreateUserProfile.AfterUserCreation(CompuMaster.camm.WebManager.IUserInformation)">
	<summary>
 Overridable method for customized actions after the new user account has been written
 </summary>
	<param name="userInfo">The created user account</param>
</member><member name="P:CompuMaster.camm.WebManager.Pages.UserAccount.BaseCreateUserProfile.NewUserPassword">
	<summary>
 Pointing to the textbox with the new password which shall be used for the new user account
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.BaseCreateUserProfile.WriteUserAccount(CompuMaster.camm.WebManager.IUserInformation)">
	<summary>
 Finally write the user account
 </summary>
	<param name="userInfo"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.BaseCreateUserProfile.ShowErrorMessage(System.String)">
	<summary>
 Show an error message on the GUI (e.g. in validator summary)
 </summary>
	<param name="message"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.BaseCreateUserProfile.PasswordSeverityCheckStrings">
	<summary>
 Prohibited password parts for password complexity check
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.UserAccount.BaseCreateUserProfile.FillUserAccount(CompuMaster.camm.WebManager.IUserInformation)">
	<summary>
     Fill the user profile with the new data which shall be saved
 </summary>
	<param name="userInfo">The current user profile which shall be created</param>
</member><member name="P:CompuMaster.camm.WebManager.Pages.UserAccount.BaseCreateUserProfile.LimitedAllowedCountries">
	<summary>
 The list of allowed values for the country field (or empty list in case of no limitation)
 </summary>
	<returns></returns>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Specialized.StartPageWithoutFrameSet">
	<summary>
     Handles referrer requests by session content or query string arguments
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Specialized.StartPageForFrameSet">
	<summary>
     Handles referrer requests by session content or query string arguments
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Specialized.DownloadFileByDownloadHandler.IgnoreSizeLimits">
	<summary>
     Ignore file size limits
 </summary>
	<value></value>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Specialized.DownloadFileByDownloadHandler">
	<summary>
     Send a binary file from download handler to the browser
 </summary>
	<remarks>
     Per default, all size limits will be ignored since the CPU time or file system space has already been involved and can't be saved any more. So, since the file has already been created, it should be send now without any hassles.
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.Pages.ProtectedPage">
	<summary>
     A protected page which requires an access validation
 </summary>
	<remarks>
     If the security object name hasn't been set via the property cammWebManager.SecurityObject and it also hasn't been validated by performing an access check, this page will throw an exception in Render event.
     The security objects "Anonymous" or "@@Anonymous" would be accepted also when they allow access to everybody. This is okay since it is ensured by the non-empty string that the developer hasn't forgotten to add a security object check to his page.
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Page.IsProtectedPage">
	<summary>
 If IsProtectedPage is enabled, the page request must be authorized before page prerender event, otherwise an exception is thrown.
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Page.EnableProtectedPageRequirement">
	<summary>
 Activate the ProtectedPage logic as indicated by IsProtectedPage
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Page.CheckForExecutedPageAuthValidationOnPreRender(System.Object,System.EventArgs)">
	<summary>
     Throws an error when no security object has been set up
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Page.RawClientUrl">
	<summary>
     The current URL as the client sees it - this also works for Cookieless and UrlRewriting scenarios
 </summary>
	<value></value>
	<remarks>
 Beginning with ASP.NET 4, the RawUrl might not contain the script name
 <list>
			<item>.NET &gt;= 4: request to /test/ returns /test/</item>
			<item>.NET &lt;= 2: request to /test/ returns /test/default.aspx</item>
		</list>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Page.LookupServerForm">
	<summary>
     Lookup the server form which resides on the page
 </summary>
	<returns>The control of the server form if it's existant</returns>
</member><member name="F:CompuMaster.camm.WebManager.Pages.Page._FirePageEventsToCammWebManagerManually">
	<summary>
     Fires all page evens manually if the camm Web-Manager object has been created just on the fly because it won't do automatically since this is not a regular involved control
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Page.CreationOnTheFlyAllowed">
	<summary>
     True to allow it (makes only sense for error pages) or False to ask the configuration setting
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Page.cammWebManager">
	<summary>
     The current instance of camm Web-Manager
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Page.WebManager">
	<summary>
     The property which implements the interface for IPage.cammWebManager
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Page.OnWebManagerJustInTimeCreation">
	<summary>
     Create a camm Web-Manager instance on the fly
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Page.InheritCwmInstance(System.Web.UI.ControlCollection)">
	<summary>
     Recursive method to assign the camm Web-Manager instance to all sub controls
 </summary>
	<param name="controls">The control collection which shall be tested for the CompuMaster.camm.WebManager.Controls.IControl interface</param>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Page.RedirectPermanently(System.String)">
	<summary>
 Redirect a browser with an HTTP 301 return code permanently to the new address
 </summary>
	<param name="url">The new destination address</param>
	<remarks>A regular Response.Redirect does a HTTP 302 temporary redirection which has a decrease in search engine optimization efforts regarding the link priority. You'll get a more strong link priority if you redirect e. g. from your root URL to your start page with a permanent link.</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Page.RedirectSemiPermanently(System.String,System.String)">
	<summary>
 Redirect a browser with an HTTP 302 status code temporary to a new address while redirecting a crawler with a 301 return code permanently to another new address
 </summary>
	<param name="temporaryUrlForRegularBrowsers">The new destination address for the regular browsers which can be influenced by e. g. Session Variables and which can change from time to time, from request to request. This redirection will use the HTTP 302 status code.</param>
	<param name="permanentCrawlerUrl">An url for all crawlers/robots/spiders which permanently points to this target url.  </param>
	<remarks>
		<para>A regular Response.Redirect does a HTTP 302 temporary redirection which has a decrease in search engine optimization efforts regarding the link priority. You'll get a more strong link priority if you redirect e. g. from your root URL to your start page with a permanent link.</para>
		<para>Because sometimes its required for special workflows to redirect a browser to differnent locations based on some session data, it's often possible to redirect crawlers always to the same permanent address. In case you redirect a client permanently, it will remember the address in its local cache and not re-ask the server for this address. So you must ensure that you really can redirect the client to the same address when it has to request an url.</para>
		<para>A possible solution for this problem can be to redirect a normal client-browser to several URLs depending on your own internal logic while redirecting permanently all crawlers to a fixed URL. The effect is that your link priority within the search engines' logic can be moved to the destination address.</para>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Page.RedirectTemporary(System.String)">
	<summary>
 Redirect a browser with an HTTP 302 return code (temporary) to the new address
 </summary>
	<param name="url">The new destination address</param>
	<remarks>
		<para>A regular Response.Redirect does a HTTP 302 temporary redirection which is not cached by browsers. This allows a dynamic url destination e. g. based on language properties.</para>
		<para>ASP.NET 2.x as well as later versions have got a bug (confirmed by Microsoft) which incorrectly encodes a redirection URL in the redirection body. Typically it's not considered because the response header is used which contains the correctly encoded URL. But some search engines might find the wrong URL of the response body and try to lookup this wrong URL. This may lead to wrong dead links or 404 errors at your website. For this reason, the redirection has been reimplemented to correct the behaviour here.</para>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Page.RedirectWithPostData(System.String,System.Collections.Specialized.NameValueCollection)">
	<summary>
 Redirect to another address by using a client-form which posts data
 </summary>
	<param name="url">The new destination address</param>
	<param name="data">A collection of key/value pairs for the destination page</param>
	<remarks>
		<para>This method creates a client HTML form with hidden data fields and a JavaScript auto-post-back to send the data with POST method to a destination address.</para>
		<para>Use this redirection method if the recieving page only understands form data and doesn't understand query parameters. Also use this method if you have to post a huge amount of data so that it extends the critical browser-limits of the request GET parameters.</para>
	</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Pages.MasterPage.cammWebManager">
	<summary>
 The cammWebManager instance created by a cammWebManager control on this master page or one of its parent master pages
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Login.LoginWithExternalAccount.IsAuthenticated">
	<summary>
     Are any login credentials available? In single-sign-on scenarios, the user might be logged on with an external user account or anonymously.
 </summary>
	<value></value>
	<remarks>
     This property helps to find out why the LoginCredentials property was empty: either the external login information hasbn't been there or else the login information had been there but without an assigned, valid webmanager account
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.LoginWithExternalAccount.OnMissingAuthentication">
	<summary>
     The actions which shall be made if an external login has been detected but there is not user account in CWM for it
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.LoginWithExternalAccount.LogMissingAssignmentOfExternalUserAccount(System.String,System.String,System.String,System.String,System.String)">
	<summary>
 Create appropriate log entries for external, not-yet-assigned user account 
 </summary>
	<param name="nameOfExternalAccountSystem"></param>
	<param name="externalUserName"></param>
	<history>
 	[wezel]	    12.09.2008	Created
 	[zeutzheim]	09.07.2009	Modified
 </history>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.LoginWithExternalAccount.MarkExternalUserAccountAsAssigned(System.String,System.String)">
	<summary>
 Mark an external user account (which has been marked as with missing assignment) as assigned successfully
 </summary>
	<remarks>
 In previous requests and steps, an external user account is marked by method LogMissingAssignmentOfExternalUserAccount to be an unassigned account.
 To provide a most current list of user accounts which haven't been assigned (e. g. the user hasn't completed the SSO-create-account form), the user account shall be removed from the list of unassigned users.
 In the camm Web-Manager administration area, there will be a statistic of those unassigned user accounts.
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Login.LoginWithExternalAccount">
	<summary>
     A page which performs a seamless or automatic logon procedure
 </summary>
	<remarks>
     This page provides login methods for external account data.
     To prevent endless roundtrips from one page to this page and back and again to this page, the referring page should be another one than the page address after logon. This means for example, that the referring page is located in the web's root folder ("/"), but the cammwebmanager.Internationalization.User_Auth_Config_Paths_UserAuthSystem targets another subfolder, e. g. "/welcome/".
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.LoginWithActiveDirectoryUser.OnMissingAssignmentOfExternalAccount">
	<summary>
     Prepare the page in the case that there is no external account assigned to the CWM user account, yet
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.LoginWithActiveDirectoryUser.Localize">
	<summary>
     Localize this page
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Login.LoginWithActiveDirectoryUser.RedirectUrlWhenAdsUserCantBeAssignedToCWMUser">
	<summary>
     When there is an error or the user cancels the assignment process/form, the page redirects to this URL which is the logon page per default
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Login.LoginWithActiveDirectoryUser.EnsureMustFieldsInAdsBeforeAsking">
	<summary>
     When a user exists in ADS but hasn't got an e-mail address or other must fields are missing, don't ask the user for assigning/creating a new account
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.LoginWithActiveDirectoryUser.LoadPageData">
	<summary>
     Show the register page or automatically redirect to the start page
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Pages.Login.LoginWithActiveDirectoryUser.AutomationMethod.UserDefined">
	<summary>
     Show a form to the user where he can decide to assign an existing, create a new account or to proceed without doing anything
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Pages.Login.LoginWithActiveDirectoryUser.AutomationMethod.CreateAccount">
	<summary>
     Automatically create a new account when the required fields are available
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Pages.Login.LoginWithActiveDirectoryUser.AutomationMethod.DoNothing">
	<summary>
     Never assign anything, don't ask, just forward the user without logging on
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Login.LoginWithActiveDirectoryUser.AutomationMethod">
	<summary>
     Possible automation methods
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Login.LoginWithActiveDirectoryUser.AutomateExternalAccountAssignment">
	<summary>
     What shall happen when a user has been identified through ADS and doesn't exist in our camm Web-Manager user account system?
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.LoginWithActiveDirectoryUser.FillFieldsRequiredAsMinimum(CompuMaster.camm.WebManager.IUserInformation)">
	<summary>
     Provide additional user information which is not available by the external account system
 </summary>
	<param name="user">The user profile as it has been read already</param>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.LoginWithActiveDirectoryUser.SearchExistingUser(CompuMaster.camm.WebManager.WMSystem.UserInformation)">
	<summary>
     Search for an already existing user account with the same first and last name
 </summary>
	<returns>The found user information object if there is only one matching user account available, otherwise in case of no match or several matches it will be nothing</returns>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.LoginWithActiveDirectoryUser.AppendValidationErrorMessage(System.String)">
	<summary>
     Add an additional error message
 </summary>
	<param name="text"></param>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Login.LoginWithActiveDirectoryUser.LdapServerName">
	<summary>
     This is the name of the LDAP server which shall be asked for additional user details when the external account hasn't been assigned to a camm Web-Manager user account, yet
 </summary>
	<value></value>
	<remarks>
     By default, this is the NETBIOS name of the user's domain which is the domain server, regulary
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.LoginWithActiveDirectoryUser.LookupUserIDFromExternalAccountName(CompuMaster.camm.WebManager.WMSystem,System.String)">
	<summary>
     Find a CWM user with a defined external account name and return its ID
 </summary>
	<param name="webManager">The current CWM which shall be used for searching for users with an external account information</param>
	<param name="adsAccountName">The searched value</param>
	<returns>A camm Web-Manager user ID or 0 if not found</returns>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Login.LoginWithActiveDirectoryUser">
	<summary>
     A page which performs an automatic logon procedure with the Active Directory
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Login.RootPageForRedirectToLogonPageWithExternalAccount">
	<summary>
     An alternative start page for the root folder to redirect the browser to the single sign on page
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Login.NotAuthorizedWithExternalAccount">
	<summary>
     The page which is responsible for all situations when the user can't be authorized successfully
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Login.LDirect">
	<summary>
     Logon distribution
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.LoginProcedureFinished.PageOnLoad(System.Object,System.EventArgs)">
	<summary>
     Redirect either to the referer or the start address
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Login.LoginProcedureFinished.StartPageUrl">
	<summary>
     When no special referer has been set up, then the redirect will go to the normal start page
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Login.LoginProcedureFinished.Referer">
	<summary>
     When the user went to a document which required a logon, the document's address might be saved in the user session for later redirecting again. This property returns this value and removes the referer item from the session objects (to prevent an additional "going back").
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Login.LoginProcedureFinished.ReloadInTopFrameBeforeRedirect">
	<summary>Reload within frames after the login has completed</summary>
	<value></value>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Login.LoginProcedureFinished">
	<summary>
     After a successfull logon/logoff, the user must be redirected to either the originally demanded URL or to the normal start page.
 </summary>
	<remarks>
     When the user went to a document which required a logon, the document's address might be saved in the user session for later redirecting again. When this Referer has been saved, the user shall be redirected back to this URL again, otherwise he shall be redirected to the address of the regular start page.
     Please note: this page executes always on the master server of the server group which is responsable for starting and finishing the logon procedure.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.Utils.IsLoginAllowedViaQueryStringData(System.String,CompuMaster.camm.WebManager.WMSystem)">
	<summary>
     Does the configuration allows a general login possibility via the query string data or else is it specially allowed for the specified user?
 </summary>
	<param name="username">Does this user has got login authorization via the HTTP GET method?</param>
	<param name="cammWebManager">A camm Web-Manager instance</param>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.Utils.LogonToAllOtherServers(CompuMaster.camm.WebManager.WMSystem,System.String)">
	<summary>
     To complete the logon process, all the other servers in the same server group have to know the user, too
 </summary>
	<param name="cammWebManager">A camm Web-Manager instance</param>
	<remarks>
     This method will only be triggered on the master server (=the logon server) of a server group
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.Utils.LogonToCurrentMasterServer(CompuMaster.camm.WebManager.WMSystem,CompuMaster.camm.WebManager.Pages.Login.Utils.LogonCredentials,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Execute the logon to the current master server
 </summary>
	<param name="cammWebManager"></param>
	<param name="usercredentials"></param>
	<returns>An URL where the browser should be redirected to</returns>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Login.Utils.LogonCredentials">
	<summary>
     Logon data
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Login.Utils">
	<summary>
     Login utils
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Login.CheckLogin.LoginCredentials">
	<summary>
     The login information which shall be used for the logon
 </summary>
	<value></value>
	<remarks>
     Please note: the return value must be null (Nothing in VisualBasic) when the login credentials are incomplete
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Login.CheckLogin.IsAuthenticated">
	<summary>
     Are any login credentials available? In single-sign-on scenarios, the user might be logged on with an external user account or anonymously.
 </summary>
	<value></value>
	<remarks>
     This property helps to find out why the LoginCredentials property was empty: either the external login information hasbn't been there or else the login information had been there but without an assigned, valid webmanager account
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.CheckLogin.ValidateUserCredentialsAndLogon">
	<summary>
     Validate the login data from the login form and then login on the current (master) server
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.CheckLogin.OnMissingAssignmentOfExternalAccount">
	<summary>
     The actions which shall be made if an external login has been detected but there is not user account in CWM for it
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.CheckLogin.OnMissingAuthentication">
	<summary>
     The actions which shall be made if an external login has been detected but there is not user account in CWM for it
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.CheckLogin.LogonToAllOtherServers">
	<summary>
     To complete the logon process, all the other servers in the same server group have to know the user, too
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.CheckLogin.LogonToAllOtherServers(System.String)">
	<summary>
     To complete the logon process, all the other servers in the same server group have to know the user, too
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Login.CheckLogin.RedirectionTargets">
	<summary>
     Redirection target overwritings for the different authentication return values
 </summary>
	<value></value>
	<remarks>
     The key string in this collection is the expected return value, the value is the URL where the browser shall be redirected to
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Login.CheckLogin">
	<summary>
     Validate the authorization credentials and start the login process when possible
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Login.ForceLogin">
	<summary>
     A page which asks to really process the pending login when there is already a login from another workstation
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.LoginForm.ApplyRefererUrlToFramesetUrl(System.String)">
	<summary>
     Create an URL to load the frameset and the original path in the main frame of the frameset
 </summary>
	<param name="path">The original URL of the referer page</param>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Login.LoginForm.RenderPageLookupIfTheCurrentWindowIsTheTopWindow">
	<summary>
     Render a page which looks up wether the current page is running in a frame window or if it's running as the top window
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Login.LoginForm">
	<summary>
     The regular login page
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Pages.IPage">
	<summary>
     An interface for all controls which are implementing the cammWebManager property
 </summary>
</member><member name="P:My.Resources.Resources.ResourceManager">
	<summary>
  Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
</summary>
</member><member name="P:My.Resources.Resources.Culture">
	<summary>
  Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
  Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
</summary>
</member><member name="P:My.Resources.Resources.String1">
	<summary>
  Sucht eine lokalisierte Zeichenfolge, die d ähnelt.
</summary>
</member><member name="T:My.Resources.Resources">
	<summary>
  Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
</summary>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.LatestData">
	<summary>
     The pages latest data (RowID)
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.LatestVersion">
	<summary>
     The pages latest version
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.CurrentVersion">
	<summary>
     The pages current version
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.CurrentVersionSetWithoutInternalChangeFlag(System.Int32)">
	<summary>
     Only for saving the new value without a "_CurrentVersionHasChanged = True"
 </summary>
	<param name="value"></param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.CurrentVersionNotYetDefinedByViewstate">
	<summary>
     Indicate if the viewstate already contains an information about the version which shall be shown
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.EditModeActive">
	<summary>
 Is this smart editor in one of the EditModes (editor control visible in edit or view mode)?
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.EditModeSwitchAvailable">
	<summary>
     Indicates the visibility of the switch to edit mode image button
 </summary>
	<value></value>
	<remarks>
     Is needed to make this button only visible if it shall appear
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.EditorID">
	<summary>
     An identifier of the editor instance in the current document, by default the ClientID property value (but don't use this as ClientID for access in client scripting!)
 </summary>
	<value></value>
	<remarks>
     This ID is required for support of multiple editor instances on the same page.
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.EditModeAsDefinedInViewstate">
	<summary>
     The edit mode as it is defined in the viewstate
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.Enabled">
	<summary>
     Is the control editable in general or not?
 </summary>
	<value></value>
</member><member name="F:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.RequestModes.NoActionRequested">
	<summary>
     Nothing to do
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.RequestModes.Update">
	<summary>
     Save changes
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.RequestModes.NewVersion">
	<summary>
     Create a new version for modification
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.RequestModes.Activation">
	<summary>
     Save changes and release the whole version
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.RequestModes.DropCurrentMarketData">
	<summary>
     Drop the content of the current market
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.RequestModes.CreateFirstVersion">
	<summary>
     There is no version data available, but the first version shall be created now
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.RequestModes">
	<summary>
     Possible actions requested by the form front-end
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.RequestMode">
	<summary>
     Contains the requested controls mode
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.CountAvailableEditVersions">
	<summary>
 Counts available edit versions
 </summary>
	<remarks>Based on old IsEditVersionAvailable() Code, slightly modified</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.LanguageToShow">
	<summary>
     Indicates which language shall be opened
 </summary>
	<value></value>
	<remarks>
		<list>
			<item>Value &gt;= 0: valid, selected market</item>
			<item>Value = -1 (&lt;0): default initialization value to use current CWM market</item>
		</list>
	</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.ShowWithEditRights">
	<summary>
     Has the user authorization to change the content and does he see at least the pencil to start editing?
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.ToolbarSetting">
	<summary>
     Indicates which toolbar shall be used
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.HtmlCodeCurrentEditInformation">
	<summary>
     Creates the text value for the edit information label which gives you information
     about the currently opened version and it's status
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.ibtnSwitchToEditMode_Click(System.Object,System.Web.UI.ImageClickEventArgs)">
	<summary>
     Image button SwitchToEditMode click events
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.CreateChildControls">
	<summary>
     Adds the controls components to it's form
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.PathsWithoutDuplicateMeaning(System.String[],System.String)">
	<summary>
     Remove any duplicate paths and return the new array with path values with all different meaning
 </summary>
	<param name="paths">Array of several virtual paths</param>
	<param name="singlePath">One virtual path</param>
	<returns>Array without any duplicate, virtual path meanings</returns>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.GetToolbarSetting">
	<summary>
     Detects which toolbar shall appear
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.Raise404(System.String)">
	<summary>
     Raises the standard 404 error message as defined right in the IIS
 </summary>
	<param name="message">An error message with some details on the missing item</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.IsEmptyInnerHtml">
	<summary>
     If the inner html property contains spaces, tabs, CR or LF chars only, then this will be indicated as True, otherwise there is some real text/content and this method will return False
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.LookupDefaultMarketBasedOnMarketLookupMode">
	<summary>
     Detect the language/market for first-time-data-creation in edit-requests
 </summary>
	<returns>An integer ID of the market/language</returns>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.LookupMatchingMarketDataBasedOnExistingContent">
	<summary>
     Change the LanguageToShow variable to an existing value when the current one is not valid
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.AlternativeDataMarkets">
	<summary>
 Alternative markets which might contain data if the typical market doesn't contain any released data
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.LookupMatchingMarketDataForReleasedContent(System.Boolean)">
	<summary>
     Detect the LanguageToShow for view-only requests
 </summary>
	<param name="returnCode404InCaseOfMissingData">True raises a 404 error when it can't be looked up</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.EncryptAStringForUrlUsement(System.String)">
	<summary>
     Generates a url conform string to pass trough url as parameter for later usement
 </summary>
	<param name="sourceString"></param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.DoUpdateAction">
	<summary>
     Update an already existing document in given language or create a new language for the document, depends on several parameters
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.CreateANewPageVersion">
	<summary>
     Creates a new pages version
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.GetWMLanguageDescriptionByLanguageID(System.Int32)">
	<summary>
     Returns the languages description in english as string
 </summary>
	<param name="ID">The language id whose description you want to get</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.FindSWcmsControlsInEditModeOnThisPage">
	<summary>
     Is there at least one SmartWcms control in edit mode?
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.FindSWcmsControlsOnThisPage(System.Collections.Generic.List{System.Web.UI.Control},System.Web.UI.ControlCollection)">
	<summary>
     Walk recursive through all children controls and collect all SmartWcms items
 </summary>
	<param name="results">An arraylist which will contain all positive matches</param>
	<param name="controlsCollection">The control collection which shall be browsed</param>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.RemoveServerNameFromLinks">
	<summary>
 Remove all occurances in links of the current server name, e. g. http://www.yourcompany.com
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.EnableCache">
	<summary>
     Use HttpCache to boost the performance by decreasing the number of required database queries
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.InnerHtml">
	<summary>
     The static inner HTML code is the default HTML when the database doesn't contain any released content
 </summary>
	<value></value>
	<remarks>
     If there is no released content from database and this inner HTML contains whitespaces only, you'll run into a 404 HTTP error page (file not found).
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.RequestedEditMode">
	<summary>
     The requested edit mode for the processing of this page request
 </summary>
	<value></value>
	<remarks>
     Typically, this value is predefined to a default or will be changed by user via form
 </remarks>
</member><member name="E:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.BeforeSecurityCheck">
	<summary>
     This event will happen while Page_Init and allows application developers to define the security object name just-in-time
 </summary>
	<remarks>
     This early execution of the security check is required to decide about required viewstate of this control's data controls. (After Page_Init, the viewstate wouldn't be loaded any more.)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.GetAvailableLanguages">
	<summary>
 Returns an array of available languages
 </summary>
	<remarks>Based on code by Swiercz, extracted into this function to not mix it with HTML code</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.RemoveLanguageItemsNotInAllowedList(System.Data.DataTable,System.Int32[])">
	<summary>
     Remove all elements which are not in the allow-list and return all remaining items
 </summary>
	<param name="list">An array containing some elements</param>
	<param name="allowedItems">Allowed values</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.FillEditorContent(System.Int32,System.String,System.String,System.Int32,System.Int32)">
	<summary>
     Set the editor by a given id
 </summary>
	<param name="serverID"></param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.CheckForRequestMode">
	<summary>
     Gets information to decide which request mode shall be shown
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.StandardLoading">
	<summary>
     The standard loading functionallity for this document
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.CachedItemKey">
	<summary>
     This is the name of the key for the content for this editor in the HttpCache
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.ClearCache">
	<summary>
     Clear all keys related to this document (all languages/markets)
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.CachedItemContent">
	<summary>
     The value of the cached, released content or null (Nothing in VisualBasic) when it's not cached yet
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.CachedItemLivetime">
	<summary>
     The default cache duration takes 15 minutes at maximum
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.CachedItemPriority">
	<summary>
     The default cache priority is set to low to allow remval of this cache item at first
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorBaseLevel2.MainEditor">
	<summary>
 The editor control to display or edit the content
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorBaseLevel2.EditModeActive">
	<summary>
     Is this editor in edit mode?
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorBase._cammWebManager">
	<summary>
     The interface implementation required for the database access layer
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorBase.Database">
	<summary>
     Database access layer
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorBase.DocumentID">
	<summary>
     An identifier of the current document, by default its URL
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorBase.ContentOfServerID">
	<summary>
     Regulary, content is always related to the current server, only. In some special cases, you might want to override this to show content from another server.
 </summary>
	<value>The ID value of the server to whome the content is related</value>
	<remarks>
     By default, the address (e. g.) "/content.aspx" provides different content on different servers. So, the intranet and the extranet are able to show independent content.
     In some cases, you might want to override this behaviour and you want to show on the same URL the same content in the extranet as well as in the intranet. In this case, you would setup this property on the extranet server's scripts to show the content of the intranet server.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorBase.MarketLookupModes.SingleMarket">
	<summary>
     Data is only available in an international version and this is valid for all languages/markets
 </summary>
	<remarks>
     This value is the same as None, just the name is more explainable
     If the lookup process fails, an HTTP error 404 will be returned to the browser.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorBase.MarketLookupModes.None">
	<summary>
     Data is only available in an international version and this is valid for all languages/markets
 </summary>
	<remarks>
     This value is the same as SingleMarket, just the name is more simplified
     If the lookup process fails, an HTTP error 404 will be returned to the browser.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorBase.MarketLookupModes.Market">
	<summary>
     Data is maintained for every market separately, the language markets (e. g. "English", "French", etc. are handled as a separate market)
 </summary>
	<remarks>
     If the lookup process fails, an HTTP error 404 will be returned to the browser.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorBase.MarketLookupModes.Language">
	<summary>
     Data is maintained for every language/market separately; when there is no value for a market it will be searched for some compatible language data
 </summary>
	<remarks>
     Example: When the visitor is in market "German/Austria" but there is only some content available for market "German", the German data will be used.
     If the lookup process fails, an HTTP error 404 will be returned to the browser.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorBase.MarketLookupModes.BestMatchingLanguage">
	<summary>
     Data is maintained for every language/market separately; when there is no value for the current market, the sWCMS control tries to lookup a best matching content
 </summary>
	<remarks>
     When the user requests a page in e. g. market 559 ("French/France"), there will be the following order for the lookup process:
     <list>
			<item>Current market, in ex. ID 559 / French/France</item>
			<item>Current language of market, in ex. ID 3 / French</item>
			<item>Until customized by propert AlternativeDataMarkets: English universal, ID 1</item>
			<item>Until customized by propert AlternativeDataMarkets: Worldwide market, ID 10000</item>
			<item>International, ID 0</item>
		</list>
     If the lookup process fails, an HTTP error 404 will be returned to the browser.
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorBase.MarketLookupModes">
	<summary>
     Contains informations about how to handle the viewonly mode in different market, langs
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorBase.MarketLookupMode">
	<summary>
     Represents the current MarketLookupMode, passed as parameter by the ctrl
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorBase.SecurityObjectEditMode">
	<summary>
     Indicates which application is needed to edit the formular
 </summary>
	<value></value>
</member><member name="T:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorBase">
	<summary>
     A base implementation of a smart wcms editor control providing access to the database acces layer
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.ConnectionString">
	<summary>
     The connection string
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.ClearCachedDbValues">
	<summary>
     Clear all cached variables which contain database values
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.AvailableMarketsInData(System.Int32,System.String,System.String,System.Int32)">
	<summary>
     An array of available languages within an editor controls version
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.SaveEditorContent(System.Int32,System.String,System.String,System.Int32,System.String,System.Int64)">
	<summary>
     Save the content of the editor control into the database
 </summary>
	<param name="serverID"></param>
	<param name="url"></param>
	<param name="editorID"></param>
	<param name="marketID"></param>
	<param name="content"></param>
	<param name="modifiedBy"></param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.IsMarketAvailable(System.Int32,System.String,System.String,System.Int32,System.Int32)">
	<summary>
     Identify if a given market exists in the defined, versioned document
 </summary>
	<param name="serverID"></param>
	<param name="url"></param>
	<param name="editorID"></param>
	<param name="marketID"></param>
	<param name="version"></param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.RemoveMarketFromEditVersion(System.Int32,System.String,System.String,System.Int32)">
	<summary>
     Remove a given market from the editable version
 </summary>
	<param name="serverID"></param>
	<param name="url"></param>
	<param name="editorID"></param>
	<param name="marketID"></param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.ReleaseLatestVersion(System.Int32,System.String,System.String,System.Int64)">
	<summary>
     Release the latest version
 </summary>
	<param name="serverID"></param>
	<param name="url"></param>
	<param name="editorID"></param>
	<param name="releasedByUser"></param>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.MaxVersion(System.Int32,System.String,System.String)">
	<summary>
     The highest version available, this is either the released version number or the version number of the current edit version
 </summary>
	<param name="serverID"></param>
	<param name="url"></param>
	<param name="editorID"></param>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.ReleasedVersion(System.Int32,System.String,System.String)">
	<summary>
     The number of the released version
 </summary>
	<param name="serverID"></param>
	<param name="url"></param>
	<param name="editorID"></param>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.ReadRelatedVersionInfo(System.Int32,System.String,System.String)">
	<summary>
     Read max. version and released version number from database
 </summary>
	<param name="serverID"></param>
	<param name="url"></param>
	<param name="editorID"></param>
	<remarks>
     If a version number can't be looked up because there is no data available, the read version number will be 0 (zero).
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.ReadAllData(System.Int32,System.String,System.String)">
	<summary>
     Read all data from database regarding a defined document
 </summary>
	<param name="serverID"></param>
	<param name="url"></param>
	<param name="editorID"></param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.CopyEditorVersion(System.Int32,System.String,System.String,System.Int32)">
	<summary>
     Copys a editor controls version to a new higher one.
 </summary>
	<param name="sourceVersion">The version you want to copy</param>
	<param name="serverID">The WebManagers serverID where the new version shall appear (might be usefull for later feature requests)</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.ActiveMarketsInWebManager">
	<summary>
     List the activated markets as defined in camm Web-Manager
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.ActiveMarketIDsInWebManager">
	<summary>
     List the activated markets as defined in camm Web-Manager
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.ReadReleasedContent(System.Int32,System.String,System.String,System.Int32)">
	<summary>
     Read the released HTML for the requested document from the database
 </summary>
	<param name="serverID"></param>
	<param name="url"></param>
	<param name="editorID"></param>
	<param name="marketID"></param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.GetFirstPreviousVersionThatDiffers(System.Int32,System.String,System.String,System.Int32,System.Int32)">
	<summary>
 Returns the first version that differs and that is lower (came before)
 </summary>
	<param name="serverID"></param>
	<param name="url"></param>
	<param name="editorID"></param>
	<param name="marketID"></param>
	<param name="version"></param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer.ReadContent(System.Int32,System.String,System.String,System.Int32,System.Int32)">
	<summary>
     Read the HTML in a requested version for the requested document from the database
 </summary>
	<param name="serverID"></param>
	<param name="marketID"></param>
	<param name="url"></param>
	<param name="editorID"></param>
	<param name="version"></param>
</member><member name="T:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsDatabaseAccessLayer">
	<summary>
     Provider for loading and saving of data from and to the database
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcms3.Docs">
	<summary>
     Contains the control specific upload folder for documents
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcms3.DocsUploadSizeMax">
	<summary>
     Max. upload size for documents in Bytes
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcms3.DocsUploadFilter">
	<summary>
     Contains the control specific upload filter for documents
 </summary>
	<value></value>
	<history>
     [link]		30.08.2007  Fixed
     [zeutzheim] 10.05.2007  Fixed
 	[swiercz]	06.12.2005	Created
 </history>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcms3.DocsReadOnly">
	<summary>
     Contains the control specific readonly folders for documents
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcms3.Media">
	<summary>
     Contains the control specific upload folder for media files
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcms3.MediaUploadSizeMax">
	<summary>
     Max. upload size for media files in Bytes
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcms3.MediaReadOnly">
	<summary>
     Contains the control specific readonly folders for media files
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcms3.Images">
	<summary>
     Contains the control specific upload folder for images
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcms3.ImagesUploadSizeMax">
	<summary>
     Max. upload size for images in Bytes
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcms3.ImagesReadOnly">
	<summary>
     Contains the control specific readonly folders for images
 </summary>
	<value></value>
</member><member name="T:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcms3">
	<summary>
     The smart and built-in content management system of camm Web-Manager
 </summary>
	<remarks>
     This page contains a web editor which saves/load the content to/from the CWM database. The editor will only be visible for those people with appropriate authorization. All other people will only see the content, but nothing to modify it.
     The content may be different for languages or markets. In all cases, there will be a version history.
     When there is no content for an URL in the database - or it hasn't been released - the page request will lead to an HTTP 404 error code.
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcms">
	<summary>
     The smart and built-in content management system of camm Web-Manager
 </summary>
	<remarks>
     This page contains a web editor which saves/load the content to/from the CWM database. The editor will only be visible for those people with appropriate authorization. All other people will only see the content, but nothing to modify it.
     The content may be different for languages or markets. In all cases, there will be a version history.
     When there is no content for an URL in the database - or it hasn't been released - the page request will lead to an HTTP 404 error code.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartPlainHtmlEditor.InitializeVersionDropDownBox">
	<summary>
 Fil the verison dropdown box with the versions available for this document.
 <remarks>I have for now overall copied the code from the original smartwcms editor. Needs refactoring </remarks>
	</summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartPlainHtmlEditor.InitializeLanguageDropDownList">
	<summary>
 Fill the languages/market drop down list...
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartPlainHtmlEditor.AssembleToolbar(CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartWcmsEditorCommonBase.ToolbarSettings)">
	<summary>
 Shows the buttons that we need
 </summary>
	<param name="toolbartype"></param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartPlainHtmlEditor.SmartPlainHtmlEditor_PreRender(System.Object,System.EventArgs)">
	<summary>
 Always provide client scripts (only in Edit mode) for IsDirty detection
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.SmartPlainHtmlEditor">
	<summary>
     The smart and built-in content management system of camm Web-Manager
 </summary>
	<remarks>
     This page contains a web editor which saves/load the content to/from the CWM database. The editor will only be visible for those people with appropriate authorization. All other people will only see the content, but nothing to modify it.
     The content may be different for languages or markets. In all cases, there will be a version history.
     When there is no content for an URL in the database - or it hasn't been released - the page request will lead to an HTTP 404 error code.
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.RadEditor">
	<summary>
     WYSIWIG online editor
 </summary>
	<remarks>
     Requires write permission for the AspNet worker process (regulary the ASPNET account of the webserver machine) to the file which contains this control.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.PlainTextEditor.PlainTextEditor_PreRender_EncodeRawData(System.Object,System.EventArgs)">
	<summary>
 Always provide client scripts (only in Edit mode) to encode raw text editor data (e.g. HTML code) so that RequestValidation doesn't throw an exception because of potentially dangerous data
 </summary>
	<seealso cref="F:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.PlainTextEditor.EscapeRecognitionSequence"/>
</member><member name="F:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.PlainTextEditor.EscapeRecognitionSequence">
	<summary>
 Escape sequence at the start of the editors text data that proclaims the text being encoded
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.ISmartWcmsEditor">
	<summary>
     The common interface for all SmartWcms editor controls
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.IEditor">
	<summary>
 Editor control interface
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Modules.WebEdit.Controls.ConfigurationWebManager.WebEditorContentOfServerID">
	<summary>
 Every WebEditor content is related to a server; this property overrides the server ID value where to read from/save to
 </summary>
	<value></value>
	<remarks>
 0 = currently used server; other values = forced server ID
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.Modules.Text.TextModules.ModuleItem.Key">
	<summary>
     The official key
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Modules.Text.TextModules.ModuleItem.Value">
	<summary>
     A plain text string or HTML code (defined by the variable type) with the complete value of the text
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Modules.Text.TextModules.ModuleItem.TypeID">
	<summary>
     Type of Text Module
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Modules.Text.TextModules.ModuleItem.Released">
	<summary>
     Defines released state of text module
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Modules.Text.TextModules.ModuleItem.Version">
	<summary>
     Version of text module
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Modules.Text.TextModules.ModuleItem.PublishedOn">
	<summary>
     Published date of text module
 </summary>
	<remarks>
     PublishedOn = nothing means text module is unreleased
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.Modules.Text.TextModules.TextModuleType.PlainTextString">
	<summary>
     Plain string
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Modules.Text.TextModules.TextModuleType.PlainTextBlock">
	<summary>
     Plain text block, can contain sub variables/blocks
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Modules.Text.TextModules.TextModuleType.HtmlTextBlock">
	<summary>
     Html text block, can contain sub variables/blocks
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Modules.Text.TextModules.TextModuleType.HtmlTemplate">
	<summary>
     Template, i.e. collection of one or more or all variable types from 1, 2, 3., can contain sub variables/blocks
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Modules.Text.TextModules.TextModuleType">
	<summary>
     Defines type of text variable.
 </summary>
	<remarks>
     Variable types are, _
     1. PlainTextString
     2. PlainTextBlock, can contain sub variables/blocks
     3. HtmlTextBlock, can contain sub variables/blocks
     4. HtmlTemplate, i.e. collection of one or more or all variable types from 1, 2, 3., can contain sub variables/blocks
     Please pay attention: an html variable type can include plain text types, but inclusion of html types in plain text types will throw exceptions!
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.Load(System.String)">
	<summary>
     Load a text module
 </summary>
	<param name="key">The name of the key which uniquely identifies the required value</param>
	<returns>A plain text string or HTML code (defined by the variable type) with the complete value of the text</returns>
	<remarks>
     By default, the requested websitAreaID is empty.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.Load(System.String,System.String[])">
	<summary>
     Load a text module
 </summary>
	<param name="key">The name of the key which uniquely identifies the required value</param>
	<param name="websiteAreaIDs">An array of strings with unique IDs of the website area, e. g. {"Shop", "default", ""} - the order defines the priority</param>
	<returns>A plain text string or HTML code (defined by the variable type) with the complete value of the text</returns>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.Load(System.String,System.String[],System.Int32)">
	<summary>
     Load a text module
 </summary>
	<param name="key">The name of the key which uniquely identifies the required value</param>
	<param name="websiteAreaIDs">An array of strings with unique IDs of the website area, e. g. {"Shop", "default", ""} - the order defines the priority</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<returns>A plain text string or HTML code (defined by the variable type) with the complete value of the text</returns>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.Load(System.String,System.String[],System.Int32,System.Int32)">
	<summary>
     Load a text module
 </summary>
	<param name="key">The name of the key which uniquely identifies the required value</param>
	<param name="websiteAreaIDs">An array of strings with unique IDs of the website area, e. g. {"Shop", "default", ""} - the order defines the priority</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<returns>A plain text string or HTML code (defined by the variable type) with the complete value of the text</returns>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.Load(System.String,System.String[],System.Int32[],System.Int32)">
	<summary>
     Load a text module
 </summary>
	<param name="key">The name of the key which uniquely identifies the required value</param>
	<param name="websiteAreaIDs">An array of strings with unique IDs of the website area, e. g. {"Shop", "default", ""} - the order defines the priority</param>
	<param name="marketIDs">An array of Integer with unique marketIDs - the order defines the priority</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.Load(System.String,System.String[],System.Int32[],System.Int32,System.Boolean,System.Boolean,System.Int32)">
	<summary>
     Load a text module
 </summary>
	<param name="key">The name of the key which uniquely identifies the required value</param>
	<param name="websiteAreaIDs">An array of strings with unique IDs of the website area, e. g. {"Shop", "default", ""} - the order defines the priority</param>
	<param name="marketIDs">The list of one or more markets/languages which are allowed to be returned - the order defines the priority</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<param name="version">The requested version of the text module or zero (0) for the currently released version</param>
	<param name="replacePlaceholders">replace place holders with their value or not</param>
	<param name="useCachedData">use cache data or not</param>
	<returns>A plain text string or HTML code (defined by the variable type) with the complete value of the text</returns>
	<remarks>
     Placeholders = e.g. &lt;%CompanyName%&gt;
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.Load(System.String,System.String[],System.Int32[],System.Int32,System.Int32)">
	<summary>
     Load a text module
 </summary>
	<param name="key">The name of the key which uniquely identifies the required value</param>
	<param name="websiteAreaIDs">An array of strings with unique IDs of the website area, e. g. {"Shop", "default", ""} - the order defines the priority</param>
	<param name="marketIDs">An array of Integer with unique marketIDs - the order defines the priority</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<param name="version">Version of TextModule</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.LoadModuleItem(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Int32)">
	<summary>
     Load module item
 </summary>
	<param name="key">The name of the key which uniquely identifies the required value</param>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<param name="useCachedData">If True loads data from cached table else from non cached table</param>
	<param name="version">Version of text module</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.LoadModuleItems(System.String,System.Int32,System.Int32,System.Boolean,System.String)">
	<summary>
	</summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<param name="useCachedData">If True loads data from cached table else from non cached table</param>
	<param name="key">The name of the key which uniquely identifies the required value</param>
	<returns>An array of text module items</returns>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.LoadModuleItems(System.String,System.Int32,System.Int32,System.Boolean,CompuMaster.camm.WebManager.Modules.Text.TextModules.TextModuleType)">
	<summary>
     Load a array of cached text module items
 </summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<param name="useCachedData">If True loads data from cached table else from non cached table</param>
	<param name="typeID">Type of TextModule</param>
	<returns>An array of text module items</returns>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.LoadModuleItems(System.String,System.Int32,System.Int32,System.Boolean)">
	<summary>
     Load a array of cached text module items
 </summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<returns>An array of text module items</returns>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.LoadModuleItems(System.String,System.Int32,System.Int32,System.Boolean,System.String,CompuMaster.camm.WebManager.Modules.Text.TextModules.TextModuleType)">
	<summary>
     Load a array of cached text module items
 </summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<param name="useCachedData">If True loads data from cached table else from non cached table</param>
	<param name="key">The name of the key which uniquely identifies the required value</param>
	<param name="typeID">Type of TextModule</param>
	<returns>An array of text module items</returns>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.ConvertResultTableToModuleItemsArray(System.Data.DataTable)">
	<summary>
     Converts textmodules datacontent into an array of type ModuleItem
 </summary>
	<param name="textModules">DataTable containing textmodules</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.Save(System.String,System.String,System.Boolean)">
	<summary>
     Save value of TextModule defined by key
 </summary>
	<param name="key">The name of the key which uniquely identifies the required value</param>
	<param name="value">Value of TextModule to be saved</param>
	<param name="release">Defines Save and Release the TextModule or not</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.Save(System.String,System.String,System.Boolean,System.String)">
	<summary>
     Save value of TextModule defined by key
 </summary>
	<param name="key">The name of the key which uniquely identifies the TextModule</param>
	<param name="value">Value of TextModule to be saved</param>
	<param name="release">Defines Save and Release the TextModule or not</param>
	<param name="websiteAreaID">Unique WebsiteAreaID of TextModule</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.Save(System.String,System.String,System.Boolean,System.String,System.Int32)">
	<summary>
     Save value of TextModule defined by key
 </summary>
	<param name="key">The name of the key which uniquely identifies the TextModule</param>
	<param name="value">Value of TextModule to be saved</param>
	<param name="release">Defines Save and Release the TextModule or not</param>
	<param name="websiteAreaID">Unique WebsiteAreaID of TextModule</param>
	<param name="marketID">MarketID of TextModule</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.Save(System.String,System.String,System.Boolean,System.String,System.Int32,System.Int32)">
	<summary>
     Save value of TextModule defined by key
 </summary>
	<param name="key">The name of the key which uniquely identifies the TextModule</param>
	<param name="value">Value of TextModule to be saved</param>
	<param name="release">Defines Save and Release the TextModule or not</param>
	<param name="websiteAreaID">Unique WebsiteAreaID of TextModule</param>
	<param name="marketID">MarketID of TextModule</param>
	<param name="serverGroupID">ServerGroupID of TextModule</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.Save(System.String,System.String,System.Boolean,System.String,System.Int32,System.Int32,CompuMaster.camm.WebManager.Modules.Text.TextModules.TextModuleType)">
	<summary>
     Save value of TextModule defined by key
 </summary>
	<param name="key">The name of the key which uniquely identifies the TextModule</param>
	<param name="value">Value of TextModule to be saved</param>
	<param name="release">Defines Save and Release the TextModule or not</param>
	<param name="websiteAreaID">Unique WebsiteAreaID of TextModule</param>
	<param name="marketID">MarketID of TextModule</param>
	<param name="serverGroupID">ServerGroupID of TextModule</param>
	<param name="typeID">Type of TextModule</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.Keys(System.String,System.Int32,System.Int32)">
	<summary>
     Array of all keys
 </summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.TextModules.IsValid(System.String)">
	<summary>
     Check validity of key
 </summary>
	<param name="key">Key to be checked</param>
	<returns>True if the key name doesn't contain forbidden characters</returns>
</member><member name="T:CompuMaster.camm.WebManager.Modules.Text.TextModules">
	<summary>Module for (legal) text management</summary>
	<remarks>
     Note: WebManager web.config setting for cammWM.TextModule
     1. TextModulesServerGroupIDDefault 
         -   This value should be greater than or equal to 1
         -   The value 0 is equivalent to Nothing
         -   If this value is set, then complete cammWM.TextModule library will work with this constant
             ServerGroupID. Otherwise it will use default ServerGroupID i.e. from cammWM 
             (=&gt; "_webManager.CurrentServerInfo.ParentServerGroupID") 
     2. TextModulesServerGroupIDForced
         -   This value should be greater than or equal to 1
         -   The value 0 is equivalent to Nothing
         -   If this value is set, then complete cammWM.TextModule library will work with this constant
             ServerGroupID. Otherwise it will use from method parameter value
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Modules.Text.Administration.Data.ConnectionString">
	<summary>
     Connection string to database
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Data.Save(System.String,System.String,System.Boolean,System.String,System.Int32,System.Int32,CompuMaster.camm.WebManager.Modules.Text.TextModules.TextModuleType)">
	<summary>
     Saves the TextModule to database
 </summary>
	<param name="key">The name of the key which uniquely identifies the required value</param>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<param name="value">value of Text Module</param>
	<param name="typeID">TypeID for type of Text Module</param>
	<param name="release">Defines Save and Release the TextModule or not</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Data.Load(System.String,System.Int32,System.Int32)">
	<summary>
     Load Text Module for Key
 </summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<remarks>
     Loads first released, then unreleased text modules
     
     The returned DataTable columns are
     Key     - String
     Value   - String
     Version - Integer 
     TypeID  - Integer
     Released- Boolean
     Title   - String
     
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Data.Load(System.String,System.Int32,System.Int32,CompuMaster.camm.WebManager.Modules.Text.TextModules.TextModuleType)">
	<summary>
     Loads all released as well unreleased Text Module.
 </summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<param name="typeID">TypeID for type of Text Module</param>
	<returns>Retuns DataTable</returns>
	<remarks>
     Loads first released , then unreleased text modules for asked key with defined type
     
     If the type of required Text Module is HtmlTextBox or PlainTextBox, _
     then it loads Text Module for both types i.e. HtmlTextBox and PlainTextBox
     
     The returned DataTable columns are
     Key     - String
     Value   - String
     Version - Integer 
     TypeID  - Integer
     Released- Boolean
     Title   - String
     
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Data.Load(System.String,System.Int32,System.Int32,System.String)">
	<summary>
     Load Text Module for Key
 </summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<param name="key">Key of required Text Module</param>
	<returns>DataTable</returns>
	<remarks>
     The returned DataTable columns are
     Key         - String
     Value       - String
     Version     - Integer 
     Released    - Boolean
     TypeID      - Integer
     PublishedOn - DateTime
     
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Data.Load(System.String,System.Int32,System.Int32,System.String,CompuMaster.camm.WebManager.Modules.Text.TextModules.TextModuleType)">
	<summary>
     Load Text Module for Key
 </summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<param name="key">Key of required Text Module</param>
	<param name="typeID">type of text module</param>
	<remarks>
     Loads all version of text module for asked key
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Data.Load(System.String,System.Int32,System.Int32,System.String,System.Int32)">
	<summary>
     Load Text Module for Key
 </summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<param name="key">Key of required Text Module</param>
	<param name="version">Version of text module</param>
	<remarks>
     Loads text module for key with defined value of version
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Data.Keys(System.String,System.Int32,System.Int32)">
	<summary>
     String array of distinct key(Name)
 </summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<returns>String array</returns>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Data.LoadCached(System.String,System.Int32,System.Int32)">
	<summary>
     Loads Text Modules from Cached Table
 </summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<remarks>
     The returned DataTable columns are
     Key         - String
     Value       - String
     TypeID      - Integer
     
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Modules.Text.Administration.Business.ConnectionString">
	<summary>
     Connection string to database
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Business.IsHtmlType(CompuMaster.camm.WebManager.Modules.Text.TextModules.TextModuleType)">
	<summary>
     True if text module is of html type else False
 </summary>
	<param name="typeID">type of text module</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Business.ReplacePlaceHolders(System.String,System.Boolean,CompuMaster.camm.WebManager.Modules.Text.TextModules.ModuleItem[],System.Boolean)">
	<summary>
     Replaces all place holder with their value recursively
 </summary>
	<param name="value">A string where some replacing shall happen inside</param>
	<param name="releasedItems">Array of all released text modules</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Business.TextModulesCached(System.String,System.Int32,System.Int32,System.String)">
	<summary>
     Text module from cache
 </summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<param name="key">The name of the key which uniquely identifies the TextModule</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Business.TextModulesCached(System.String,System.Int32,System.Int32,CompuMaster.camm.WebManager.Modules.Text.TextModules.TextModuleType)">
	<summary>
     Text module from cache
 </summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<param name="typeID">type of text module</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Business.TextModulesCached(System.String,System.Int32,System.Int32,System.String,CompuMaster.camm.WebManager.Modules.Text.TextModules.TextModuleType)">
	<summary>
     Text module from cache
 </summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<param name="key">The name of the key which uniquely identifies the TextModule</param>
	<param name="typeID">Type of text module</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Business.GetTextModulesCached(System.String,System.Int32,System.Int32,System.String)">
	<summary>
     Text module from cache
 </summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
	<param name="query">Query to be made to database</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Business.TextModulesCached(System.String,System.Int32,System.Int32)">
	<summary>
     Text module from cache
 </summary>
	<param name="websiteAreaID">WebsiteAreaID of a Text Module</param>
	<param name="marketID">The queried and returned data must match to this market or its alternative language or a neutral culture</param>
	<param name="serverGroupID">The server group for which the requested text module must be available (e. g. Extranet might contain a different editorial than the Intranet area)</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Business.IsPlainTextblockContainsHtmlTextModule(System.String,CompuMaster.camm.WebManager.Modules.Text.TextModules.ModuleItem[])">
	<summary>
     True if value of text module contains html type text module else false
 </summary>
	<param name="value">value of text module to be checked</param>
	<param name="releasedItems">Array of all released text modules</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Business.AllPlaceHolders(System.String)">
	<summary>
     Array of all place holders in value
 </summary>
	<param name="value">value of text module</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Text.Administration.Business.IsValid(System.String)">
	<summary>
     Check validity of key
 </summary>
	<param name="key">Key to be checked</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Redirector.Pages.Redirector.ReportException(System.Exception)">
	<summary>
 Report exception by e-mail since there might be critical website errors if redirections doesn't work properly any more
 </summary>
	<param name="exception"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Redirector.Pages.Redirector.Redirector_GetLink(System.Int64)">
	<summary>
 Look up the redirection link and (usually) log/count the access
 </summary>
	<param name="RedirectID"></param>
	<returns>The URL of the requested redirection link</returns>
	<remarks></remarks>
</member><member name="T:CompuMaster.camm.WebManager.Modules.Redirector.Pages.Redirector">
	<summary>
 Redirect to an URL which is referenced by the R-parameter in the querystring
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Redirector.Pages.Data.NumberOfRedirections(System.Int32,CompuMaster.camm.WebManager.IWebManager)">
	<summary>
     Read the number of redirections
 </summary>
	<param name="id">The redirection ID as visible in the administration area</param>
	<param name="webmanager">An instance of camm Web-Manager</param>
</member><member name="T:CompuMaster.camm.WebManager.Modules.Redirector.Pages.Data">
	<summary>
     Data handling for the module of redirections
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Modules.Feedback.Pages.NamespaceDoc">
	<summary>
     Collect eedback from the users
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Feedback.Pages.FeedbackForm.CollectAllInputControls(System.Web.UI.Page,System.Collections.Hashtable)">
	<summary>
     Loop through a control collection and collect all information a user has made
 </summary>
	<param name="page">A page instance with some controls to be parsed/collected</param>
	<param name="results">The reference to the results hashtable</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Feedback.Pages.FeedbackForm.CollectAllInputControls(System.Web.UI.Control,System.Collections.Hashtable,System.String)">
	<summary>
     Loop through a control collection and collect all information a user has made
 </summary>
	<param name="control">A single control to be parsed/collected</param>
	<param name="results">The reference to the results hashtable</param>
	<param name="prefix">An optional prefix for the control name in the results hashtable</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Feedback.Pages.FeedbackForm.CollectAllInputControls(System.Web.UI.ControlCollection,System.Collections.Hashtable,System.String)">
	<summary>
     Loop through a control collection and collect all information a user has made
 </summary>
	<param name="controls">A single control to be parsed/collected</param>
	<param name="results">The reference to the results hashtable</param>
	<param name="prefix">An optional prefix for the control name in the results hashtable</param>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Feedback.Pages.FeedbackForm.AddResult(System.Collections.Hashtable,System.String,System.Object,System.String)">
	<summary>
     Add values to the results collection
 </summary>
	<param name="results">The results hashtable</param>
	<param name="controlID">The control name to identify the value</param>
	<param name="value">The value</param>
	<param name="keyPrefix">An optional prefix for the control name, regulary used for controls in controls</param>
</member><member name="P:CompuMaster.camm.WebManager.Modules.Feedback.Pages.FeedbackForm.Subject">
	<summary>
     The subject of the form in the e-mail
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.Feedback.Pages.FeedbackForm.MessageIntroText">
	<summary>
     The introduction of your e-mail
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Modules.Feedback.Pages.FeedbackForm.MessageFinishText">
	<summary>
     The finish of your e-mail
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Feedback.Pages.FeedbackForm.CollectDataAndSendEMail(System.String)">
	<summary>
     Collect all data and process the results
 </summary>
	<param name="emailAddress">The address where the form data shall be sent to</param>
	<returns>An error description if an exception occured</returns>
	<remarks>
     The list of the form fields will be sorted alphabetically, that's why it's recommended to name all controls IDs in a way (e. g. "00_FirstName", "01_FamilyName", etc.) which allows you to get a well sorted list of form data.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Feedback.Pages.FeedbackForm.CollectDataAndSendEMail(System.String,System.Web.UI.Control)">
	<summary>
     Collect all data and process the results
 </summary>
	<param name="emailAddress">The address where the form data shall be sent to</param>
	<param name="inputFormPanelOrContainer">The control where to start the search for input fields (Nothing to search on the whole Page)</param>
	<returns>An error description if an exception occured or null (Nothing in VisualBasic) if it was successful</returns>
	<remarks>
     The list of the form fields will be sorted alphabetically, that's why it's recommended to name all controls IDs in a way (e. g. "00_FirstName", "01_FamilyName", etc.) which allows you to get a well sorted list of form data.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Modules.Feedback.Pages.FeedbackForm.CollectDataAndSendEMail(System.String,System.Web.UI.Control,System.Web.UI.Control,System.Web.UI.Control)">
	<summary>
     Collect all data and send them to the e-mail address and show/hide the panels of the form dependent on the success of the e-mail transmission
 </summary>
	<param name="emailAddress">The address where the form data shall be sent to</param>
	<param name="formContent">A control or panel which contains the input form and which shall be made invisible after the user has submitted the form data</param>
	<param name="successContent">A control or panel which shall be shown when all things went fine</param>
	<param name="submissionFailureContent">A control or panel which will be shown when an error occured. Don't forget to assign this method's return value to a text label if you want to show the error description to the user.</param>
	<returns>An error description if an exception occured</returns>
	<remarks>
     The list of the form fields will be sorted alphabetically, that's why it's recommended to name all controls IDs in a way (e. g. "00_FirstName", "01_FamilyName", etc.) which allows you to get a well sorted list of form data.
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.Modules.Feedback.Pages.FeedbackForm">
	<summary>
     A feedback form always requires some logic to collect user inputs and to send them via e-mail to a defined address.
 </summary>
	<remarks>
		<para>Only server control data (web controls, html controls) will be collected, but no normal HTML input tags which are not running at server.</para>
		<para>The controls can be placed by you yourself. If they contain user input data, it will be added to the collected data list.</para>
		<para>You only should ensure that you also create a Button or LinkButton which calls the method <see cref="M:CompuMaster.camm.WebManager.Modules.Feedback.Pages.FeedbackForm.CollectDataAndSendEMail(System.String)">CollectDataAndSendEMail</see> to collect and send the data.</para>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.SeoNavigation(System.Data.DataTable)">
	<summary>
 Render an SEO optimized navigation inside of a noscript tag
 </summary>
	<param name="navitems">The navigation items</param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.TitleLastLevel(System.String)">
	<summary>
 Lookup the last title level from a back-slash-separated title hierarchy
 </summary>
	<param name="fullTitleHierarchy"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.LookupControlIndexAtParentControl(System.Web.UI.Control)">
	<summary>
 Lookup the index of the given control in the control collection of the parent control
 </summary>
	<param name="control">A control</param>
	<returns>An index number or -1 if no parent control is available</returns>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.CreateEmptyDataTable">
	<summary>
     Create an empty data table which can contain navigation items
 </summary>
	<returns>A DataTable with all required DataColumns</returns>
	<remarks>
     The table has got following columns:
 <list>
			<item>ID: An ID to reidentify the navigation item</item>
			<item>Title: A back slash ("\") separated string with the complete path for this navigation item
         <example>News\Company\Investments</example></item>
			<item>Sort: An integer value for sorting purposes</item>
			<item>Tooltip: the tooltip text of an element of the navigation</item>
		</list>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.VerifyDataAndFillMissingElements(System.Data.DataTable)">
	<summary>
     Verify the data to contain nothing invalid or duplicates and add required intermediate levels
 </summary>
	<param name="navData">The table with the navigation elements</param>
	<remarks>
     Other checked things are e. g. no singles back-slashes in category or that the URLAutoCompleted contains at least the URLPreDefinition value
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.VerifyDataAndFillMissingElementsFixTitleContent(System.Data.DataTable,System.Int32)">
	<summary>
     Fix title contents
 </summary>
	<param name="navdata"></param>
	<param name="columnIndexTitle"></param>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.VerifyDataAndFillMissingElementsAddMissingHierarchyLevels(System.Data.DataTable,System.Int32)">
	<summary>
     Add missing hierarchy levels
 </summary>
	<param name="navData"></param>
	<param name="columnIndexTitle"></param>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.VerifyDataAndFillMissingAutoCompletedURLs(System.Data.DataTable)">
	<summary>
     Copy missing values from base navigation URL to auto-completed URL field
 </summary>
	<param name="navdata"></param>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.VerifyDataAndFillMissingElementsRemoveDuplicates(System.Data.DataTable,System.Int32)">
	<summary>
     Remove any doubled rows
 </summary>
	<param name="navData"></param>
	<param name="columnIndexTitle"></param>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.IsCategoryInListOfCategories(System.String,System.String,System.Boolean)">
	<summary>
     Is a searched category member of another list of categories at a defined sub level?
 </summary>
	<param name="searchForCategory">The searched category name</param>
	<param name="listOfCategories">The semi-colon separated list of categories</param>
	<param name="searchWithinSubelements">The path of the sub level where the searched category shall be found</param>
	<returns>True if the searched category is already there</returns>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.CategoryPathElements(System.String)">
	<summary>
     A list of category paths for all possibilities levels
 </summary>
	<param name="CategoryPath">The category to split</param>
	<returns>A sorted list of category paths for all possibilities levels</returns>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.SubCategories(System.Data.DataTable,System.String)">
	<summary>
     Retrieve all rows of the data table which are direct sub elements of a specified base level
 </summary>
	<param name="NavData">The data table containing all navigation data</param>
	<param name="CurrentBaseLevel">The base level where to search for child elements</param>
	<returns>All child rows which match the specified base level</returns>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.ValueAlreadyExistsInDataTable(System.Data.DataTable,System.String,System.Int64)">
	<summary>
     Looks up for a value in a defined column of a data table
 </summary>
	<param name="DataTable">The data table where to search in</param>
	<param name="ColumnName">The column of the data table where to search in</param>
	<param name="Value">The value to search for</param>
	<returns>True if the value already exists in the list of active rows</returns>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.ValueAlreadyExistsInDataTable(System.Data.DataTable,System.String,System.String)">
	<summary>
     Looks up for a value in a defined column of a data table
 </summary>
	<param name="DataTable">The data table where to search in</param>
	<param name="ColumnName">The column of the data table where to search in</param>
	<param name="Value">The value to search for</param>
	<returns>True if the value already exists in the list of active rows</returns>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.ValueAlreadyExistsInDataTable(System.Data.DataTable,System.String,System.DBNull)">
	<summary>
     Looks up for a value in a defined column of a data table
 </summary>
	<param name="DataTable">The data table where to search in</param>
	<param name="ColumnName">The column of the data table where to search in</param>
	<param name="Value">The value to search for</param>
	<returns>True if the value already exists in the list of active rows</returns>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.ParentCategory(System.String)">
	<summary>
     Return the upper level of a category path
 </summary>
	<param name="category">A category path</param>
	<returns>The parent category or a backslash for the root value</returns>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.ValidNavigationPath(System.String)">
	<summary>
     Validates a correct construction of a category title
 </summary>
	<param name="path">The path to be validated</param>
	<returns>The path without starting or trailing back slashes or one backslash in case of the root level</returns>
</member><member name="M:CompuMaster.camm.WebManager.Navigation.Utils.RelativeCategory(System.String,System.String)">
	<summary>
     Retrieves the sub categories
 </summary>
	<param name="basePath">A string containing the path which should be removed</param>
	<param name="completePath">The complete path of a category</param>
	<returns>The relative sub path between the basePath and the completePath. Empty if the basePath is not part of the completePath.</returns>
</member><member name="T:CompuMaster.camm.WebManager.Navigation.Utils">
	<summary>
     Common utilities for creation of a navigation menu
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.MimeTypes.ContentType(System.String)">
	<summary>
     The content-type of a full mime type information
 </summary>
	<param name="mimeType"></param>
	<example>
     A mime type with "image/jpeg" has got a content-type "image" which will be returned
 </example>
</member><member name="M:CompuMaster.camm.WebManager.MimeTypes.SubType(System.String)">
	<summary>
     The sub-type of a full mime type information
 </summary>
	<param name="mimeType"></param>
	<example>
     A mime type with "image/jpeg" has got a sub-type "jpeg" which will be returned
 </example>
</member><member name="M:CompuMaster.camm.WebManager.MimeTypes.MimeTypeByFileExtension(System.String)">
	<summary>
     Resolve the MIME type by a file extension
 </summary>
	<param name="fileExtension">The extension which leads to the returned MIME type</param>
	<returns>A MIME type</returns>
	<example>
		<list>
			<item>.jpg leads to "image/jpeg"</item>
			<item>.bmp leads to "image/bmp"</item>
			<item>.psd leads to "image/psd"</item>
			<item>.zip leads to "application/zip"</item>
			<item>.tiff leads to "image/tiff"</item>
			<item>.avi leads to "video/x-msvideo"</item>
			<item>.ppt leads to "application/mspowerpoint"</item>
		</list>
	</example>
</member><member name="M:CompuMaster.camm.WebManager.MimeTypes.ResolveMimeTypeByLocalPlatform(System.String)">
	<summary>
     Query the windows registry for a MIME type of an extension
 </summary>
	<param name="extension">The file name extension with a leading dot (".")</param>
	<returns>A MIME type like "image/jpeg"</returns>
</member><member name="M:CompuMaster.camm.WebManager.MimeTypes.MimeTypeByFileName(System.String)">
	<summary>
     Resolve the MIME type by a file name
 </summary>
	<param name="fileName"></param>
	<returns>A MIME type</returns>
	<example>
		<list>
			<item>.jpg leads to "image/jpeg"</item>
			<item>.bmp leads to "image/bmp"</item>
			<item>.psd leads to "image/psd"</item>
			<item>.zip leads to "application/zip"</item>
			<item>.tiff leads to "image/tiff"</item>
			<item>.avi leads to "video/x-msvideo"</item>
			<item>.ppt leads to "application/mspowerpoint"</item>
		</list>
	</example>
</member><member name="T:CompuMaster.camm.WebManager.MimeTypes">
	<summary>
     MIME type resolutions required for downloads to the browser
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.DownloadHandler.SystemDownloadFolderForTemporaryFiles">
	<summary>
 A relative or absolute file location on disc for temporary files
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.DownloadFileAlreadyExists(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.String)">
	<summary>
     Returns value indicating whether a file exists.
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation.</param>
	<param name="pathInDownloadLocation">
     This parameter defines the path in download location. 
 </param>
	<param name="fileName">Name of file</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.DownloadFileAlreadyExists(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.String,System.String)">
	<summary>
     Returns value indicating whether a file exists.
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation.</param>
	<param name="pathInDownloadLocation">
     This parameter defines the path in download location. 
 </param>
	<param name="folderInVirtualDownloadLocation">Describes the virtual path to be added in download location. e.g. "foo/machines/images"</param>
	<param name="fileName">Name of file</param>
	<returns>True if file exists</returns>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.IsFullyFeatured">
	<summary>
     Returns value whether download folder has write access.
 </summary>
	<remarks>
     This functions check for download folder access writes, like write access, to create new file, can execute zip archive utility.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.TestFileCreation">
	<summary>
     Test write access to download folder by creating test.txt file, _
     on success no exception, on failure throws exception 
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.GetEncryptedValue(System.String)">
	<summary>
 This function return an encrypted, file-system-safe value for the parameter value
 </summary>
	<param name="value">A string value which shall be hashed</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ComputeHashedFilenameFromLongFilename(System.String)">
	<summary>
     Computes a hashed filename compatible with the file system without hashing the path parts
 </summary>
	<param name="filePath">A filename with a leading path information</param>
	<returns>A valid, hashed string which only contains characters that are compatible to the local file system</returns>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ComputeHashedPathFromLongPath(System.String)">
	<summary>
     Computes a unique encrypted file system compatible string from very long folder path.
 </summary>
	<param name="path">The piece of a path that shall be hashed</param>
	<returns>A valid, hashed string which only contains characters that are compatible to the local file system</returns>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.FileSystemCompatibleString(System.String)">
	<summary>
     Convert a string with invalid characters of a suggested file name to a string with compatible naming for file systems
 </summary>
	<param name="filename">A filename without path information</param>
	<returns>A string which can be used to create file and folder names</returns>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.CreateDownloadLink(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.String)">
	<summary>
     Creates a download link without taking any actions
 </summary>
	<param name="downloadLocation">download location</param>
	<param name="pathInDownloadLocation">path in download location</param>
	<param name="fileName">Name of file</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.CreateDownloadLink(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.String,System.String)">
	<summary>
     Creates a download link without taking any actions
 </summary>
	<param name="downloadLocation">download location</param>
	<param name="pathInDownloadLocation">path in download location</param>
	<param name="folderInVirtualDownloadLocation">Describes the virtual path to be added in download location. e.g. "foo/machines/images"</param>
	<param name="fileName"></param>
	<remarks>
 This function check for download location, if the value is "PublicCache", it returns a download link with query string parameter "file"
 (=files virtual path). If download location is not "PublicCache", return download link with query string parameter "fileID".
 
 if web application 
 return "/system/download.aspx?fid=UniqueCrypticID"
 else
 return "%temp%\filepath"
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.CreatePlainDownloadLink(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.String)">
	<summary>
     Creates a download link without taking any actions
 </summary>
	<param name="downloadLocation">download location</param>
	<param name="pathInDownloadLocation">path in download location</param>
	<param name="fileName">Name of file</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.CreatePlainDownloadLink(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.String,System.String)">
	<summary>
     Creates a download link without taking any actions
 </summary>
	<param name="downloadLocation">download location</param>
	<param name="pathInDownloadLocation">path in download location</param>
	<param name="folderInVirtualDownloadLocation">Describes the virtual path to be added in download location. e.g. "foo/machines/images"</param>
	<param name="fileName"></param>
	<remarks>
 This function check for download location, if the value is "PublicCache", it returns a download link with query string parameter "file"
 (=files virtual path). If download location is not "PublicCache", return download link with query string parameter "fileID".
 
 if web application 
 return "/system/download.aspx?fid=UniqueCrypticID"
 else
 return "%temp%\filepath"
 </remarks>
	<history>
 	[patil]	13.01.2005	Created
     [zeutzheim] 01.02.2010 Modified
 </history>
</member><member name="F:CompuMaster.camm.WebManager.DownloadHandler.FileData.FilePath">
	<summary>
     File system full path
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.DownloadHandler.FileData">
	<summary>
         Download Collection contains each element of type "FileData". Which is added to it by "Add" methods.
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.DownloadHandler.FileDataType">
	<summary>
         This structure is used to identify the file type in "FileData" in the Download collection.
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.Add(System.String,System.String)">
	<summary>
     This Add method is used to add single file in Download collection.
 </summary>
	<param name="pathOnDisc">Describes the full path of file to be added in collection. e.g. "d:\temp\MyFolder"</param>
	<param name="folderInVirtualDownloadLocation">Describes the virtual path to be added in download location. e.g. "foo/machines/images"</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.Add(System.String,System.String,System.String)">
	<summary>
     This Add method is used to add single file in Download collection.
 </summary>
	<param name="pathOnDisc">Describes the full path of file to be added in collection. e.g. "d:\temp\MyFolder"</param>
	<param name="folderInVirtualDownloadLocation">Describes the virtual path to be added in download location. e.g. "foo/machines/images"</param>
	<param name="newFilename">Describes the new name for the file added in Download collection.</param>
	<remarks>
     Following special strings in the file's new name will be converted into underscores ("_") because of security reasons:
     <list>
			<item>{</item>
			<item>}</item>
			<item>..</item>
		</list>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.Add(CompuMaster.camm.WebManager.DownloadHandler.SingleFileInDownloadLocation)">
	<summary>
     This Add method is used to add single file in Download collection.
 </summary>
	<param name="file">A temporary file</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.Add(System.IO.FileInfo,System.String)">
	<summary>
     This Add method is used to add single file in Download collection.
 </summary>
	<param name="fileInfo">Describes the file to be added in Download collection. fileInfo is of type "System.IO.FileInfo"</param>
	<param name="folderInVirtualDownloadLocation">Describes the virtual path to be added in download location. e.g. "foo/machines/images"</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.Add(System.IO.FileInfo,System.String,System.String)">
	<summary>
     This Add method is used to add single file in Download collection.
 </summary>
	<param name="fileInfo">Describes the file to be added in Download collection. fileInfo is of type "System.IO.FileInfo"</param>
	<param name="folderInVirtualDownloadLocation">Describes the virtual path to be added in download location. e.g. "foo/machines/images"</param>
	<param name="newFilename">Describes the new name for the file added in Download collection.</param>
	<remarks>
     Following special strings in the file's new name will be converted into underscores ("_") because of security reasons:
     <list>
			<item>{</item>
			<item>}</item>
			<item>..</item>
		</list>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.Add(System.IO.DirectoryInfo,System.String)">
	<summary>
     This Add method is used to add directory in Download collection.
 </summary>
	<param name="directoryInfo">Describes the directory to be added in Download collection. directoryInfo is of type "System.IO.DirectoryInfo"</param>
	<param name="folderInVirtualDownloadLocation">Describes the virtual path to be added in download location. e.g. "foo/machines/images"</param>
	<remarks>
     The directory is archived into zip format during download process.
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.DownloadHandler.RawDataSingleFile">
	<summary>
     This raw file data can be sent to the browser in all circumstances
 </summary>
	<remarks>
     This structure describes the one of the type of "FileData". Please see the description for structure "FileData"
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.DownloadHandler.RawDataCollectionMember">
	<summary>
     This file data must be added into a ZIP download or can be sent to the browser in fully featured mode. It cannot get transferred as a single, uncompressed file if the fully featured mode is not available. 
 </summary>
	<remarks>
     This structure describes the one of the type of "FileData". Please see the description for structure "FileData"
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.Add(CompuMaster.camm.WebManager.DownloadHandler.RawDataSingleFile,System.String)">
	<summary>
     This Add method is used to add file of type "RawDataSingleFile" in Download collection.
 </summary>
	<param name="file">This parameter is of type "RawDataSingleFile"</param>
	<param name="folderInVirtualDownloadLocation">Describes the virtual path to be added in download location. e.g. "foo/machines/images"</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.Add(CompuMaster.camm.WebManager.DownloadHandler.RawDataSingleFile,System.String,System.String)">
	<summary>
     This Add method is used to add file of type "RawDataSingleFile" in Download collection.
 </summary>
	<param name="file">This parameter is of type "RawDataSingleFile"</param>
	<param name="folderInVirtualDownloadLocation">Describes the virtual path to be added in download location. e.g. "foo/machines/images"</param>
	<param name="newFilename">Describes the new name for the file added in Download collection.</param>
	<remarks>
     Following special strings in the file's new name will be converted into underscores ("_") because of security reasons:
     <list>
			<item>{</item>
			<item>}</item>
			<item>..</item>
		</list>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.Add(CompuMaster.camm.WebManager.DownloadHandler.RawDataCollectionMember,System.String)">
	<summary>
     This Add method is used to add file of type "RawDataCollectionMemeber" in Download collection.
 </summary>
	<param name="file">This parameter is of type "RawDataCollectionMember"</param>
	<param name="folderInVirtualDownloadLocation">Describes the virtual path to be added in download location. e.g. "foo/machines/images"</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.Add(CompuMaster.camm.WebManager.DownloadHandler.RawDataCollectionMember,System.String,System.String)">
	<summary>
     This Add method is used to add file of type "RawDataCollectionMember" in Download collection.
 </summary>
	<param name="file">This parameter is of type "RawDataCollectionMember"</param>
	<param name="folderInVirtualDownloadLocation">Describes the virtual path to be added in download location. e.g. "foo/machines/images"</param>
	<param name="newFilename">Describes the new name for the file added in Download collection.</param>
	<remarks>
     Following special strings in the file's new name will be converted into underscores ("_") because of security reasons:
     <list>
			<item>{</item>
			<item>}</item>
			<item>..</item>
		</list>
	</remarks>
</member><member name="T:CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations">
	<summary>
          The download location is defined by this enumeration.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.GetTempFileVirtualPath(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.String)">
	<summary>
 Create a temporary file path (not a file!) which is managed by Download-Handler
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation</param>
	<param name="pathInDownloadLocation">
     This parameter defines the path in download location. 
 </param>
	<param name="fileName">The file name which shall be created</param>
	<returns>The virtual path of the temp file (which can be mapped to a physical file name in a 2nd step)</returns>
	<remarks>
 Download-Handler will automatically remove the file as soon as the regular timeout for the file has been reached.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.GetTempFile(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.String)">
	<summary>
 Create a temporary file path (not a file!) that can be delivered to client with download handler
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation</param>
	<param name="pathInDownloadLocation">This parameter defines the path in download location.</param>
	<param name="fileName">The file name which shall be created</param>
	<returns>The virtual path of the temp file (which can be mapped to a physical file name in a 2nd step)</returns>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.SingleFileInDownloadLocation.#ctor(System.String,CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.String,System.Boolean,System.String,System.String,System.String)">
	<summary>
 Create a new instance of SingleFileInDownloadLocation
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation</param>
	<param name="pathInDownloadLocation">This parameter defines the path in download location.</param>
	<param name="fileName">The file name which shall be created (for security reasons, some special chars like { and } will be replaced by _ char</param>
	<remarks></remarks>
</member><member name="T:CompuMaster.camm.WebManager.DownloadHandler.SingleFileInDownloadLocation">
	<summary>
 A reference to a single file in download handler area on disc
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ResolveSubFolderFromDownloadLocation(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations)">
	<summary>
     This function used to get download location in string format. 
 </summary>
	<param name="downloadLocation">downloadLocation is of type "DownloadLocations"</param>
	<returns>Returns download location in string format.</returns>
	<remarks>
     The download handler creates the download file at download location returned by this function.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ProcessDownload(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String)">
	<summary>
     This method processes the download collection. 
     And immediately sends file to client browser.
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation.</param>
	<param name="pathInDownloadLocation">
     This parameter defines the path in download location. 
 </param>
	<remarks>
     The download handler creates processed download file at location defined by parameter "downloadLocation".
     This method throws exception, if occured.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ProcessDownload(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.Boolean)">
	<summary>
     This method processes the download collection. 
     And immediately sends file to client browser.
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation.</param>
	<param name="pathInDownloadLocation">
     This parameter defines the path in download location. 
 </param>
	<param name="overwrite">If true overwrites the file in download location</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ProcessDownload(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.Boolean,System.TimeSpan)">
	<summary>
     This method processes the download collection. 
     And immediately sends file to client browser.
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation.</param>
	<param name="pathInDownloadLocation">
     This parameter defines the path in download location. 
 </param>
	<param name="overwrite">If true overwrites the file in download location</param>
	<param name="liveTime">Defines time for download file to be available for download</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ProcessDownload(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.Boolean,System.TimeSpan,System.Boolean,System.String)">
	<summary>
     This method processes the download collection. 
     And immediately sends file to client browser.
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation.</param>
	<param name="pathInDownloadLocation">
     This parameter defines the path in download location. 
 </param>
	<param name="overwrite">If true overwrites the file in download location</param>
	<param name="liveTime">Defines time for download file to be available for download.</param>
	<param name="zipFilesFirst">If true then download handler enforces the download collection in zip archive even it it is a single file.</param>
	<param name="zipArchiveName">Defines the zip archive name. Otherwise default zip archive name is created by Download handler.</param>
	<remarks>
     This method throws exception, if occured.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ProcessDownload(CompuMaster.camm.WebManager.DownloadHandler.SingleFileInDownloadLocation)">
	<summary>
     This method processes the download collection. 
     And immediately sends file to client browser.
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ProcessDownload(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.Boolean,System.TimeSpan,System.Boolean,System.String,System.Boolean)">
	<summary>
     This method processes the download collection. 
     And immediately sends file to client browser.
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation.</param>
	<param name="pathInDownloadLocation">
     This parameter defines the path in download location. 
 </param>
	<param name="overwrite">If true overwrites the file in download location</param>
	<param name="liveTime">Defines time for download file to be available for download.</param>
	<param name="zipFilesFirst">If true then download handler enforces the download collection in zip archive even it it is a single file.</param>
	<param name="zipArchiveName">Defines the zip archive name. Otherwise default zip archive name is created by Download handler.</param>
	<param name="enforceDownload">If true, then download handler enforces client browser to download file.</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ProcessAndGetDownloadLink(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String)">
	<summary>
     This method processes the download collection and returns the download link
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation.</param>
	<param name="pathInDownloadLocation">
     This parameter defines the path in download location. 
 </param>
	<returns>Returns the download link.</returns>
	<remarks>
		<p>This method throws exception, if occured.</p>
     If this is not the WebApplication, then Download handler creates download file in "%temp%"
     folder and returns complete path.
 
     The download handler creates processed download file at location defined by parameter "downloadLocation".
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ProcessAndGetDownloadLink(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.Boolean)">
	<summary>
     This method processes the download collection and returns the download link
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation.</param>
	<param name="pathInDownloadLocation">
     This parameter defines the path in download location. 
 </param>
	<param name="overwrite">If true overwrites the file in download location</param>
	<remarks>
		<p>This method throws exception, if occured.</p>
     If this is not the WebApplication, then Download handler creates download file in "%temp%"
     folder and returns complete path.
 
     The download handler creates processed download file at location defined by parameter "downloadLocation".
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ProcessAndGetDownloadLink(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.Boolean,System.TimeSpan)">
	<summary>
     This method processes the download collection and returns the download link
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation.</param>
	<param name="pathInDownloadLocation">
     This parameter defines the path in download location. 
 </param>
	<param name="overwrite">If true overwrites the file in download location</param>
	<param name="liveTime">Defines time, the download file to be available for download.</param>
	<remarks>
		<p>This method throws exception, if occured.</p>
     If this is not the WebApplication, then Download handler creates download file in "%temp%"
     folder and returns complete path.
 
     The download handler creates processed download file at location defined by parameter "downloadLocation".
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ProcessAndGetDownloadLink(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.Boolean,System.TimeSpan,System.Boolean,System.String)">
	<summary>
     This method processes the download collection and returns the download link
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation.</param>
	<param name="pathInDownloadLocation">
     This parameter defines the path in download location. 
 </param>
	<param name="overwrite">If true overwrites the file in download location</param>
	<param name="liveTime">Defines time, the download file to be available for download.</param>
	<param name="alwaysZipFiles">If true then download handler enforces the download collection in zip archive even it it is a single file.</param>
	<param name="zipArchiveName">Defines the zip archive name. Otherwise default zip archive name is created by Download handler.</param>
	<remarks>
		<p>This method throws exception, if occured.</p>
     If this is not the WebApplication, then Download handler creates download file in "%temp%"
     folder and returns complete path.
 
     The download handler creates processed download file at location defined by parameter "downloadLocation".
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ProcessAndGetDownloadLink(CompuMaster.camm.WebManager.DownloadHandler.SingleFileInDownloadLocation)">
	<summary>
     This method processes the download collection and returns the download link
 </summary>
	<remarks>
		<p>This method throws exception, if occured.</p>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ProcessAndGetPlainDownloadLink(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String)">
	<summary>
     This method processes the download collection and returns the download link as direct target to the file
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation.</param>
	<param name="pathInDownloadLocation">
     This parameter defines the path in download location. 
 </param>
	<returns>Returns the download link.</returns>
	<remarks>
		<p>This method throws exception, if occured.</p>
     If this is not the WebApplication, then Download handler creates download file in "%temp%"
     folder and returns complete path.
 
     The download handler creates processed download file at location defined by parameter "downloadLocation".
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ProcessAndGetPlainDownloadLink(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.Boolean)">
	<summary>
     This method processes the download collection and returns the download link as direct target to the file
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation.</param>
	<param name="pathInDownloadLocation">
     This parameter defines the path in download location. 
 </param>
	<param name="overwrite">If true overwrites the file in download location</param>
	<remarks>
		<p>This method throws exception, if occured.</p>
     If this is not the WebApplication, then Download handler creates download file in "%temp%"
     folder and returns complete path.
 
     The download handler creates processed download file at location defined by parameter "downloadLocation".
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ProcessAndGetPlainDownloadLink(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.Boolean,System.TimeSpan)">
	<summary>
     This method processes the download collection and returns the download link as direct target to the file
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation.</param>
	<param name="pathInDownloadLocation">
     This parameter defines the path in download location. 
 </param>
	<param name="overwrite">If true overwrites the file in download location</param>
	<param name="liveTime">Defines time, the download file to be available for download.</param>
	<remarks>
		<p>This method throws exception, if occured.</p>
     If this is not the WebApplication, then Download handler creates download file in "%temp%"
     folder and returns complete path.
 
     The download handler creates processed download file at location defined by parameter "downloadLocation".
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.ProcessAndGetPlainDownloadLink(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.Boolean,System.TimeSpan,System.Boolean,System.String)">
	<summary>
     This method processes the download collection and returns the download link as direct target to the file
 </summary>
	<param name="downloadLocation">Defines the standard downloadLocation.</param>
	<param name="pathInDownloadLocation">
     This method processes the download collection and returns the download link as direct target to the file
 </param>
	<param name="overwrite">If true overwrites the file in download location</param>
	<param name="liveTime">Defines time, the download file to be available for download.</param>
	<param name="zipFilesFirst">If true then download handler enforces the download collection in zip archive even it it is a single file.</param>
	<param name="zipArchiveName">Defines the zip archive name. Otherwise default zip archive name is created by Download handler.</param>
	<remarks>
		<p>This method throws exception, if occured.</p>
     If this is not the WebApplication, then Download handler creates download file in "%temp%"
     folder and returns complete path.
 
     The download handler creates processed download file at location defined by parameter "downloadLocation".
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.GetDataToRecordAndProcess(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.Boolean,System.Boolean,System.String,System.Boolean)">
	<summary>
     Processes download and returns data to record in structure type DataToProcessDownload.
 </summary>
	<param name="downloadLocation">download location</param>
	<param name="pathInDownloadLocation">path in download location</param>
	<param name="overwrite">If true overwrites the file in download location</param>
	<param name="zipFilesFirst">If true then download handler enforces the download collection in zip archive even it it is a single file.</param>
	<param name="zipArchiveName">Defines the zip archive name. Otherwise default zip archive name is created by Download handler.</param>
	<param name="enforceDownload">If true, then download handler enforces client browser to download file.</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.CombineUnixPathsSafely(System.String,System.String)">
	<summary>
     Combine a unix path with another one, but handle the 2nd path always as as relative path
 </summary>
	<param name="path1">A first path</param>
	<param name="relativePath2">A second path which must be relative and shall be appended to the first path</param>
	<returns>The combined path</returns>
	<remarks>
 If path2 starts with "/", an exception is thrown to prevent security issues
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.DownloadHandler.DataToProcessDownload">
	<summary>
     This structure used to hold data returned by method "GetDataToRecordAndProcess".
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.GetDownloadFileVirtualPath(System.String)">
	<summary>
     Returns virtual path
 </summary>
	<param name="fileFullPath">The physical full path of a file</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.CreateFile(System.String)">
	<summary>
     This method creates file including parent directory if not exists 
 </summary>
	<param name="fileFullPath">Defines the files virtual path, which is to be created.</param>
	<returns>Returns System.IO.FileStream object of file created.</returns>
	<remarks>
     This method throws exception message, if any error occured.
     This method also looks for the parent directory of the file defined by "fileFullPath".
     And also creates the parent directory/directories, if they do not exist. 
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.SendDownloadFileToCurrentRequest(System.String)">
	<summary>
     Send a file inside the current request
 </summary>
	<param name="fileFullPath">Defines the files virtual path.</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.SendDownloadFileToCurrentRequest(System.String,System.Boolean,System.String)">
	<summary>
     Send a file inside the current request
 </summary>
	<param name="fileFullPath">Defines files virtual path.</param>
	<param name="enforceDownload">If true, download handler enforces client browswer to download the file.</param>
	<param name="mimeType">Defines the mime type of the file.</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.SendDownloadFileToCurrentRequest(CompuMaster.camm.WebManager.DownloadHandler.RawDataCollectionMember)">
	<summary>
     Send a raw file inside the current request
 </summary>
	<param name="rawDataFile"></param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.SendDownloadFileToCurrentRequest(CompuMaster.camm.WebManager.DownloadHandler.RawDataSingleFile)">
	<summary>
     Send a raw file inside the current request
 </summary>
	<param name="rawDataFile"></param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.RedirectFileToBrowser(System.String)">
	<summary>
     Redirects file to browser
 </summary>
	<param name="fileFullPath">File full path</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.RedirectFileToBrowser(System.String,System.String)">
	<summary>
     Redirects file to browser
 </summary>
	<param name="fileFullPath">Defines files virtual path.</param>
	<param name="mimeType"></param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.GetMimeType(System.String)">
	<summary>
     Returns mime type for file extension type.
 </summary>
	<param name="extension">e.g. ".pdf"</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.DownloadFileByID(System.String)">
	<summary>
     Redirect the requested file to the browser
 </summary>
	<param name="UniqueCrypticID">Defines the unique identifier, of the requested download file.</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.DownloadFileByPath(System.String)">
	<summary>
     Redirect the requested file to the browser
 </summary>
	<param name="fileVirtualPath">Defines the virtual file path of the requested download file.</param>
</member><member name="P:CompuMaster.camm.WebManager.DownloadHandler.EncryptedValueCurrentServerIdentString">
	<summary>
     A cached value for the encrypted server identification string of the current server
     This value is cached because the encryption process is time expensive.
     But in web-version we must cache it in a namevaluecollection because its key can differ during runtime by each request.
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.DownloadHandler.CachedEncryptedCurrentServerIdentString">
	<summary>
 A cached NameValueCollection of encrypted serveridentstrings.
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.CheckExistanceOfTempDownloadFolder">
	<summary>
      Verifies that the download location exists, otherwise creates it
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.GetDownloadCollectionSize">
	<summary>
     Calculates the size of the file/directory collection
 </summary>
	<remarks>
     This is the raw size of the collection before compression takes effect
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.GetDirectorySize(System.IO.DirectoryInfo)">
	<summary>
     Calculate the size of a complete directory structure.
 </summary>
	<param name="directory">Denotes the directory structure of type System.IO.DirectoryInfo, whose size is to be calculated.</param>
	<returns>Returns size of complete directory structure as "Long"</returns>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.GetFileFullPath(System.String)">
	<summary>
     Returns file full path from file's unique identifier.
 </summary>
	<param name="UniqueCrypticID"></param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.GetPathFromSystemFolder(System.String)">
	<summary>
     Convert a physical file name to a virtual one by truncating first chars
 </summary>
	<param name="fullPath">A physical file name</param>
	<returns>The virtual path</returns>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.zipFiles(System.String[],System.String)">
	<summary>
     This method archives the files defined by parameter "files()" in zip format.
 </summary>
	<param name="files">
     Defines the array of files which are to be archived in zip. 
     Each element of array should contain complete path of file.
 </param>
	<param name="targetZipfilePath">Defines complete path of target zip archive.</param>
	<remarks>
     Throws execption if occured.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.zipDir(ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.String,System.String,System.String)">
	<summary>
     This method adds complete directory structure defined by "directoryPath", into 
     zip archive defined by "zos" which is of type "ICSharpCode.SharpZipLib.Zip.ZipOutputStream".
 </summary>
	<param name="zos">This is the object of type "ICSharpCode.SharpZipLib.Zip.ZipOutputStream"</param>
	<param name="fPathToIncludeInZip">
     Defines additional path to include in zip archive
     <example>e.g. 
     fPathToIncludeInZip is "foo/images";
     directoryPath is "d:\temp\myFolder";
     rootPath is "d:\temp\";
     the file name to be archived is "myPicture.jpg";
     the resulting file full name to be added in archive is  
     "myFolder\foo\images\myPicture.jpg"
     </example>
	</param>
	<param name="rootPath">
     rootPath tells zipDir which part of dPath should be removed before compressing and zip in zipfile. 
     e.g. dPath is c:\temp\myFolder\, and you want to store myFile.txt with path myFolder\myFile.txt
     in this case rootPath will be c:\temp\
 </param>
	<param name="directoryPath"></param>
	<remarks>
     Throws exception, if occured.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.writeFileToZipOutputStream(ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.String,System.IO.FileInfo)">
	<summary>
     This method adds file defined by "fileInfo", into 
     zip archive defined by "zos" which is of type "ICSharpCode.SharpZipLib.Zip.ZipOutputStream".
 </summary>
	<param name="zos">This is the object of type "ICSharpCode.SharpZipLib.Zip.ZipOutputStream"</param>
	<param name="fPathToIncludeInZip">
     Defines additional path to include in zip archive
     <example>
     fPathToIncludeInZip is "foo/machine"; 
     the file full name to be archived is "images/myPicture.jpg"; 
     the resulting file full name to be added in archive is 
     "foo\machine\images\myPicture.jpg" 
     </example>
	</param>
	<param name="fileInfo">Defines the file object of type "System.IO.FileInfo" to be added in zip archive.</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.writeDirectoryToZipOutputStream(ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.String,System.String)">
	<summary>
     This method adds directory defined by "directoryPath", into 
     zip archive defined by "zos" of type "ICSharpCode.SharpZipLib.Zip.ZipOutputStream".
 </summary>
	<param name="zos">This is the object of type "ICSharpCode.SharpZipLib.Zip.ZipOutputStream"</param>
	<param name="fPathToIncludeInZip">
     For description please check parameter with same name in method "zipDir".
 </param>
	<param name="directoryPath">
     Defines the full path of directory which is to be added in archive defined by object
     "zos" of type "ICSharpCode.SharpZipLib.Zip.ZipOutputStream".
 </param>
	<remarks>
     Throws exception if occured.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.writeByteArrayToZipOutputStream(ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.String,System.Byte[])">
	<summary>
     This method adds the file in byte array format to zip archive defined by object
     "zos" of type "ICSharpCode.SharpZipLib.Zip.ZipOutputStream".
 </summary>
	<param name="zos">This is the object of type "ICSharpCode.SharpZipLib.Zip.ZipOutputStream"</param>
	<param name="fileNameWithVirtualPathToIncludeInZip">
     Defines the full file name for the file defined by byte array "buffer".
 </param>
	<param name="buffer">Defines the file in byte array format.</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.getConnectString">
	<summary>
     This method returns the Database connection string.
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.AddDownloadFileRecord(System.String,System.Int32,System.TimeSpan)">
	<summary>
     This method create unique identifier for each record to be added in database
     table. And returns it as a string.
 </summary>
	<param name="targetFileFullPath"></param>
	<param name="serverID"></param>
	<param name="ts"></param>
	<returns>Returns unique idenfier of the record added by this method as Sting.</returns>
	<remarks>
     Throws exception, if occured.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.AddDownloadFileRecordToDB(System.String,System.String,System.TimeSpan)">
	<summary>
     Adds record to database table.
 </summary>
	<param name="location">location should be virtual filepath with file Name</param>
	<param name="ts"></param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.GetAllFileRecordInDB">
	<summary>
     Returns list of "VirtualDownloadLocation" for all registered files in the database.
 </summary>
	<remarks>
     Throws exception if occured.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.GetVirtualDownloadLocation(System.String)">
	<summary>
     Returns "VirtualDownloadLocation" of the record with unique identifier as "UniqueCrypticID" at current server.
 </summary>
	<param name="UniqueCrypticID">Defines UniqueCrypticID which record to be found</param>
	<remarks>
     Throws exception if occured.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.GetUniqueCrypticID(System.String)">
	<summary>
     Look for the record for location value "VirtualDownloadLocation". And returns unique identifier.
 </summary>
	<param name="VirtualDownloadLocation"></param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.UpdateDownloadFileRecord(System.String,System.TimeSpan)">
	<summary>
     Update file record with new TimeOfRemoval
 </summary>
	<param name="virtualDownloadLocation"></param>
	<param name="timeOfRemoval"></param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.GetTimedout_VirtualDownloadLocationCollectionAndCleanupRecordsInDB(System.Boolean)">
	<summary>
     Returns collection of "VirtualDownloadLocation" as current server and deletes those records.
 </summary>
	<param name="regardlessToTheirTimeout">Parameter indicates record search.</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.CleanUp">
	<summary>
     Look up for files in the database whose time has run out and deletes them.
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.CleanUpAllRegisteredFiles">
	<summary>
     Look up for files in the database and deletes them.
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.CleanUpUnregisteredFiles">
	<summary>
     Gets called by the camm Web-Manager administration forms when a supervisor demands it manually
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.RemoveFilesFromDownloadFolder(System.Collections.Specialized.StringCollection)">
	<summary>
     Removes files from current server disc.
 </summary>
	<param name="fileVirtualPathCollection"></param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.RemoveFilesNotRegisteredInDatabase">
	<summary>
     Removes unregistered files from current server disc.
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.GetListOfAvailableServersIdentString">
	<summary>
     Returns list of available servers identification string.
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.RemoveDownloadFileFromCache(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.String)">
	<summary>
     Removes cached file
 </summary>
	<param name="downloadLocation">Defines download location</param>
	<param name="pathInDownloadLocation">Path in download location</param>
	<param name="fileName">File name in cache to be removed</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.RemoveDownloadFileFromCache(CompuMaster.camm.WebManager.DownloadHandler.DownloadLocations,System.String,System.String,System.String)">
	<summary>
  Removes cached file
 </summary>
	<param name="downloadLocation">download location</param>
	<param name="pathInDownloadLocation">path in download location</param>
	<param name="folderInVirtualDownloadLocation">folder/s in virtual download location</param>
	<param name="fileName">File name in cache to be removed</param>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandler.RemoveFileFromDownloadLocations(System.IO.DirectoryInfo,System.String,System.String)">
	<summary>
     Removes download files from cache. This is a recursive method, it traverse through all inner directories.
 </summary>
	<param name="directoryInfo">System download directory object for temprary files, e.g. c:\inetpub\wwwroot\system\downloads\. This paramter will get initialized to inner directory at every recursive call.</param>
	<param name="filePath">Virtual file path to be removed i.e. pathInDownloadLocation + folderInVirtualDownloadlocation + file name</param>
	<param name="rootPath">System download directory full name for temprary files, e.g. c:\inetpub\wwwroot\system\downloads\</param>
	<remarks>
     Removes download files from cache i.e. from downloadlocation 
     WebServerSession, WebManagerUserSession and WebManagerSecurityObjectName.
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.DownloadHandler.AllFilesInDirectory">
	<summary>
     Inherites abstract class "CollectionBase". 
 </summary>
	<remarks>
     The object of this class contains list of all files in directory structure 
     defined by "directoryInfo" as "FileInfo" object.
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.DownloadHandler.AllDirsInDirectory">
	<summary>
     Inherites abstract class "CollectionBase". 
 </summary>
	<remarks>
     The object of this class contains list of all directories in directory structure
     defined by "directoryInfo" as "DirectoryInfo" object.
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.DownloadHandler.DownloadFolderFullPath">
	<summary>
     Returns the physical download folder path.
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.DownloadHandler.IsWebApplication">
	<summary>
     Returns value indicating whether calling application is Web.
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.DownloadHandler.CurrentServerIdentString">
	<summary>
     The current server identification string of camm Web-Manager or otherwise the name of the current host
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.DownloadHandler.ServerID">
	<summary>
     A server ID reported by camm Web-Manager or otherwise a virtual, negative ID value calculated on the letters of the host name
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.DownloadHandler.MaxDownloadCollectionSize">
	<summary>
     Defines maximum download collection size allowed in bytes.
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.DownloadHandler.MaxDownloadSize">
	<summary>
     Defines maximum download size(in bytes) allowed.
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.DownloadHandler.GeneralTimeLimitForFiles">
	<summary>
     Default live time for the download collection.
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.DownloadHandler.TimeLimitForPublicCache">
	<summary>
     Default live time for the public cache.
 </summary>
	<value></value>
</member><member name="T:CompuMaster.camm.WebManager.DownloadHandler">
	<summary>
     The download handler provides mechanisms for creating temporary files with automatic removal after they're not required any more.
     If collection contains only single file, then download handler creates hard link for that file in the download location. In case there is error
     while creating hard link the download handler copies the file to download location. For all other possible collection, download handler archives the
     download collection to zip format and put this zip archive in download location. 
 </summary>
	<remarks>
     The features are that
     <list>
			<item>The application only has to create those temporary files once and the next requests can use a cached file</item>
			<item>All browsers are correctly handling the name of file because the downloaded file doesn't rely on a download script file with parameters in the URL respecitvely a file name or MIME type in the headers of the response (which is not always interpreted correctly by the different browsers/platforms)</item>
			<item>Compression of files by providing ZIP archives</item>
			<item>Multiple files can be downloaded in a ZIP file</item>
			<item>High performance downloads inclusive multiple-stream and continue-aborted-downloads support since IIS can handle the file transfer itself</item>
		</list>
     This makes sense especially in following situations:
     <list>
			<item>Download of files from a database</item>
			<item>Download of files which are stored in the local or a network file system but which are not available directly through the webserver</item>
			<item>Download of several files (e. g. from a download cart)</item>
			<item>Download of large files which would require the ASP.NET engine to hold a lot of memory as long as the request has been processed completely</item>
		</list>
     Construction of the complete path:
         IISWebRoot/SystemDownloadFolderForTemporaryFiles/{ResolveSubFolderFromDownloadLocation}/pathInDownloadLocation/folderInVirtualDownloadLocation/FileName.Extension
         IISWebRoot/SystemDownloadFolderForTemporaryFiles/{ResolveSubFolderFromDownloadLocation}/pathInDownloadLocation/zipFile.zip[/folderInVirtualDownloadLocation/FileName.Extension]
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.DownloadHandlerFileSizeLimitException">
	<summary>
     The exception that is thrown when a download size exceeds limit.
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.DownloadHandlerCollectionSizeLimitException.#ctor(System.Int64,System.Int64)">
	<summary>
     Message to get more infromation
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.DownloadHandlerCollectionSizeLimitException">
	<summary>
     The exception that is thrown when a download collection exceeds limit.
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.DownloadHandlerNotSupportedException">
	<summary>
     The exception that is thrown when a download requires full features respectively write access to the working folder
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.EmptySecurityObjectException">
	<summary>
     This exception is thrown when Security Object for camm WebManager is undefined.
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.MailsInQueue">
	<summary>
     Number of mails in the mail queue
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.ProcessOneMail">
	<summary>
     Process first mail in queue
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.SendMail(System.String,System.Int32,System.Data.SqlClient.SqlConnection)">
	<summary>
     Send the mail which has been serialized as XML data
 </summary>
	<param name="xml">The XML representation of the mail data</param>
	<param name="mailQueueID">The ID of the item in the mail queue, required for logging purposes only</param>
	<returns>True if successfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.UpdateQueueState(System.Int32,CompuMaster.camm.WebManager.Messaging.QueueMonitoring.QueueStates)">
	<summary>
     Update the state of a queued item
 </summary>
	<param name="queuedItemID">ID of Log_emailMessage record</param>
	<param name="state">State of an email</param>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.LoadMailMessage(System.Int32)">
	<summary>
     Log_eMailData for emailID
 </summary>
	<param name="queuedItemID">unique id of Log_eMailMessage record</param>
</member><member name="F:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.QueueStates.WaitingForReleaseBeforeQueuing">
	<summary>
     The mail has been stored into the queue, but hasn't been allowed to be sent yet
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.QueueStates.Queued">
	<summary>
     Mail has been queued, sending will follow asap.
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.QueueStates.Sending">
	<summary>
     The queue mailing system is currently engaged to send this mail
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.QueueStates.Cancelled">
	<summary>
     Mail transmission has been cancelled by the sending user or the sending application
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.QueueStates.Successfull">
	<summary>
     Mail has been delivered without errors
 </summary>
	<remarks>
     This doesn't say that (all of) the receipients have got the mail, it only says that there was no error while sending it
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.QueueStates.FailureAfter1Trial">
	<summary>
     Delivery of the mail has been failed one time
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.QueueStates.FailureAfter2Trials">
	<summary>
     Delivery of the mail has been failed two times
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.QueueStates.FailureAfterLastTrial">
	<summary>
     The transfer will not be repeated, the delivery of the mail has been failed three times
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.QueueStates.FailureAccepted">
	<summary>
     The three time failure is accepted by moderator
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.QueueStates">
	<summary>
     Available states in the mail queue table
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.SetLastErrorDetails(System.String,System.Int32,System.Data.SqlClient.SqlConnection,CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations)">
	<summary>
     Set the last error information by the mail queue processor
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.SetLastActivityDate(System.Data.SqlClient.SqlConnection,CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations)">
	<summary>
     Set the last activity information by the mail queue processor
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.MonitorIsActive">
	<summary>
     Has the monitor been active in the last 30 minutes?
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.QueueMonitoring.CleanUpOldQueueElements(System.Data.SqlClient.SqlConnection)">
	<summary>
     Remove old lines from the mail queue which are older than 14 days
 </summary>
	<remarks>
     An additional new log entry will be created to log the truncation
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.Messaging.QueueMonitoring">
	<summary>
     Methods for the mail queue manager
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Messaging.NamespaceDoc">
	<summary>
     Messaging classes for e-mail, SMS, etc.
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Messaging.MailMessage">
	<summary>
     The content of an e-mail with all required data
 </summary>
	<remarks>
     ToDo: some fields are not yet use in queueing and queue send method, implement them everywhere
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Messaging.EMails.MailSystem">
	<summary>
     The preferred system for sending e-mails
 </summary>
	<value>The new favorite</value>
	<remarks>
     Please note: if the mail system in unavailable, camm Web-Manager tries to send the e-mail with other systems automatically.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.SendEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
     Send an e-mail
 </summary>
	<param name="rcptName">The name of the receipient</param>
	<param name="rcptAddress">The e-mail address of the receipient</param>
	<param name="msgSubject">A subject for the new e-mail</param>
	<param name="msgTextBody">The message text as plain text</param>
	<param name="msgHtmlBody">The message text as HTML code</param>
	<param name="senderName">The name of the sender</param>
	<param name="senderAddress">The e-mail address of the sender</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.SendEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
     Send an e-mail
 </summary>
	<param name="rcptName">The name of the receipient</param>
	<param name="rcptAddress">The e-mail address of the receipient</param>
	<param name="msgSubject">A subject for the new e-mail</param>
	<param name="msgTextBody">The message text as plain text</param>
	<param name="msgHtmlBody">The message text as HTML code</param>
	<param name="senderName">The name of the sender</param>
	<param name="senderAddress">The e-mail address of the sender</param>
	<param name="replyToName">The name of the person who should receive the reply</param>
	<param name="replyToAddress">The e-mail address of the person who should receive the reply</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.SendEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.Messaging.EMails.Priority,CompuMaster.camm.WebManager.Messaging.EMails.Sensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.String,System.String@)">
	<summary>
     Sends an e-mail
 </summary>
	<param name="rcptName">The name of the receipient</param>
	<param name="rcptAddress">The e-mail address of the receipient</param>
	<param name="msgSubject">A subject for the new e-mail</param>
	<param name="msgTextBody">The message text as plain text</param>
	<param name="msgHtmlBody">The message text as HTML code</param>
	<param name="senderName">The name of the sender</param>
	<param name="senderAddress">The e-mail address of the sender</param>
	<param name="priority">The priority of the e-mail</param>
	<param name="attachments">An array of optional attachments</param>
	<param name="sensitivity">The sensitivity of the e-mail</param>
	<param name="requestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="requestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="additionalHeaders">A collection of optinally additional e-mail headers</param>
	<param name="msgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.SendEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,CompuMaster.camm.WebManager.WMSystem.EMailAttachement[],CompuMaster.camm.WebManager.WMSystem.MailImportance,CompuMaster.camm.WebManager.WMSystem.MailSensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.String,System.String@)">
	<summary>
     Sends an e-mail
 </summary>
	<param name="rcptName">The name of the receipient</param>
	<param name="rcptAddress">The e-mail address of the receipient</param>
	<param name="msgSubject">A subject for the new e-mail</param>
	<param name="msgTextBody">The message text as plain text</param>
	<param name="msgHtmlBody">The message text as HTML code</param>
	<param name="senderName">The name of the sender</param>
	<param name="senderAddress">The e-mail address of the sender</param>
	<param name="replyToName">The name of the person who should receive the reply</param>
	<param name="replyToAddress">The e-mail address of the person who should receive the reply</param>
	<param name="priority">The priority of the e-mail</param>
	<param name="attachments">An array of optional attachments</param>
	<param name="sensitivity">The sensitivity of the e-mail</param>
	<param name="requestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="requestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="additionalHeaders">A collection of optinally additional e-mail headers</param>
	<param name="msgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.SendEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.Messaging.EMails.Priority,CompuMaster.camm.WebManager.Messaging.EMails.Sensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.String,System.String@)">
	<summary>
     Sends an e-mail
 </summary>
	<param name="rcptName">The name of the receipient</param>
	<param name="rcptAddress">The e-mail address of the receipient</param>
	<param name="msgSubject">A subject for the new e-mail</param>
	<param name="msgTextBody">The message text as plain text</param>
	<param name="msgHtmlBody">The message text as HTML code</param>
	<param name="senderName">The name of the sender</param>
	<param name="senderAddress">The e-mail address of the sender</param>
	<param name="replyToName">The name of the person who should receive the reply</param>
	<param name="replyToAddress">The e-mail address of the person who should receive the reply</param>
	<param name="priority">The priority of the e-mail</param>
	<param name="attachments">An array of optional attachments</param>
	<param name="sensitivity">The sensitivity of the e-mail</param>
	<param name="requestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="requestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="additionalHeaders">A collection of optinally additional e-mail headers</param>
	<param name="msgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.SendEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
     Sends an e-mail to multiple receipients
 </summary>
	<param name="rcptAddresses_To">The receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="rcptAddresses_Cc">The copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="rcptAddresses_Bcc">The blind copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="msgSubject">A subject for the new e-mail</param>
	<param name="msgTextBody">The message text as plain text</param>
	<param name="msgHtmlBody">The message text as HTML code</param>
	<param name="senderName">The name of the sender</param>
	<param name="senderAddress">The e-mail address of the sender</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
	<seealso>CreateReceipientString</seealso>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.SendEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
     Sends an e-mail to multiple receipients
 </summary>
	<param name="rcptAddresses_To">The receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="rcptAddresses_Cc">The copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="rcptAddresses_Bcc">The blind copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="msgSubject">A subject for the new e-mail</param>
	<param name="msgTextBody">The message text as plain text</param>
	<param name="msgHtmlBody">The message text as HTML code</param>
	<param name="senderName">The name of the sender</param>
	<param name="senderAddress">The e-mail address of the sender</param>
	<param name="replyToName">The name of the person who should receive the reply</param>
	<param name="replyToAddress">The e-mail address of the person who should receive the reply</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
	<seealso>CreateReceipientString</seealso>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.SendEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.Messaging.EMails.Priority,CompuMaster.camm.WebManager.Messaging.EMails.Sensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.String,System.String@)">
	<summary>
     Sends an e-mail to multiple receipients
 </summary>
	<param name="rcptAddresses_To">The receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="rcptAddresses_Cc">The copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="rcptAddresses_Bcc">The blind copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="msgSubject">A subject for the new e-mail</param>
	<param name="msgTextBody">The message text as plain text</param>
	<param name="msgHtmlBody">The message text as HTML code</param>
	<param name="senderName">The name of the sender</param>
	<param name="senderAddress">The e-mail address of the sender</param>
	<param name="attachments">An array of optional attachments</param>
	<param name="priority">The priority of the e-mail</param>
	<param name="sensitivity">The sensitivity of the e-mail</param>
	<param name="requestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="requestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="additionalHeaders">A collection of optinally additional e-mail headers</param>
	<param name="msgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
	<seealso>CreateReceipientString</seealso>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.SendEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,CompuMaster.camm.WebManager.WMSystem.EMailAttachement[],CompuMaster.camm.WebManager.WMSystem.MailImportance,CompuMaster.camm.WebManager.WMSystem.MailSensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.String,System.String@)">
	<summary>
     Sends an e-mail to multiple receipients
 </summary>
	<param name="rcptAddresses_To">The receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="rcptAddresses_Cc">The copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="rcptAddresses_Bcc">The blind copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="msgSubject">A subject for the new e-mail</param>
	<param name="msgTextBody">The message text as plain text</param>
	<param name="msgHtmlBody">The message text as HTML code</param>
	<param name="senderName">The name of the sender</param>
	<param name="senderAddress">The e-mail address of the sender</param>
	<param name="attachments">An array of optional attachments</param>
	<param name="priority">The priority of the e-mail</param>
	<param name="sensitivity">The sensitivity of the e-mail</param>
	<param name="requestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="requestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="additionalHeaders">A collection of optinally additional e-mail headers</param>
	<param name="msgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
	<seealso>CreateReceipientString</seealso>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.SendEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.Messaging.EMails.Priority,CompuMaster.camm.WebManager.Messaging.EMails.Sensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.String,System.String@)">
	<summary>
     Sends an e-mail to multiple receipients
 </summary>
	<param name="rcptAddresses_To">The receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="rcptAddresses_Cc">The copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="rcptAddresses_Bcc">The blind copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="msgSubject">A subject for the new e-mail</param>
	<param name="msgTextBody">The message text as plain text</param>
	<param name="msgHtmlBody">The message text as HTML code</param>
	<param name="senderName">The name of the sender</param>
	<param name="senderAddress">The e-mail address of the sender</param>
	<param name="replyToName">The name of the person who should receive the reply</param>
	<param name="replyToAddress">The e-mail address of the person who should receive the reply</param>
	<param name="attachments">An array of optional attachments</param>
	<param name="priority">The priority of the e-mail</param>
	<param name="sensitivity">The sensitivity of the e-mail</param>
	<param name="requestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="requestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="additionalHeaders">A collection of optinally additional e-mail headers</param>
	<param name="msgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
	<seealso>CreateReceipientString</seealso>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.SendEMail(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.Messaging.EMails.Priority,CompuMaster.camm.WebManager.Messaging.EMails.Sensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.String,System.String@)">
	<summary>
     Sends an e-mail to multiple receipients
 </summary>
	<param name="allowQueuing">Is the queuing mechanism allowed (a queue item should never get queued again)</param>
	<param name="rcptAddresses_To">The receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="rcptAddresses_Cc">The copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="rcptAddresses_Bcc">The blind copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="msgSubject">A subject for the new e-mail</param>
	<param name="msgTextBody">The message text as plain text</param>
	<param name="msgHtmlBody">The message text as HTML code</param>
	<param name="senderName">The name of the sender</param>
	<param name="senderAddress">The e-mail address of the sender</param>
	<param name="attachments">An array of optional attachments</param>
	<param name="priority">The priority of the e-mail</param>
	<param name="sensitivity">The sensitivity of the e-mail</param>
	<param name="requestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="requestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="additionalHeaders">A collection of optinally additional e-mail headers</param>
	<param name="msgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
	<seealso>CreateReceipientString</seealso>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.QueueEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
     Sends an e-mail to the mail queue
 </summary>
	<param name="RcptName">The name of the receipient</param>
	<param name="RcptAddress">The e-mail address of the receipient</param>
	<param name="MsgSubject">A subject for the new e-mail</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.QueueEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
     Sends an e-mail to the mail queue
 </summary>
	<param name="RcptName">The name of the receipient</param>
	<param name="RcptAddress">The e-mail address of the receipient</param>
	<param name="MsgSubject">A subject for the new e-mail</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="replyToName">The name of the person who should receive the reply</param>
	<param name="replyToAddress">The e-mail address of the person who should receive the reply</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.QueueEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,CompuMaster.camm.WebManager.WMSystem.EMailAttachement[],CompuMaster.camm.WebManager.WMSystem.MailImportance,CompuMaster.camm.WebManager.WMSystem.MailSensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.String,System.String@,System.Data.IDbConnection)">
	<summary>
     Sends an e-mail to the mail queue
 </summary>
	<param name="RcptName">The name of the receipient</param>
	<param name="RcptAddress">The e-mail address of the receipient</param>
	<param name="MsgSubject">A subject for the new e-mail</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="MsgTextBody">The message text as plain text</param>
	<param name="MsgHTMLBody">The message text as HTML code</param>
	<param name="Attachments">An array of optional attachments</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="RequestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="AdditionalHeaders">A collection of optinally additional e-mail headers</param>
	<param name="MsgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.QueueEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.Messaging.EMails.Priority,CompuMaster.camm.WebManager.Messaging.EMails.Sensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.String,System.String@,System.Data.IDbConnection)">
	<summary>
     Sends an e-mail to the mail queue
 </summary>
	<param name="RcptName">The name of the receipient</param>
	<param name="RcptAddress">The e-mail address of the receipient</param>
	<param name="MsgSubject">A subject for the new e-mail</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="MsgTextBody">The message text as plain text</param>
	<param name="MsgHTMLBody">The message text as HTML code</param>
	<param name="Attachments">An array of optional attachments</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="RequestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="AdditionalHeaders">A collection of optinally additional e-mail headers</param>
	<param name="MsgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.QueueEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,CompuMaster.camm.WebManager.WMSystem.EMailAttachement[],CompuMaster.camm.WebManager.WMSystem.MailImportance,CompuMaster.camm.WebManager.WMSystem.MailSensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.String,System.String@,System.Data.IDbConnection)">
	<summary>
     Sends an e-mail to the mail queue
 </summary>
	<param name="RcptName">The name of the receipient</param>
	<param name="RcptAddress">The e-mail address of the receipient</param>
	<param name="MsgSubject">A subject for the new e-mail</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="replyToName">The name of the person who should receive the reply</param>
	<param name="replyToAddress">The e-mail address of the person who should receive the reply</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="MsgTextBody">The message text as plain text</param>
	<param name="MsgHTMLBody">The message text as HTML code</param>
	<param name="Attachments">An array of optional attachments</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="RequestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="AdditionalHeaders">A collection of optinally additional e-mail headers</param>
	<param name="MsgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.QueueEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.Messaging.EMails.Priority,CompuMaster.camm.WebManager.Messaging.EMails.Sensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.String,System.String@,System.Data.IDbConnection)">
	<summary>
     Sends an e-mail to the mail queue
 </summary>
	<param name="RcptName">The name of the receipient</param>
	<param name="RcptAddress">The e-mail address of the receipient</param>
	<param name="MsgSubject">A subject for the new e-mail</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="replyToName">The name of the person who should receive the reply</param>
	<param name="replyToAddress">The e-mail address of the person who should receive the reply</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="MsgTextBody">The message text as plain text</param>
	<param name="MsgHTMLBody">The message text as HTML code</param>
	<param name="Attachments">An array of optional attachments</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="RequestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="AdditionalHeaders">A collection of optinally additional e-mail headers</param>
	<param name="MsgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.QueueEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
     Sends an e-mail to multiple receipients via the mail queue
 </summary>
	<param name="RcptAddresses_To">The receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="RcptAddresses_CC">The copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="RcptAddresses_BCC">The blind copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="MsgSubject">A subject for the new e-mail</param>
	<param name="MsgTextBody">The message text as plain text</param>
	<param name="MsgHTMLBody">The message text as HTML code</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
	<seealso>CreateReceipientString</seealso>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.QueueEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
     Sends an e-mail to multiple receipients via the mail queue
 </summary>
	<param name="RcptAddresses_To">The receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="RcptAddresses_CC">The copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="RcptAddresses_BCC">The blind copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="MsgSubject">A subject for the new e-mail</param>
	<param name="MsgTextBody">The message text as plain text</param>
	<param name="MsgHTMLBody">The message text as HTML code</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="replyToName">The name of the person who should receive the reply</param>
	<param name="replyToAddress">The e-mail address of the person who should receive the reply</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
	<seealso>CreateReceipientString</seealso>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.QueueEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,CompuMaster.camm.WebManager.WMSystem.EMailAttachement[],CompuMaster.camm.WebManager.WMSystem.MailImportance,CompuMaster.camm.WebManager.WMSystem.MailSensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.String,System.String@,System.Data.IDbConnection)">
	<summary>
     Sends an e-mail to multiple receipients via the mail queue
 </summary>
	<param name="RcptAddresses_To">The receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="RcptAddresses_CC">The copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="RcptAddresses_BCC">The blind copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="MsgSubject">A subject for the new e-mail</param>
	<param name="MsgTextBody">The message text as plain text</param>
	<param name="MsgHTMLBody">The message text as HTML code</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="Attachments">An array of optional attachments</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="RequestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="AdditionalHeaders">A collection of optinally additional e-mail headers</param>
	<param name="MsgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<param name="connection">An open connection to the camm Web-Manager database which shall be used</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
	<seealso>CreateReceipientString</seealso>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.QueueEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.WMSystem.MailImportance,CompuMaster.camm.WebManager.WMSystem.MailSensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.String,System.String@,System.Data.IDbConnection)">
	<summary>
     Sends an e-mail to multiple receipients via the mail queue
 </summary>
	<param name="RcptAddresses_To">The receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="RcptAddresses_CC">The copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="RcptAddresses_BCC">The blind copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="MsgSubject">A subject for the new e-mail</param>
	<param name="MsgTextBody">The message text as plain text</param>
	<param name="MsgHTMLBody">The message text as HTML code</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="Attachments">An array of optional attachments</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="RequestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="AdditionalHeaders">A collection of optinally additional e-mail headers</param>
	<param name="MsgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<param name="connection">An open connection to the camm Web-Manager database which shall be used</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
	<seealso>CreateReceipientString</seealso>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.QueueEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,CompuMaster.camm.WebManager.WMSystem.EMailAttachement[],CompuMaster.camm.WebManager.WMSystem.MailImportance,CompuMaster.camm.WebManager.WMSystem.MailSensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.String,System.String@,System.Data.IDbConnection)">
	<summary>
     Sends an e-mail to multiple receipients via the mail queue
 </summary>
	<param name="RcptAddresses_To">The receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="RcptAddresses_CC">The copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="RcptAddresses_BCC">The blind copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="MsgSubject">A subject for the new e-mail</param>
	<param name="MsgTextBody">The message text as plain text</param>
	<param name="MsgHTMLBody">The message text as HTML code</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="replyToName">The name of the person who should receive the reply</param>
	<param name="replyToAddress">The e-mail address of the person who should receive the reply</param>
	<param name="Attachments">An array of optional attachments</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="RequestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="AdditionalHeaders">A collection of optinally additional e-mail headers</param>
	<param name="MsgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<param name="connection">An open connection to the camm Web-Manager database which shall be used</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
	<seealso>CreateReceipientString</seealso>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.QueueEMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.WMSystem.MailImportance,CompuMaster.camm.WebManager.WMSystem.MailSensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.String,System.String@,System.Data.IDbConnection)">
	<summary>
     Sends an e-mail to multiple receipients via the mail queue
 </summary>
	<param name="RcptAddresses_To">The receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="RcptAddresses_CC">The copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="RcptAddresses_BCC">The blind copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="MsgSubject">A subject for the new e-mail</param>
	<param name="MsgTextBody">The message text as plain text</param>
	<param name="MsgHTMLBody">The message text as HTML code</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="replyToName">The name of the person who should receive the reply</param>
	<param name="replyToAddress">The e-mail address of the person who should receive the reply</param>
	<param name="Attachments">An array of optional attachments</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Ask for a confirmation notice for the successfull transmission</param>
	<param name="RequestReadingConfirmation">Ask for a confirmation notice when the message has been read by the receipient</param>
	<param name="AdditionalHeaders">A collection of optinally additional e-mail headers</param>
	<param name="MsgCharset">IF empty it's UTF-8, there shouldn't be a need for changing this</param>
	<param name="bufErrorDetails">A pointer to a variable where to write additional error details to</param>
	<param name="connection">An open connection to the camm Web-Manager database which shall be used</param>
	<returns>True if the transmission of the e-mail was successfull</returns>
	<remarks>
     A result of true means that there haven't been detected any errors while sending. But this doesn't mean that there are no errors while transmission (SMTP server can't route e-mails, receipient's address doesn't exist, etc.)
 </remarks>
	<seealso>CreateReceipientString</seealso>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.CreateReceipientString(System.String,System.String)">
	<summary>
     Create a valid receipient string for the address lists parameters of method SendEMail
 </summary>
	<param name="name">The name of the receipient</param>
	<param name="address">The e-mail address of the receipient</param>
	<remarks>
		<para>In case of an empty address, an empty string will be returned, too (no ArgumentNullException).</para>
		<para>RFC-821 standard describes as following:</para>
		<para>&lt;special&gt; ::= "&lt;" | "&gt;" | "(" | ")" | "[" | "]" | "\" | "."
	              | "," | ";" | ":" | "@"  """ | the control
	              characters (ASCII codes 0 through 31 inclusive And _
	              127)</para>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.CreateReceipientString(System.String)">
	<summary>
     Create a valid receipient string for the address lists parameters of method SendEMail
 </summary>
	<param name="address">The e-mail address of the receipient</param>
	<remarks>
		<para>In case of an empty address, an empty string will be returned, too (no ArgumentNullException).</para>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.SplitEMailAddressesFromReceipientsList(System.String)">
	<summary>
     Extract e-mail addresses from a receipients list constructed by method CreateReceipientString or manually
 </summary>
	<param name="receipientsCommaSeparated"></param>
	<remarks>
     Valid parameter values are e. g. 
 <list>
			<item>l?nc\,\.\:\;\@\[\]\(\)ma9\'\\\&lt;\&gt;kljkj &lt;compumaster@web.de&gt;, her\,ma9\'\\\&lt;\&gt;kljkj &lt;jwezel@compumaster.de&gt;</item>
			<item>&lt;compumaster@web.de&gt;,&lt;jwezel@compumaster.de&gt;</item>
			<item>compumaster@web.de,jwezel@compumaster.de</item>
		</list>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.SplitEMailAddressesIntoAddressParts(System.String)">
	<summary>
 Split an e-mail address in typical encoding for SMTP protocol into the two parts e-mail address and receipient name
 </summary>
	<param name="emailAddressInSmtpFormat"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.SplitEMailAddressesIntoEMailRecipientsFromReceipientsList(System.String)">
	<summary>
 Split an e-mail address list in typical encoding for SMTP protocol into the two parts e-mail address and receipient name
 </summary>
	<param name="emailAddressesInSmtpFormat"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.FixHtmlContentIDs(System.String@,CompuMaster.camm.WebManager.Messaging.EMailAttachment[]@)">
	<summary>
 Replace all Content-IDs by encoding-independent Content-IDs
 </summary>
	<param name="htmlBody">The e-mail HTML body</param>
	<param name="attachments">The attachments of the e-mail</param>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.BeginQueueTransaction">
	<summary>
     Start a transaction for queuing mails
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.CommitQueueTransaction">
	<summary>
     Commit all changes in the transaction
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.CommitQueueTransaction(System.Data.IDbConnection)">
	<summary>
     Commit all changes in the transaction
 </summary>
	<param name="connection">An open connection to the camm Web-Manager database</param>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.RollbackQueueTransaction">
	<summary>
     Roll back all changes in the transaction
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.RollbackQueueTransaction(System.Data.IDbConnection)">
	<summary>
     Roll back all changes in the transaction
 </summary>
	<param name="connection">An open connection to the camm Web-Manager database</param>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.QueueTransactionSqlRelatedIDs">
	<summary>
     Return a piece of sql code for accessing the related IDs to be used in commit or rollback commands
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.SendViaQueue(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Data.IDbConnection,System.String@,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.Messaging.EMails.Priority,CompuMaster.camm.WebManager.Messaging.EMails.Sensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Send an e-mail to the mail queue
 </summary>
	<param name="RcptName">Receipient's name</param>
	<param name="RcptAddress">Receipient's e-mail address</param>
	<param name="MsgSubject">Message subject</param>
	<param name="MsgTextBody">Message plain text body</param>
	<param name="MsgHTMLBody">Message html text body</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="MsgCharset">The charset of the message, default is UTF-8</param>
	<param name="connection">An open connection to the camm Web-Manager database which shall be used</param>
	<param name="bufErrorDetails">A reference to a string variable which shall contain error information when an exception gets fired</param>
	<param name="Attachments">Array of e-mail attachments</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Request a transmission confirmation</param>
	<param name="RequestReadingConfirmation">Request a reading confirmation</param>
	<param name="AdditionalHeaders">Additional headers for the e-mail</param>
	<returns>True if successfull, false for failures (also see bufErrorDetails)</returns>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.SendViaQueue(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Data.IDbConnection,System.String@,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.Messaging.EMails.Priority,CompuMaster.camm.WebManager.Messaging.EMails.Sensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Sends an e-mail to multiple receipients via the mail queue
 </summary>
	<param name="rcptAddresses_To">The receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="rcptAddresses_CC">The copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="rcptAddresses_BCC">The blind copy receipients comma-separated with format "Complete Name &lt;somebody@yourcompany.com&gt;" or only a simple e-mail address in the format "somebody@yourcompany.com"</param>
	<param name="MsgSubject">Message subject</param>
	<param name="msgTextBody">Message plain text body</param>
	<param name="msgHTMLBody">Message html text body</param>
	<param name="senderName">The name of the sender</param>
	<param name="senderAddress">The e-mail address of the sender</param>
	<param name="msgCharset">The charset of the message, default is UTF-8</param>
	<param name="connection">An open connection to the camm Web-Manager database which shall be used</param>
	<param name="bufErrorDetails">A reference to a string variable which shall contain error information when an exception gets fired</param>
	<param name="attachments">Array of e-mail attachments</param>
	<param name="priority">The priority of the e-mail</param>
	<param name="sensitivity">The sensitivity of the e-mail</param>
	<param name="requestTransmissionConfirmation">Request a transmission confirmation</param>
	<param name="requestReadingConfirmation">Request a reading confirmation</param>
	<param name="additionalHeaders">Additional headers for the e-mail</param>
	<returns>True if successfull, false for failures (also see bufErrorDetails)</returns>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.System_SendEMailEx_NetFramework2(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.Messaging.EMails.Priority,CompuMaster.camm.WebManager.Messaging.EMails.Sensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Send an e-mail via the default e-mail handler of the .NET Framework
 </summary>
	<param name="RcptName">Receipient's name</param>
	<param name="RcptAddress">Receipient's e-mail address</param>
	<param name="MsgSubject">Message subject</param>
	<param name="MsgTextBody">Message plain text body</param>
	<param name="MsgHTMLBody">Message html text body</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="MsgCharset">The charset of the message, default is UTF-8</param>
	<param name="bufErrorDetails">A reference to a string variable which shall contain error information when an exception gets fired</param>
	<param name="Attachments">Array of e-mail attachments</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Request a transmission confirmation</param>
	<param name="RequestReadingConfirmation">Request a reading confirmation</param>
	<param name="AdditionalHeaders">Additional headers for the e-mail</param>
	<returns>True if successfull, false for failures (also see bufErrorDetails)</returns>
	<remarks>
     Requires the existance of the CDO.Message object on MS platforms, otherwise this method will fail
     This component only allows to send the e-mail either in plain text or html code format
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.System_SendEMail_MultipleRcpts_NetFramework2(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.Messaging.EMails.Priority,CompuMaster.camm.WebManager.Messaging.EMails.Sensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Send an e-mail to multiple receipents via the default e-mail handler of the .NET Framework
 </summary>
	<param name="RcptAddresses_To">TO receipients</param>
	<param name="RcptAddresses_CC">CC receipients</param>
	<param name="RcptAddresses_BCC">BCC receipients</param>
	<param name="MsgSubject">Message subject</param>
	<param name="MsgTextBody">Message plain text body</param>
	<param name="MsgHTMLBody">Message html text body</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="MsgCharset">The charset of the message, default is UTF-8</param>
	<param name="bufErrorDetails">A reference to a string variable which shall contain error information when an exception gets fired</param>
	<param name="Attachments">Array of e-mail attachments</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Request a transmission confirmation</param>
	<param name="RequestReadingConfirmation">Request a reading confirmation</param>
	<param name="AdditionalHeaders">Additional headers for the e-mail</param>
	<returns>True if successfull, false for failures (also see bufErrorDetails)</returns>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.System_SendEMailEx_NetFramework(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.Messaging.EMails.Priority,CompuMaster.camm.WebManager.Messaging.EMails.Sensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Send an e-mail via the default e-mail handler of the .NET Framework
 </summary>
	<param name="RcptName">Receipient's name</param>
	<param name="RcptAddress">Receipient's e-mail address</param>
	<param name="MsgSubject">Message subject</param>
	<param name="MsgTextBody">Message plain text body</param>
	<param name="MsgHTMLBody">Message html text body</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="MsgCharset">The charset of the message, default is UTF-8</param>
	<param name="bufErrorDetails">A reference to a string variable which shall contain error information when an exception gets fired</param>
	<param name="Attachments">Array of e-mail attachments</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Request a transmission confirmation</param>
	<param name="RequestReadingConfirmation">Request a reading confirmation</param>
	<param name="AdditionalHeaders">Additional headers for the e-mail</param>
	<returns>True if successfull, false for failures (also see bufErrorDetails)</returns>
	<remarks>
     Requires the existance of the CDO.Message object on MS platforms, otherwise this method will fail
     This component only allows to send the e-mail either in plain text or html code format
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.System_SendEMail_MultipleRcpts_NetFramework(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.Messaging.EMails.Priority,CompuMaster.camm.WebManager.Messaging.EMails.Sensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Send an e-mail to multiple receipents via the default e-mail handler of the .NET Framework
 </summary>
	<param name="RcptAddresses_To">TO receipients</param>
	<param name="RcptAddresses_CC">CC receipients</param>
	<param name="RcptAddresses_BCC">BCC receipients</param>
	<param name="MsgSubject">Message subject</param>
	<param name="MsgTextBody">Message plain text body</param>
	<param name="MsgHTMLBody">Message html text body</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="MsgCharset">The charset of the message, default is UTF-8</param>
	<param name="bufErrorDetails">A reference to a string variable which shall contain error information when an exception gets fired</param>
	<param name="Attachments">Array of e-mail attachments</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Request a transmission confirmation</param>
	<param name="RequestReadingConfirmation">Request a reading confirmation</param>
	<param name="AdditionalHeaders">Additional headers for the e-mail</param>
	<returns>True if successfull, false for failures (also see bufErrorDetails)</returns>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.System_SendEMailEx_NetFramework1(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.Messaging.EMails.Priority,CompuMaster.camm.WebManager.Messaging.EMails.Sensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Send an e-mail via the default e-mail handler of the .NET Framework
 </summary>
	<param name="RcptName">Receipient's name</param>
	<param name="RcptAddress">Receipient's e-mail address</param>
	<param name="MsgSubject">Message subject</param>
	<param name="MsgTextBody">Message plain text body</param>
	<param name="MsgHTMLBody">Message html text body</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="MsgCharset">The charset of the message, default is UTF-8</param>
	<param name="bufErrorDetails">A reference to a string variable which shall contain error information when an exception gets fired</param>
	<param name="Attachments">Array of e-mail attachments</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Request a transmission confirmation</param>
	<param name="RequestReadingConfirmation">Request a reading confirmation</param>
	<param name="AdditionalHeaders">Additional headers for the e-mail</param>
	<returns>True if successfull, false for failures (also see bufErrorDetails)</returns>
	<remarks>
     Requires the existance of the CDO.Message object on MS platforms, otherwise this method will fail
     This component only allows to send the e-mail either in plain text or html code format
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Messaging.EMails.System_SendEMail_MultipleRcpts_NetFramework1(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,CompuMaster.camm.WebManager.Messaging.EMailAttachment[],CompuMaster.camm.WebManager.Messaging.EMails.Priority,CompuMaster.camm.WebManager.Messaging.EMails.Sensitivity,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Send an e-mail to multiple receipents via the default e-mail handler of the .NET Framework
 </summary>
	<param name="RcptAddresses_To">TO receipients</param>
	<param name="RcptAddresses_CC">CC receipients</param>
	<param name="RcptAddresses_BCC">BCC receipients</param>
	<param name="MsgSubject">Message subject</param>
	<param name="MsgTextBody">Message plain text body</param>
	<param name="MsgHTMLBody">Message html text body</param>
	<param name="SenderName">The name of the sender</param>
	<param name="SenderAddress">The e-mail address of the sender</param>
	<param name="MsgCharset">The charset of the message, default is UTF-8</param>
	<param name="bufErrorDetails">A reference to a string variable which shall contain error information when an exception gets fired</param>
	<param name="Attachments">Array of e-mail attachments</param>
	<param name="Priority">The priority of the e-mail</param>
	<param name="Sensitivity">The sensitivity of the e-mail</param>
	<param name="RequestTransmissionConfirmation">Request a transmission confirmation</param>
	<param name="RequestReadingConfirmation">Request a reading confirmation</param>
	<param name="AdditionalHeaders">Additional headers for the e-mail</param>
	<returns>True if successfull, false for failures (also see bufErrorDetails)</returns>
</member><member name="T:CompuMaster.camm.WebManager.Messaging.EMails">
	<summary>
     Mail delivery methods
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Messaging.EMailAttachment.RawData">
	<summary>
     Binary data for this attachment
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Messaging.EMailAttachment.RawDataFilename">
	<summary>
     The filename for the binary data
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Messaging.EMailAttachment.FilePath">
	<summary>
     A path to a file which shall be included
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Messaging.EMailAttachment.PlaceholderInMhtmlToBeReplacedByContentID">
	<summary>
     A placeholder string (without prefix "cid:") in the HTML code of the message (there it must be with prefix "cid:") which shall be replaced by the CID code of the attachment
 </summary>
	<remarks>
		<para>Define the placeholder which shall be replaced by the Content-ID for the contents of a file to the email. Emails formatted in HTML can include images with this information and internally reference the image through a "cid" hyperlink.</para>
	</remarks>
</member><member name="T:CompuMaster.camm.WebManager.Messaging.EMailAttachment">
	<summary>
     An e-mail attachment
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Application.BaseErrorPage.LastException">
	<summary>
     The last exception which leaded to this error page
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Application.BaseErrorPage.LastExceptionGuid">
	<summary>
     The last exception Guid/Token which leaded to this error page
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Application.BaseErrorPage.OptionalErrorCode">
	<summary>
     An optional error code which can contain a more safe exception message
 </summary>
	<value></value>
	<remarks>
     This should be the preferred message string for the user since the regular message string might contain sensitive data
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Application.BaseErrorPage.OnError(System.EventArgs)">
	<summary>
     Log the error of this page only, but don't redirect to an error page as the default error handler does
 </summary>
	<param name="e"></param>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Application.BaseErrorPage">
	<summary>
     The common error page when an exception raises and doesn't get handled otherwise
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Application.BaseWarningPage.LastWarning">
	<summary>
     The last warning which leaded to this warning page
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Pages.Application.BaseWarningPage.LastWarningGuid">
	<summary>
     The last exception Guid/Token which leaded to this error page
 </summary>
	<value></value>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Application.BaseWarningPage">
	<summary>
     The common error page when an exception raises and doesn't get handled otherwise
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Application.ErrorPage.PageOnLoad(System.Object,System.EventArgs)">
	<summary>
     Retrieve the exception information and return them with the correct HTTP return code
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="M:CompuMaster.camm.WebManager.Pages.Application.ErrorPage.TrySkipIisCustomErrors">
	<summary>
 Prevent IIS taking over the error page output
 </summary>
	<remarks>IIS 7 automatically takes over with its own error page as soon as http status code is 500. Property TrySkipIisCustomErrors is available starting with .NET 2.0 SP1</remarks>
</member><member name="T:CompuMaster.camm.WebManager.Pages.Application.ErrorPage">
	<summary>
     The error page which displays a notification to the user
 </summary>
	<remarks>
     This is the page class which should be the base for all customizations.
     Please note: all links and resources in the HTML code of this page must be absolute and start with "/". This is since the rendered HTML code will be displayed in the folders of the scripts where the errors occured.
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Application.InternalBaseHttpApplication.cammWebManager">
	<summary>
     The current instance of camm Web-Manager
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.Application.InternalBaseHttpApplication.OnWebManagerJustInTimeCreation">
	<summary>
     Create a camm Web-Manager instance on the fly
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Application.InternalBaseHttpApplication.Init">
	<summary>
     Initialize the camm Web-Manager and all related components
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Application.InternalBaseHttpApplication.ReportRequiredComponentsFailures(System.Data.DataTable)">
	<summary>
 Report warnings based on failing components
 </summary>
	<param name="data">A data table with details on found/failing components</param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Application.BaseHttpApplication.CatchAndDistributeLastError(System.Boolean)">
	<summary>
     Catch the last exception and log it respectively create a notification for the technicians
 </summary>
	<param name="reportException">True reports the exception, false doesn't (for SPAM reasons)</param>
	<returns>The last exception</returns>
</member><member name="M:CompuMaster.camm.WebManager.Application.BaseHttpApplication.CatchAndDistributeLastErrorDetails(System.Boolean)">
	<summary>
     Catch the last exception and log it respectively create a notification for the technicians
 </summary>
	<param name="reportException">True reports the exception, false doesn't (for SPAM reasons)</param>
	<returns>The last exception</returns>
</member><member name="M:CompuMaster.camm.WebManager.Application.BaseHttpApplication.ReportRequiredComponentsFailures(System.Data.DataTable)">
	<summary>
 Report warnings based on failing components
 </summary>
	<param name="data">A data table with details on found/failing components</param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Application.BaseHttpApplication.ConvertErrorCollectionToString(System.CodeDom.Compiler.CompilerErrorCollection)">
	<summary>
     Convert a compiler error collection into a simple text string
 </summary>
	<param name="errorCollection"></param>
</member><member name="M:CompuMaster.camm.WebManager.Application.BaseHttpApplication.OnApplication_Error(System.Object,System.EventArgs)">
	<summary>
     Handle all occurances of exceptions
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="P:CompuMaster.camm.WebManager.Application.BaseHttpApplication.ErrorCode">
	<summary>
     The short HTTP error code text, e. g. "404 File not found"
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Application.BaseHttpApplication.BuildPlainMessage(System.String,System.String,System.String)">
	<summary>
     Prepare the message text for the exception in plain text format
 </summary>
	<param name="exceptionDetails"></param>
	<param name="exceptionIdentifier"></param>
</member><member name="M:CompuMaster.camm.WebManager.Application.BaseHttpApplication.BuildHtmlMessage(System.String,System.String,System.String)">
	<summary>
     Prepare the message text for the exception in HTML output format
 </summary>
	<param name="exceptionDetailsAsHtml">Details on the exception in valid HTML code (and without body or script tags or similar)</param>
	<param name="exceptionIdentifier"></param>
</member><member name="M:CompuMaster.camm.WebManager.Application.BaseHttpApplication.Dispose">
	<summary>
     Do some cleanup work
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Application.HttpApplication.CatchAndDistributeLastErrorDetails(System.Boolean)">
	<summary>
     Catch the last exception and log it respectively create a notification for the technicians
 </summary>
	<param name="reportException">True reports the exception, false doesn't (for SPAM reasons)</param>
	<returns>The last exception</returns>
</member><member name="T:CompuMaster.camm.WebManager.Application.HttpApplication">
	<summary>
     An HttpApplication handler of camm Web-Manager for the handling of thrown exceptions
 </summary>
	<remarks>
     To use the camm Web-Manager in the application context, you should have configured the most important things in your web.config - even if you have configured all settings in your /sysdata/config.vb file.
     camm Web-Manager will take all settings from the web.config file of your web application. The required ones or the important ones for this HttpApplication class are:
     <list>
			<item>WebManager.ConnectionString</item>
			<item>WebManager.SMTPServerName</item>
			<item>WebManager.StandardEMailAccountAddress</item>
			<item>WebManager.DevelopmentEMailAccountAddress</item>
			<item>WebManager.TechnicalServiceEMailAccountName</item>
			<item>WebManager.TechnicalServiceEMailAccountAddress</item>
			<item>WebManager.NotifyOnApplicationExceptions (only if you want to change the default)</item>
		</list>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Application.ExceptionLogIntoWindowsEventLog.CatchAndDistributeLastErrorDetails(System.Boolean)">
	<summary>
     Catch the last exception and log it respectively send a notification e-mail
 </summary>
	<returns>The last exception</returns>
</member><member name="T:CompuMaster.camm.WebManager.Application.ExceptionLogIntoWindowsEventLog">
	<summary>
     An HttpApplication handler of camm Web-Manager for the handling of thrown exceptions and logging them into the windows event log
 </summary>
	<remarks>
     To use the camm Web-Manager in the application context, you should have configured the most important things in your web.config - even if you have configured all settings in your /sysdata/config.vb file.
     camm Web-Manager will take all settings from the web.config file of your web application. The required ones or the important ones for this HttpApplication class are:
     <list>
			<item>WebManager.NotifyOnApplicationExceptions (only if you want to change the default)</item>
		</list>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Application.SingleSignOnViaWindowsAuthentification.Global_EndRequest(System.Object,System.EventArgs)">
	<summary>
     Catch the 401 errors which can't be catched by web.config or Application_Error
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>
     Redirect to the error page for status code 401
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.TestLayer">
	<summary>
     Required for NUnit tests only to make requried methods accessable
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.DataLayerSqlClient.AddUserAuthorization(CompuMaster.camm.WebManager.WMSystem,System.Data.IDbConnection,System.Int32,System.Int32,CompuMaster.camm.WebManager.WMSystem.UserInformation,System.Int64,System.Boolean,System.Boolean,System.Int64,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
 Add an authorization to a security object (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectID">The security object ID</param>
	<param name="serverGroupID">The authorization will be related only for the given server group ID, otherwise use 0 (zero value) for assigning authorization to all server groups</param>
	<param name="developerAuthorization">The developer authorization allows a user to see/access applications with this security objects even if it is currently disabled</param>
	<param name="isDenyRule">True for a deny rule or False for a grant access rule</param>
	<param name="notifications">A notification class which contains the e-mail templates which might be sent</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.DataLayerSqlClient.SetUserDetail(CompuMaster.camm.WebManager.IWebManager,System.Data.IDbConnection,System.Int64,System.String,System.String,System.Boolean)">
	<summary>
     Set a user profile setting
 </summary>
	<param name="webManager">A valid instance of camm Web-Manager</param>
	<param name="dbConnection">An open connection which shall be used or nothing if a new one shall be created independently and on the fly</param>
	<param name="userID">The ID of the user who shall receive the updated value</param>
	<param name="propertyName">The key name of the flag</param>
	<param name="value">The new value of the flag</param>
	<param name="doNotLogSuccess">False will lead to an informational log entry in the database after the value has been saved; in case of True there won't be created a log entry</param>
</member><member name="M:CompuMaster.camm.WebManager.DataLayerSqlClient.GetUserDetail(CompuMaster.camm.WebManager.IWebManager,System.Int64,System.String)">
	<summary>
     Reads a single user detail value from the database
 </summary>
	<param name="webManager">A reference to a camm Web-Manager instance</param>
	<param name="userID">The user ID</param>
	<param name="propertyName">The requested property name</param>
	<returns>The resulting value as a String</returns>
</member><member name="M:CompuMaster.camm.WebManager.DataLayerSqlClient.GetUserLogonServers(CompuMaster.camm.WebManager.IWebManager,System.Int64)">
	<summary>
     Get a string with all logon servers for a user 
 </summary>
	<param name="webManager">An instance of camm Web-Manager</param>
	<param name="userID">A user ID</param>
	<returns>A string with all relative server groups; every server group is placed in a new line.</returns>
	<remarks>
     If there is only 1 server group available, the returned string contains only the simply URL of the master server of this server group.
     Are there 2 or more server groups available then each URL of the corresponding master server is followed by the server group title in parenthesis.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DataLayerSqlClient.ListOfUsersByAdditionalFlag(System.String,CompuMaster.camm.WebManager.IWebManager)">
	<summary>
 Get a list of all userIDs by additional flag
 </summary>
	<param name="flagName"></param>
	<param name="webmanager"></param>
	<returns>All userIDs by additional flag</returns>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.DataLayerSqlClient.ListOfAdditionalFlagsInUseByUserProfiles(CompuMaster.camm.WebManager.IWebManager)">
	<summary>
 Get the list of additional flags which are in use by at least one user profile
 </summary>
	<param name="webmanager">An instance of camm Web-Manager</param>
	<returns>All flag names which are used in the user profiles</returns>
	<history>
 	[wezel]	07.05.2008	Created
     [zeutzheim] 03.07.2009 Modified
 </history>
</member><member name="M:CompuMaster.camm.WebManager.DataLayerSqlClient.ListOfAdditionalFlagsInUseByUserProfilesWithCount(CompuMaster.camm.WebManager.IWebManager)">
	<summary>
 Get the list of additional flags which are in use by at least one user profile
 </summary>
	<param name="webmanager">An instance of camm Web-Manager</param>
	<returns>A hashlist with the flag name as key and the count of occurances as the value</returns>
	<history>
 	[wezel]	07.05.2008	Created
     [zeutzheim] 03.07.2009 Modified
 </history>
</member><member name="M:CompuMaster.camm.WebManager.DataLayerSqlClient.ListOfAdditionalFlagsRequiredBySecurityObjects(CompuMaster.camm.WebManager.IWebManager)">
	<summary>
 Get the list of additional flags which are required by the security objects
 </summary>
	<param name="webmanager">An instance of camm Web-Manager</param>
	<history>
 	[wezel]	    07.05.2008	Created
     [zeutzheim] 02.07.2009 Modified
     [zeutzheim] 09.07.2009 Modified
 </history>
</member><member name="M:CompuMaster.camm.WebManager.DataLayerSqlClient.ListOfAdditionalFlagsInUseByUserProfilesNotRequiredBySecurityObjects(CompuMaster.camm.WebManager.IWebManager)">
	<summary>
 Get the list of additional flags which are not required by the security objects
 </summary>
	<param name="webmanager"></param>
</member><member name="M:CompuMaster.camm.WebManager.DataLayerSqlClient.CopyAuthorizations(CompuMaster.camm.WebManager.IWebManager,System.Int32,System.Int32)">
	<summary>
 Copy authorizations from one security object to another one (without creating duplicates if they already exist)
 </summary>
	<param name="webmanager">A valid web-manager instance</param>
	<param name="sourceSecurityObjectID">The security object ID which shall be the source</param>
	<param name="destinationSecurityObjectID">The ID of the security ojbect which shall receive the additional authorizations</param>
	<remarks>
 Only missing authorizations will be copied to the destination security object.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.DataLayerSqlClient.AddMissingExternalAccountAssignment(CompuMaster.camm.WebManager.IWebManager,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 Create an appropriate log entry for an external, not-yet-assigned user account
 </summary>
	<param name="webmanager">An instance of camm Web-Manager</param>
	<param name="externalAccountSystemName">The name of an external account system, e. g. "MS ADS"</param>
	<param name="fullUserLogonName">The full logon name, e. g. "YOUR-COMPANY\billwilson"</param>
	<param name="fullUserName">The complete name of the user, e. g. "Dr. Bill Wilson"</param>
</member><member name="M:CompuMaster.camm.WebManager.DataLayerSqlClient.RemoveMissingExternalAccountAssignment(CompuMaster.camm.WebManager.IWebManager,System.String,System.String)">
	<summary>
 Remove an existing log entry of an external account which is successfully assigned, now
 </summary>
	<param name="webmanager">An instance of camm Web-Manager</param>
	<param name="externalAccountSystemName">The name of an external account system, e. g. "MS ADS"</param>
	<param name="fullUserLogonName">The full logon name, e. g. "YOUR-COMPANY\billwilson"</param>
</member><member name="M:CompuMaster.camm.WebManager.DataLayerSqlClient.ActiveUsers(CompuMaster.camm.WebManager.IWebManager)">
	<summary>
 Query a list of existing user IDs
 </summary>
	<param name="webmanager">An instance of camm Web-Manager</param>
</member><member name="M:CompuMaster.camm.WebManager.DataLayerSqlClient.ActiveAndDeletedUsers(CompuMaster.camm.WebManager.IWebManager)">
	<summary>
 Query a list of user IDs from existing plus deleted users
 </summary>
	<param name="webmanager">An instance of camm Web-Manager</param>
	<returns>A hashtable containing the user ID as key field (Int64) and the status "Deleted" as a boolean value in the hashtable's value field (true indicates a deleted user)</returns>
</member><member name="T:CompuMaster.camm.WebManager.DataLayerSqlClient">
	<summary>
 A database layer for MS SQL Server
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.IDataLayer.AddUserAuthorization(CompuMaster.camm.WebManager.WMSystem,System.Data.IDbConnection,System.Int32,System.Int32,CompuMaster.camm.WebManager.WMSystem.UserInformation,System.Int64,System.Boolean,System.Boolean,System.Int64,CompuMaster.camm.WebManager.Notifications.INotifications)">
	<summary>
 Add an authorization to a security object (doesn't require saving, action is performed immediately on database)
 </summary>
	<param name="securityObjectID">The security object ID</param>
	<param name="serverGroupID">The authorization will be related only for the given server group ID, otherwise use 0 (zero value) for assigning authorization to all server groups</param>
	<param name="developerAuthorization">The developer authorization allows a user to see/access applications with this security objects even if it is currently disabled</param>
	<param name="isDenyRule">True for a deny rule or False for a grant access rule</param>
	<param name="notifications">A notification class which contains the e-mail templates which might be sent</param>
	<remarks>This action will be done immediately without the need for saving</remarks>
</member><member name="M:CompuMaster.camm.WebManager.IDataLayer.SetUserDetail(CompuMaster.camm.WebManager.IWebManager,System.Data.IDbConnection,System.Int64,System.String,System.String,System.Boolean)">
	<summary>
     Set a user profile setting
 </summary>
	<param name="webManager">A valid instance of camm Web-Manager</param>
	<param name="dbConnection">An open connection which shall be used or nothing if a new one shall be created independently and on the fly</param>
	<param name="userID">The ID of the user who shall receive the updated value</param>
	<param name="propertyName">The key name of the flag</param>
	<param name="value">The new value of the flag</param>
	<param name="doNotLogSuccess">False will lead to an informational log entry in the database after the value has been saved; in case of True there won't be created a log entry</param>
</member><member name="M:CompuMaster.camm.WebManager.IDataLayer.GetUserDetail(CompuMaster.camm.WebManager.IWebManager,System.Int64,System.String)">
	<summary>
     Reads a single user detail value from the database
 </summary>
	<param name="webManager">A reference to a camm Web-Manager instance</param>
	<param name="userID">The user ID</param>
	<param name="propertyName">The requested property name</param>
	<returns>The resulting value as a String</returns>
</member><member name="M:CompuMaster.camm.WebManager.IDataLayer.GetUserLogonServers(CompuMaster.camm.WebManager.IWebManager,System.Int64)">
	<summary>
     Get a string with all logon servers for a user 
 </summary>
	<param name="webManager">An instance of camm Web-Manager</param>
	<param name="userID">A user ID</param>
	<returns>A string with all relative server groups; every server group is placed in a new line.</returns>
	<remarks>
     If there is only 1 server group available, the returned string contains only the simply URL of the master server of this server group.
     Are there 2 or more server groups available then each URL of the corresponding master server is followed by the server group title in parenthesis.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.IDataLayer.ListOfUsersByAdditionalFlag(System.String,CompuMaster.camm.WebManager.IWebManager)">
	<summary>
 Get a list of all userIDs by additional flag
 </summary>
	<param name="FlagName"></param>
	<param name="webmanager"></param>
	<returns>All userIDs by additional flag</returns>
</member><member name="M:CompuMaster.camm.WebManager.IDataLayer.ListOfAdditionalFlagsInUseByUserProfiles(CompuMaster.camm.WebManager.IWebManager)">
	<summary>
 Get the list of additional flags which are in use by at least one user profile
 </summary>
	<param name="webmanager">An instance of camm Web-Manager</param>
	<returns>All flag names which are used in the user profiles</returns>
</member><member name="M:CompuMaster.camm.WebManager.IDataLayer.ListOfAdditionalFlagsInUseByUserProfilesWithCount(CompuMaster.camm.WebManager.IWebManager)">
	<summary>
 Get the list of additional flags which are in use by at least one user profile
 </summary>
	<param name="webmanager">An instance of camm Web-Manager</param>
	<returns>A hashlist with the flag name as key and the count of occurances as the value</returns>
</member><member name="M:CompuMaster.camm.WebManager.IDataLayer.ListOfAddtionalFlagsRequiredBySecurityObjects(CompuMaster.camm.WebManager.IWebManager)">
	<summary>
 Get the list of additional flags which are required by the security objects
 </summary>
	<param name="webmanager">An instance of camm Web-Manager</param>
</member><member name="M:CompuMaster.camm.WebManager.IDataLayer.ListOfAdditionalFlagsInUseByUserProfilesNotRequiredBySecurityObjects(CompuMaster.camm.WebManager.IWebManager)">
	<summary>
 Get the list of additional flags which are not required by the security objects
 </summary>
	<param name="webmanager"></param>
</member><member name="M:CompuMaster.camm.WebManager.IDataLayer.CopyAuthorizations(CompuMaster.camm.WebManager.IWebManager,System.Int32,System.Int32)">
	<summary>
 Copy authorizations from one security object to another one (without creating duplicates if they already exist)
 </summary>
	<param name="webmanager">A valid web-manager instance</param>
	<param name="sourceSecurityObjectID">The security object ID which shall be the source</param>
	<param name="destinationSecurityObjectID">The ID of the security ojbect which shall receive the additional authorizations</param>
	<remarks>
 Only missing authorizations will be copied to the destination security object.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.IDataLayer.AddMissingExternalAccountAssignment(CompuMaster.camm.WebManager.IWebManager,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 Create an appropriate log entry for an external, not-yet-assigned user account
 </summary>
	<param name="webmanager">An instance of camm Web-Manager</param>
	<param name="externalAccountSystemName">The name of an external account system, e. g. "MS ADS"</param>
	<param name="fullUserLogonName">The full logon name, e. g. "YOUR-COMPANY\billwilson"</param>
	<param name="fullUserName">The complete name of the user, e. g. "Dr. Bill Wilson"</param>
</member><member name="M:CompuMaster.camm.WebManager.IDataLayer.RemoveMissingExternalAccountAssignment(CompuMaster.camm.WebManager.IWebManager,System.String,System.String)">
	<summary>
 Remove an existing log entry of an external account which is successfully assigned, now
 </summary>
	<param name="webmanager">An instance of camm Web-Manager</param>
	<param name="externalAccountSystemName">The name of an external account system, e. g. "MS ADS"</param>
	<param name="fullUserLogonName">The full logon name, e. g. "YOUR-COMPANY\billwilson"</param>
</member><member name="M:CompuMaster.camm.WebManager.IDataLayer.ActiveUsers(CompuMaster.camm.WebManager.IWebManager)">
	<summary>
 Query a list of existing user IDs
 </summary>
	<param name="webmanager">An instance of camm Web-Manager</param>
</member><member name="M:CompuMaster.camm.WebManager.IDataLayer.ActiveAndDeletedUsers(CompuMaster.camm.WebManager.IWebManager)">
	<summary>
 Query a list of user IDs from existing plus deleted users
 </summary>
	<param name="webmanager">An instance of camm Web-Manager</param>
	<returns>A hashtable containing the user ID as key field (Int64) and the status "Deleted" as a boolean value in the hashtable's value field (true indicates a deleted user)</returns>
</member><member name="P:CompuMaster.camm.WebManager.DataLayer.Current">
	<summary>
 The data layer which contains all sql commands which shall run against the required database engine
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.DataLayer">
	<summary>
 Provides access to the configured database layer (e. g. for MS SQL Server)
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.InformationClassTools.IsValidContentOfUniqueFields(CompuMaster.camm.WebManager.IUserInformation)">
	<summary>
     Are there no invalid entries because of the content in the unique fields?
 </summary>
	<param name="userInfo">A user information object</param>
	<returns>True if no conflicts, otherwise false</returns>
</member><member name="M:CompuMaster.camm.WebManager.InformationClassTools.ExistingUsersConflictingWithContentOfUniqueFields(CompuMaster.camm.WebManager.IUserInformation)">
	<summary>
 Which users are already present using the values of unique fields of the given userInfo 
 </summary>
	<param name="userInfo">A user information object with values in unique fields which shall be evaluated</param>
	<returns>A list of existing user IDs conflicting with the given values as unique keys</returns>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Controls.WebControls.Literal.LookupParentServerForm">
	<summary>
     Search for the server form in the list of parent controls
 </summary>
	<returns>The control of the server form if it's existant</returns>
</member><member name="T:CompuMaster.camm.WebManager.Controls.WebControls.Literal">
	<summary>
     A System.Web.UI.WebControls.Literal with a property to access the camm WebManager
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Controls.WebControls.ImageButton.LookupParentServerForm">
	<summary>
     Search for the server form in the list of parent controls
 </summary>
	<returns>The control of the server form if it's existant</returns>
</member><member name="M:CompuMaster.camm.WebManager.Controls.WebControls.Image.LookupParentServerForm">
	<summary>
     Search for the server form in the list of parent controls
 </summary>
	<returns>The control of the server form if it's existant</returns>
</member><member name="P:CompuMaster.camm.WebManager.Controls.WebControls.ConditionalContent.SecurityObject">
	<summary>
 A security object for the positive default rule to switch the content of this control to visible mode if the current user has got access to the specified security object
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Controls.WebControls.ConditionalContent.NotSecurityObject">
	<summary>
 A security object for the negative default rule to switch the content of this control to visible mode if the current user has NOT got access to the specified security object
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Controls.WebControls.ConditionalContent.AlwaysVisibleSecurityObject">
	<summary>
 A security object which is allowed to see the content regardless of the default rules (e.g. always visible for website editors)
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Controls.WebControls.ConditionalContent">
	<summary>
 Show content based on existing or missing user authorizations
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Controls.WebControl.LookupParentServerForm">
	<summary>
     Search for the server form in the list of parent controls
 </summary>
	<returns>The control of the server form if it's existant</returns>
</member><member name="T:CompuMaster.camm.WebManager.Controls.WebControl">
	<summary>
     A System.Web.UI.WebControls.WebControl with a property to access the camm WebManager
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Controls.BaseControl">
	<summary>
     A System.Web.UI.UserControl with a property to access the camm WebManager
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Controls.UserControl.LookupParentServerForm">
	<summary>
     Search for the server form in the list of parent controls
 </summary>
	<returns>The control of the server form if it's existant</returns>
</member><member name="T:CompuMaster.camm.WebManager.Controls.UserControl">
	<summary>
     A System.Web.UI.UserControl with a property to access the camm WebManager
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Controls.TemplateControl.LookupParentServerForm">
	<summary>
     Search for the server form in the list of parent controls
 </summary>
	<returns>The control of the server form if it's existant</returns>
</member><member name="T:CompuMaster.camm.WebManager.Controls.TemplateControl">
	<summary>
     A System.Web.UI.TemplateControl with a property to access the camm WebManager
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Controls.LiteralControl.LookupParentServerForm">
	<summary>
     Search for the server form in the list of parent controls
 </summary>
	<returns>The control of the server form if it's existant</returns>
</member><member name="T:CompuMaster.camm.WebManager.Controls.LiteralControl">
	<summary>
     A System.Web.UI.LiteralControl with a property to access the camm WebManager
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Controls.IControl">
	<summary>
     An interface for all controls which are implementing the cammWebManager property
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Controls.HtmlContainerControl.LookupParentServerForm">
	<summary>
     Search for the server form in the list of parent controls
 </summary>
	<returns>The control of the server form if it's existant</returns>
</member><member name="T:CompuMaster.camm.WebManager.Controls.HtmlContainerControl">
	<summary>
     A System.Web.UI.HtmlControl.HtmlContainerControl with a property to access the camm WebManager
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Controls.Control.LookupParentServerForm">
	<summary>
     Search for the server form in the list of parent controls
 </summary>
	<returns>The control of the server form if it's existant</returns>
</member><member name="T:CompuMaster.camm.WebManager.Controls.Control">
	<summary>
     A System.Web.UI.Control with a property to access the camm WebManager
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Controls.cammWebManagerJIT._LoadConfiguration">
	<summary>
     Load configuration (for internal purposes only)
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Controls.cammWebManagerJIT.LoadConfiguration">
	<summary>
     Do not load any configuration data
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Controls.cammWebManagerJIT">
	<summary>
     A cammWebManager class which can be used to create a webmanager just on the fly
 </summary>
	<remarks>
     No configuration information or localization data will be applied automatically.
     This is only intended to be used 
     <list>
			<item>by the HttpApplication to access an unconfigured but running instance of camm Web-Manager</item>
			<item>by the page's JIT creator when it is allowed (attention: only default values - no customization is available!)</item>
		</list>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Controls.cammWebManager.#ctor">
	<summary>
     Creates a new instance of the camm Web-Manager
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Controls.cammWebManager.#ctor(System.String)">
	<summary>
     Creates a new instance of the camm Web-Manager
 </summary>
	<param name="databaseConnectionString">The connection string to the database</param>
</member><member name="M:CompuMaster.camm.WebManager.Controls.cammWebManager.GetField(System.Object,System.String,System.Object)">
	<summary>
     Return the value of the public field with the specified name, defined inside the obj object
 </summary>
	<param name="obj">An object which shall be analyzed for existing children objects</param>
	<param name="fieldName">The name (case in-sensitive) of the searched field or property</param>
	<param name="defaultValue">The return value if the field can't be found</param>
	<returns>The object/value of the found child</returns>
	<remarks>
     This method enumerates 1st the fields and 2nd the properties for a searched object
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Controls.cammWebManager._LoadConfiguration">
	<summary>
     Load configuration (for internal purposes only)
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Controls.cammWebManager.LoadConfiguration">
	<summary>
     Load the configuration, mostly in /sysdata/config.vb
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Controls.cammWebManager._LoadLanguageData(System.Int32)">
	<summary>
     Load customized language/market strings (for internal purposes only)
 </summary>
	<param name="LanguageID">The market which shall be used</param>
</member><member name="M:CompuMaster.camm.WebManager.Controls.cammWebManager.LoadLanguageData(System.Int32)">
	<summary>
     Load customized language/market strings
 </summary>
	<param name="LanguageID">The market which shall be used</param>
</member><member name="M:CompuMaster.camm.WebManager.Controls.cammWebManager.System_Init">
	<summary>
     Initializes the webmanager inclusive loading of configuration and customized strings for the markets
 </summary>
</member><member name="E:CompuMaster.camm.WebManager.Controls.cammWebManager.InitializedWebManager">
	<summary>
     Fires when the camm Web-Manager has been initialized
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Controls.cammWebManager.OnLoad(System.EventArgs)">
	<summary>
     This OnLoad method executes an automatic databinding if not disabled
 </summary>
	<param name="e"></param>
</member><member name="P:CompuMaster.camm.WebManager.Controls.cammWebManager.DataBindAutomaticallyWhilePageOnLoad">
	<summary>
     Automatically bind data to bind cammWebManager instances to sub controls 
 </summary>
	<value></value>
</member><member name="M:CompuMaster.camm.WebManager.Controls.cammWebManager.cammWebManager_PreRender(System.Object,System.EventArgs)">
	<summary>
     Some debug output for trace
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.ConnectionString">
	<summary>
     The connection string to connect to the camm Web-Manager database
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.SecurityObject">
	<summary>
     The SecurityObject which must be authorized for the current user
 </summary>
	<remarks>
     You can configure this value in your web.config to ensure that e. g. a whole directory structure uses this value and is protected by this way
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.CurrentServerIdentification">
	<summary>
     The configured server identification string
 </summary>
	<value>If nothing has been defined in the web.config/app.config, it returns "1st server"</value>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.WebServiceCurrentServerIdentification">
	<summary>
     The configured server identification string
 </summary>
	<value>If nothing has been defined in the web.config/app.config, it returns "1st server"</value>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.SingleSignOnDefaultEMailAddress">
	<summary>
     In case there is no e-mail address data in the external account system, this default will be used
 </summary>
	<value>If nothing has been defined in the web.config/app.config, it doesn't return any value</value>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.ApplicationIgnoreSecurityExceptionsForLoadingAssemblies">
	<summary>
 In case of any load errors of assemblies into the application because of security exceptions with component names in this comma-separated setting, consider those components as critical warning but not as errors
 </summary>
	<value></value>
	<returns>A comma-separated list of component names</returns>
	<remarks>The problem of SecurityExceptions while loading assemblies often happens when the camm Web-Manager application starts, a check will try to detect if there are all required components available. If errors are found, the technical contact will receive a notification e-mail on every application start with a report of the related components. The e-mail will be send only if there are errors reported; critical warnings for example won't lead to a notification e-mail.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.ApplicationIgnoreAllExceptionsForLoadingAssemblies">
	<summary>
 In case of any load errors of assemblies into the application because of any exceptions with component names in this comma-separated setting, consider those components as critical warning but not as errors
 </summary>
	<value></value>
	<returns>A comma-separated list of component names</returns>
	<remarks>Ignoring all load exceptions makes sense sometimes when an application must replace a component by another version, or the assembly shall not be distributed, or other reasons.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.SingleSignOnSuppressUserNotification">
	<summary>
     Shall the user receive a notification e-mail if the user account has been created by the single-sign-on process?
 </summary>
	<value>If nothing has been defined in the web.config/app.config, it defaults to False</value>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.ImpersonationLoginName">
	<summary>
 A user login name which shall be used for immediate login (requires additional server group setup)
 </summary>
	<value></value>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.CreationOnTheFlyAllowed">
	<summary>
     Is it allowed to create the cammWebManager object just on the fly?
 </summary>
	<value>Default value is "Off"</value>
</member><member name="F:CompuMaster.camm.WebManager.Configuration.NotificationLevelOnApplicationException.False">
	<summary>
     No exception handling
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Configuration.NotificationLevelOnApplicationException.Off">
	<summary>
     No exception handling
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Configuration.NotificationLevelOnApplicationException.NoSourceCode">
	<summary>
     A notification to the technical contact person will be send, but only with the StackTrace of the exception, no source code of a page
 </summary>
	<remarks>
     This is the most often used setting because it notifies the webmaster about existing problems but never sends senstive data like hard coded passwords nor any other source code.
     A maximum of 10 notification e-mails per 10 minutes has been set.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.Configuration.NotificationLevelOnApplicationException.True">
	<summary>
     A notification to the technical contact person will be send inclusive source code which caused the exception
 </summary>
	<remarks>
     This is ideal for fast error analysis and solving. Use this when the e-mails can never been read by hackers (e. g. the e-mail gets sent from an internal web server to your internal SMTP server to your internal workstation; so, external hackers can't read the plain text of an e-mail).
     A maximum of 10 notification e-mails per 10 minutes has been set.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.Configuration.NotificationLevelOnApplicationException.On">
	<summary>
     A notification to the technical contact person will be send inclusive source code which caused the exception
 </summary>
	<remarks>
     This is ideal for fast error analysis and solving. Use this when the e-mails can never been read by hackers (e. g. the e-mail gets sent from an internal web server to your internal SMTP server to your internal workstation; so, external hackers can't read the plain text of an e-mail).
     A maximum of 10 notification e-mails per 10 minutes has been set.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.Configuration.NotificationLevelOnApplicationException.TechnicalContact">
	<summary>
     A notification to the technical contact person will be send inclusive source code which caused the exception
 </summary>
	<remarks>
     This is ideal for fast error analysis and solving. Use this when the e-mails can never been read by hackers (e. g. the e-mail gets sent from an internal web server to your internal SMTP server to your internal workstation; so, external hackers can't read the plain text of an e-mail).
     A maximum of 10 notification e-mails per 10 minutes has been set.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.Configuration.NotificationLevelOnApplicationException.NoNotifications">
	<summary>
     No notifications will be sent to the technical contact, but on the web site the error page will be shown instead of the standard ASP.NET error page
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Configuration.NotificationLevelOnApplicationException.Developer">
	<summary>
     A notification to the development contact person will be send inclusive source code which caused the exception
 </summary>
	<remarks>
     This is ideal for fast error analysis and solving. Use this when the e-mails can never been read by hackers (e. g. the e-mail gets sent from an internal web server to your internal SMTP server to your internal workstation; so, external hackers can't read the plain text of an e-mail).
     A maximum of 10 notification e-mails per 10 minutes has been set.
 </remarks>
</member><member name="F:CompuMaster.camm.WebManager.Configuration.NotificationLevelOnApplicationException.TechnicalContactAndDeveloper">
	<summary>
     A notification to the technical contact as well as to the development contact person will be send inclusive source code which caused the exception
 </summary>
	<remarks>
     This is ideal for fast error analysis and solving. Use this when the e-mails can never been read by hackers (e. g. the e-mail gets sent from an internal web server to your internal SMTP server to your internal workstation; so, external hackers can't read the plain text of an e-mail).
     A maximum of 10 notification e-mails per 10 minutes has been set.
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.NotifyOnApplicationExceptions">
	<summary>
     Exception handling of camm Web-Manager for the whole web application
 </summary>
	<remarks>When there are 404 File not found exceptions or 500 Script errors in your web application, do you want to get a notification e-mail as the technical contact person? With some source code included?</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.NotifyOnApplicationExceptions404">
	<summary>
     Exception handling of camm Web-Manager for the whole web application in case of 404 errors (file not found)
 </summary>
	<remarks>When there are 404 (File not found) exceptions in your web application, do you want to get a notification e-mail?</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.NotifyOnApplicationExceptions404IgnoreCrawlers">
	<summary>
     Exception handling of camm Web-Manager for the whole web application in case of 404 errors (file not found) if caused by crawlers
 </summary>
	<remarks>When there are 404 (File not found) exceptions in your web application caused by crawler requests, do you want to get a notification e-mail?</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.NotifyOnApplicationExceptionsReplaceResponseStatusCode">
	<summary>
     Exception handling of camm Web-Manager may set the HTTP response status code to e.g. 404 or 500 
 </summary>
	<remarks>
		<para>Exception handling of camm Web-Manager may set the HTTP response status code to e.g. 404 or 500 - causing IIS to replace the page result with its own error page. When disabled, error pages will use HTTP response status code 200.</para>
		<para>Check the alternative to use following web.config setup to force IIS 7 (and higher) to display the error page as prepared by the ASP.NET web application<code>&lt;system.webServer&gt;
 &lt;httpErrors errorMode = "Custom" existingResponse="PassThrough"/&gt;
 &lt;/system.webServer&gt;</code></para>
	</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.DataBindAutomaticallyWhilePageOnLoad">
	<summary>
 camm Web-Manager can automatically bind all page controls in its Page_Load event if desired
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.TransferRequestOnApplicationExceptionsTo">
	<summary>
     Exception handling of camm Web-Manager transfers to this URL (not a redirect!)
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.DebugLevel">
	<summary>
 Debug level of camm Web-Manager
 </summary>
	<value>The new debug level</value>
	<remarks>The logging of warnings, errors can be influenced by this property as well as redirection of e-mails and the functionality level of automatic redirects. This is very helpfull on first setup of camm Web-Manager if you experience any problems or you don't want e-mails to be sent to the origin receipients except you yourself.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.SmtpServerName">
	<summary>
 The SMTP server name for sending e-mails
 </summary>
	<value></value>
	<remarks>The camm Web-Manager is heavily using e-mails for information and workflow purposes.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.SmtpServerPort">
	<summary>
 The SMTP server port for sending e-mails
 </summary>
	<value></value>
	<remarks>The camm Web-Manager is heavily using e-mails for information and workflow purposes.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.StandardEMailAccountName">
	<summary>
 The common title of the 1st level support team
 </summary>
	<value>The public title for the 1st level support team contact address</value>
	<remarks>The e-mail address is used for all common activities inside of the camm WebManager world, for example a general contact for feedback or support requests. Mostly, the security administrators get all those e-mail. Depending of the content, they can answer directly or redirect to a 2nd level support team.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.StandardEMailAccountAddress">
	<summary>
 The common e-mail address of the 1st level support team
 </summary>
	<value>Valid e-mail address</value>
	<remarks>The e-mail address is used for all common activities inside of the camm WebManager world, for example a general contact for feedback or support requests. Mostly, the security administrators get all those e-mail. Depending of the content, they can answer directly or redirect to a 2nd level support team.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.DevelopmentEMailAccountAddress">
	<summary>
 The e-mail address of the developer is used when errors shall be reported
 </summary>
	<value>Valid e-mail address</value>
	<remarks></remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.TechnicalServiceEMailAccountName">
	<summary>
 The common e-mail address of the technical support team
 </summary>
	<value>The public title for the techical support team contact address</value>
	<remarks>The e-mail address is used for all technical activities.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.TechnicalServiceEMailAccountAddress">
	<summary>
 The common e-mail address of the technical support team
 </summary>
	<value>Valid e-mail address</value>
	<remarks>The e-mail address is used for all technical activities.</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.SmtpAuthentificationMode">
	<summary>
     Configures the authentication methods for the SMTP server
 </summary>
	<value>The authentification type, possible values are "" or "NONE", "LOGIN", "PLAIN", "CRAM-MD5", or "NTLM"</value>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.SmtpUsername">
	<summary>
     Sets up an user name for the SMTP server
 </summary>
	<value>The user name</value>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.SmtpPassword">
	<summary>
     Sets up a password for the SMTP server
 </summary>
	<value>The password</value>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.CompactPolicyHeader">
	<summary>
     A compact policy header to be sent to the client
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.UseFrameset">
	<summary>
     Does this site uses a frameset?
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.AllowLogonViaRequestTypeGet">
	<summary>
     Allow logon processing with GET and POST request methods (true) or only with POST data (false)
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.CookieLess">
	<summary>
     Run camm Web-Manager in cookieless mode
 </summary>
	<value></value>
	<remarks>
     When camm Web-Manager runs in cookieless mode, then 
     <list>
			<item>all internal links track the SessionID per default (overwrite CalculateUrl method to get a custom behaviour)</item>
			<item>it caches navigation items with an additional SessionID value in the primary key field</item>
		</list>
	</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.ProcessMailQueue">
	<summary>
     Use the integrated mail queue for sending e-mails
 </summary>
	<value>TripleState.Undefined is for auto-detection, use TripleState.False for direct sending without mail queue or TripleState.True for sending via mail queue</value>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.DownloadHandlerSeparateRequestPutDataInSession">
	<summary>
     Defines weather to put data in "Session" or in "Cache".
 </summary>
	<remarks>
     Reads set value from web.config. "True" indicates to use "Session" for holding data in memory, else hold data in "Http Cache"
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.DownloadHandlerMaxFileCollectionSize">
	<summary>
 Maximum download size for a file collection (e. g. several single files delivered in a ZIP archive)
 </summary>
	<value>Defaults to 4 MB or at least the same value as DownloadHandlerMaxFileSize</value>
	<remarks>
		<para>The collection size has got a maximum value, too. This ensures that ZIP archives (which are created on the fly for delivering several single files in 1 download) aren't without size limits.</para>
		<seealso cref="P:CompuMaster.camm.WebManager.Configuration.DownloadHandlerMaxFileSize"/>
	</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.DownloadHandlerMaxFileSize">
	<summary>
 Maximum file download size 
 </summary>
	<value>Defaults to 4 MB</value>
	<remarks>This value ensures that downloads aren't without any size limits. A typical value for most cases is 4 MB, but you can increase/decrease the value for your requirements.
 <seealso cref="P:CompuMaster.camm.WebManager.Configuration.DownloadHandlerMaxFileCollectionSize"/>
	</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.DownloadHandlerSeparateRequestCacheTimeLimit_InMinutes">
	<summary>
     Defines the time limit in minutes to hold download data in Cache
 </summary>
	<remarks>
     The default time limit is "5" minits.
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.GlobalizationDefaultMarket">
	<summary>
     The language which shall be used when it can't be detected by any other way
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.GlobalizationSupportedMarkets">
	<summary>
     A comma separated list of market IDs which are supported by the current web application and which are available for the users
 </summary>
	<value></value>
	<remarks>
 Web applications are provided by independent developers and manufacturers. Often the application is provided for 1 or 2 markets only. In this case, many other activated markets and languages of the portal would be in danger to show up translated partially because of some text blocks translated and provided by the application logic, some other blocks handled by the portal itself and fully available in all activated languages (e.g. footer information like a link to the data protection rules). In this case, it is better to show up the application GUI in only the supported language of the application itself.
 <example>
 Your portal is setup to provide markets English, English (USA), English (Canada) and Spanish. Your application has been developed for markets English (USA) and English (Canada). So, the application can appear fully translated in USA and Canada. English users from other countries or Spanish users are not supported by the application. If a user comes to the application with e. g. English (without market information), the application won't show up in standard English, but it will appear in the application's <see cref="P:CompuMaster.camm.WebManager.Configuration.GlobalizationDefaultMarket">default market</see>.
 </example>
		<para>If not defined, the general list of activated markets will be used.</para>
	</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.GlobalizationForcedMarket">
	<summary>
     The language which shall be forced for the GUI
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.WebEditorContentOfServerID">
	<summary>
 Every WebEditor content is related to a server; this property overrides the server ID value where to read from/save to
 </summary>
	<value></value>
	<remarks>
 0 = currently used server; other values = forced server ID
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.InterpreteRequestHeaderXForwardedFor">
	<summary>
 To support reverse proxy environments, you need to activate the interpretion of the additional request header X-Forwarded-For which is typically created by the reverse proxy. This allows you to receive the IP address of the client that is connecting to the reverse proxy. In those cases, this is the more correct IP address of the client and the possibly more interesting value for you.
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.SecurityRecognizeCrawlersAsAnonymous">
	<summary>
     Always regard the crawlers as an anonymous user and do not test authorization with database lookups
 </summary>
	<remarks>
		<para>Based on the browser identification string, all browsers and also the crawlers are identifying themselves.</para>
		<para>If one of these browsers identifies itself as a crawler, it can mostly be seen as an anonymous user. This helps saving unneeded roundtrips to the database for asking user account information and authorization states.</para>
		<para>To reduce heavy loads while a crawler is visiting the website, all security objects other than @@Anonymous are handled as forbidden by default, even if a normal SecurityObject has got authorization for anonymous user.</para>
		<para>In case you run into crawler indexing problems, consider to set this value to False in your configuration or configure your pages and applications to ask for SecurityObject="@@Anonymous".</para>
	</remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.EventLogTrace">
	<summary>
 EventLog trace enables reporting of the current page request progress
 </summary>
	<remarks>
 This trace feature is especially useful in StackTrace overflow situations and may give a hint to identify the code area causing the problem.
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.DownloadHandlerVirtualTempPath">
	<summary>
 The working folder of Download-Handler, defaults to /system/downloads/
 </summary>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.CompatibilityWithDatabaseBuild">
	<summary>
 Recognize all database builds up to this number to be compatible with the current assembly version
 </summary>
	<value></value>
	<remarks>
 In some situations, you update the camm Web-Manager database but still want to keep running an older version of the assembly in combination with the newer database version. This is possible, but not recommended. Do it on your own risk.
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.TextModulesServerGroupIDDefault">
	<summary>
     Default ServerGroupID for load/save of text modules
 </summary>
	<remarks>
     The ServerGroupID is typically diffferent for intranet and extranet.
     By this setting complete cammWM.TextModule library will use the configured ServerGroupID for all loading/saving in methods with undefined server group ID
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.TextModulesServerGroupIDForced">
	<summary>
     Default ServerGroupID for load/save of text modules
 </summary>
	<remarks>
     The ServerGroupID is typically diffferent for intranet and extranet.
     By this setting complete cammWM.TextModule library will always use the configured ServerGroupID for all loading/saving even if a parameter of a method defines a server group ID
 </remarks>
</member><member name="P:CompuMaster.camm.WebManager.Configuration.UserCloneExludedAdditionalFlags">
	<summary>
 In case of any load errors of assemblies into the application because of security exceptions with component names in this comma-separated setting, consider those components as critical warning but not as errors
 </summary>
	<value></value>
	<returns>A comma-separated list of component names</returns>
	<remarks>The problem of SecurityExceptions while loading assemblies often happens when the camm Web-Manager application starts, a check will try to detect if there are all required components available. If errors are found, the technical contact will receive a notification e-mail on every application start with a report of the related components. The e-mail will be send only if there are errors reported; critical warnings for example won't lead to a notification e-mail.</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Configuration.LoadTripleStateSetting(System.String,System.Boolean)">
	<summary>
     Load a boolean value from the configuration file
 </summary>
	<param name="appSettingName">The name of the appSetting item</param>
	<param name="suppressExceptions">True if exceptions shall be suppressed and default value returned or False if exception shall be thrown if there is an error</param>
</member><member name="M:CompuMaster.camm.WebManager.Configuration.LoadBooleanSetting(System.String,System.Boolean,System.Boolean)">
	<summary>
     Load a boolean value from the configuration file
 </summary>
	<param name="appSettingName">The name of the appSetting item</param>
	<param name="defaultValue">A default value if not configured of configured invalid</param>
	<param name="suppressExceptions">True if exceptions shall be suppressed and default value returned or False if exception shall be thrown if there is an error</param>
</member><member name="M:CompuMaster.camm.WebManager.Configuration.LoadIntegerSetting(System.String,System.Int32,System.Boolean)">
	<summary>
     Load an integer value from the configuration file
 </summary>
	<param name="appSettingName">The name of the appSetting item</param>
	<param name="defaultValue">A default value if not configured of configured invalid</param>
	<param name="suppressExceptions">True if exceptions shall be suppressed and default value returned or False if exception shall be thrown if there is an error</param>
</member><member name="M:CompuMaster.camm.WebManager.Configuration.LoadLongSetting(System.String,System.Int64,System.Boolean)">
	<summary>
     Load an Int64 value from the configuration file
 </summary>
	<param name="appSettingName">The name of the appSetting item</param>
	<param name="defaultValue">A default value if not configured of configured invalid</param>
	<param name="suppressExceptions">True if exceptions shall be suppressed and default value returned or False if exception shall be thrown if there is an error</param>
</member><member name="M:CompuMaster.camm.WebManager.Configuration.LoadStringSetting(System.String,System.String)">
	<summary>
     Load a string value from the configuration file
 </summary>
	<param name="appSettingName">The name of the appSetting item</param>
	<param name="defaultValue">A default value if not configured of configured invalid</param>
</member><member name="T:CompuMaster.camm.WebManager.Configuration">
	<summary>
     Configuration settings read from web.config/app.config
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Utils.IsRequestFromCrawlerAgent(System.Web.HttpRequest)">
	<summary>
 Evaluate by the given request headers if a browser is a search robot
 </summary>
	<param name="request">The current HTTP request</param>
	<remarks>
		<seealso cref="M:CompuMaster.camm.WebManager.Utils.IsRequestFromCrawlerOrPotentialMachineAgent(System.Web.HttpRequest)"/>
		<seealso cref="M:CompuMaster.camm.WebManager.Utils.IsRequestFromPotentialMachineAgent(System.Web.HttpRequest)"/>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.IsRequestFromCrawlerOrPotentialMachineAgent(System.Web.HttpRequest)">
	<summary>
 Evaluate by the given request headers if the browser is potentially a crawler agent, a machine or a mis-configured browser agent indicating that the client is not a typical browser with a user interace
 </summary>
	<param name="request">The current HTTP request</param>
	<remarks>
 Following requests will be evaluated to be a potential crawler/to be not a typical browser with user interface
 <list>
			<item>Java/{version number}</item>
			<item>libwww*</item>
			<item>All other clients which have been identified as a regular crawler</item>
		</list>
		<seealso cref="M:CompuMaster.camm.WebManager.Utils.IsRequestFromPotentialMachineAgent(System.Web.HttpRequest)"/>
		<seealso cref="M:CompuMaster.camm.WebManager.Utils.IsRequestFromCrawlerAgent(System.Web.HttpRequest)"/>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.IsRequestFromPotentialMachineAgent(System.Web.HttpRequest)">
	<summary>
 Evaluate by the given request headers if the browser is potentially an application, a machine or a mis-configured browser agent indicating that the client is not a typical browser with a user interace
 </summary>
	<param name="request">The current HTTP request</param>
	<remarks>
 A crawler request will be evaluated with a False result.
 Following requests will be evaluated to be a potential crawler/to be not a typical browser with user interface
 <list>
			<item>Java/{version number}</item>
			<item>libwww*</item>
		</list>
		<seealso cref="M:CompuMaster.camm.WebManager.Utils.IsRequestFromCrawlerOrPotentialMachineAgent(System.Web.HttpRequest)"/>
		<seealso cref="M:CompuMaster.camm.WebManager.Utils.IsRequestFromCrawlerAgent(System.Web.HttpRequest)"/>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.LookupRealRemoteClientIPOfHttpContext">
	<summary>
     Lookup the real IP address of the remote client in a current HttpContext
 </summary>
	<returns>A remote IP address of the client behind a reverse proxy</returns>
	<remarks>
		<para>In case that there is a reverse proxy which forwards all incoming requests to your web-server, the regularily reported remote IP address is the one of the reverse proxy. But sometimes you'll need the IP address of the real client.</para>
		<para>This method analyzes the request headers and if the reverse proxy reports the client IP, it will be returned instead of normal remote IP.</para>
		<para>Sometimes if there are multiple cascaded proxies or reverse proxies, then you may get a value in headers like 'client-ip, proxy-ip, reverse-proxy-1-ip, reverse-proxy-2-ip'. In this situation, this function will return the IP address of the partner of the latest reverse proxy, in this example reverse-proxy-2-ip.</para>
		<para>ATTENTION: Because request headers can be manipulated, the general requesting of this value in unsecure. It's only a trustable value if you really run a reverse proxy environment. That's why you need to activate the interpretation of the request header 'X-Forwarded-For' in your web.config by configuring the setting WebManager.InterpreteRequestHeaderXForwardedFor.</para>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.LookupRealRemoteClientIPOfHttpContext(System.Web.HttpContext)">
	<summary>
     Lookup the real IP address of the remote client in a current HttpContext
 </summary>
	<param name="httpContext">An HttpContext object</param>
	<returns>A remote IP address of the client behind a reverse proxy</returns>
	<remarks>
		<para>In case that there is a reverse proxy which forwards all incoming requests to your web-server, the regularily reported remote IP address is the one of the reverse proxy. But sometimes you'll need the IP address of the real client.</para>
		<para>This method analyzes the request headers and if the reverse proxy reports the client IP, it will be returned instead of normal remote IP.</para>
		<para>Sometimes if there are multiple cascaded proxies or reverse proxies, then you may get a value in headers like 'client-ip, proxy-ip, reverse-proxy-1-ip, reverse-proxy-2-ip'. In this situation, this function will return the IP address of the partner of the latest reverse proxy, in this example reverse-proxy-2-ip.</para>
		<para>ATTENTION: Because request headers can be manipulated, the general requesting of this value in unsecure. It's only a trustable value if you really run a reverse proxy environment. That's why you need to activate the interpretation of the request header 'X-Forwarded-For' in your web.config by configuring the setting WebManager.InterpreteRequestHeaderXForwardedFor.</para>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.SetHttpCacheValue(System.String,System.Object,System.Web.Caching.CacheItemPriority)">
	<summary>
 Set an HttpCache item to a new value respectively remove it if the value is Nothing
 </summary>
	<param name="key">The key name for the cache item</param>
	<param name="value">The new value</param>
	<param name="priority">The cache priority</param>
	<exception cref="T:System.SystemException">
 If HttpContext.Current is not available (if it is not a web application), there will be thrown a normal System.Exception
 </exception>
</member><member name="M:CompuMaster.camm.WebManager.Utils.SetHttpCacheValue(System.String,System.Object,System.TimeSpan,System.Web.Caching.CacheItemPriority)">
	<summary>
 Set an HttpCache item to a new value respectively remove it if the value is Nothing
 </summary>
	<param name="key">The key name for the cache item</param>
	<param name="value">The new value</param>
	<param name="slidingTimespan">A timespan with a sliding expiration date</param>
	<param name="priority">The cache priority</param>
	<exception cref="T:System.SystemException">
 If HttpContext.Current is not available (if it is not a web application), there will be thrown a normal System.Exception
 </exception>
</member><member name="M:CompuMaster.camm.WebManager.Utils.RedirectPermanently(System.Web.HttpContext,System.String)">
	<summary>
 Redirect a browser with an HTTP 301 return code permanently to the new address
 </summary>
	<param name="context">The context of the current request</param>
	<param name="url">The new destination address</param>
	<remarks>A regular Response.Redirect does a HTTP 302 temporary redirection which has a decrease in search engine optimization efforts regarding the link priority. You'll get a more strong link priority if you redirect e. g. from your root URL to your start page with a permanent link.</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.RedirectTemporary(System.Web.HttpContext,System.String)">
	<summary>
 Redirect a browser with an HTTP 302 return code temporary to the new address
 </summary>
	<param name="context">The context of the current request</param>
	<param name="url">The new destination address</param>
	<remarks>MS .NET Framework has got an error in ASP.NET 2.x at Response.Redirect which leads to invalidly encoded URLs in the body document of the redirect response. Search engines might use this wrong link to follow and index, but it may produce errors at the destination URL. Especially, the ampersand character gets encoded twice, in this case the destination page can't lookup the query parameters correctly any more.</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.RedirectWithPostData(System.Web.HttpContext,System.String,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Redirect to another url by using regular html forms to post data
 </summary>
	<param name="context">The context of the current request</param>
	<param name="url">The new destination address</param>
	<param name="postData">A collection of key/value pairs for the destination page</param>
	<remarks>
		<para>This method creates a client HTML form with hidden data fields and a JavaScript auto-post-back to send the data with POST method to a destination address.</para>
		<para>Use this redirection method if the recieving page only understands form data and doesn't understand query parameters. Also use this method if you have to post a huge amount of data so that it extends the critical browser-limits of the request GET parameters.</para>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.RedirectWithPostData(System.Web.HttpContext,System.String,System.Collections.Specialized.NameValueCollection,System.String)">
	<summary>
     Redirect to another url by using regular html forms to post data
 </summary>
	<param name="context">The context of the current request</param>
	<param name="url">The new destination address</param>
	<param name="postData">A collection of key/value pairs for the destination page</param>
	<param name="httpMethod">POST (default) or GET</param>
	<remarks>
		<para>This method creates a client HTML form with hidden data fields and a JavaScript auto-post-back to send the data with POST method to a destination address.</para>
		<para>Use this redirection method if the recieving page only understands form data and doesn't understand query parameters. Also use this method if you have to post a huge amount of data so that it extends the critical browser-limits of the request GET parameters.</para>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.RedirectWithPostData(System.Web.HttpContext,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.String)">
	<summary>
     Redirect to another url by using regular html forms to post data
 </summary>
	<param name="context">The context of the current request</param>
	<param name="url">The new destination address</param>
	<param name="postData">A collection of key/value pairs for the destination page</param>
	<param name="httpMethod">POST (default) or GET</param>
	<param name="additionalFormAttributes">Additional attributes which shall be embedded into the HTML FORM tag</param>
	<remarks>
		<para>This method creates a client HTML form with hidden data fields and a JavaScript auto-post-back to send the data with POST method to a destination address.</para>
		<para>Use this redirection method if the recieving page only understands form data and doesn't understand query parameters. Also use this method if you have to post a huge amount of data so that it extends the critical browser-limits of the request GET parameters.</para>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.RedirectWithPostData(System.Web.HttpContext,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.String,System.String,System.String)">
	<summary>
     Redirect to another url by using regular html forms to post data
 </summary>
	<param name="context">The context of the current request</param>
	<param name="url">The new destination address</param>
	<param name="postData">A collection of key/value pairs for the destination page</param>
	<param name="httpMethod">POST (default) or GET</param>
	<param name="additionalFormAttributes">Additional attributes which shall be embedded into the HTML FORM tag</param>
	<param name="additionalHeaderTags">Some optional header tags like SCRIPT tags (hint: reference document.forms[0] in javascript code to access form objects)</param>
	<param name="jsClientCodeOnSubmit">Some optional javascript statements to be executed immediately before submitting the form (hint: reference document.forms[0] to access form objects)</param>
	<remarks>
		<para>This method creates a client HTML form with hidden data fields and a JavaScript auto-post-back to send the data with POST method to a destination address.</para>
		<para>Use this redirection method if the recieving page only understands form data and doesn't understand query parameters. Also use this method if you have to post a huge amount of data so that it extends the critical browser-limits of the request GET parameters.</para>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.RedirectWithPostDataCreateFormScript(System.String,System.Collections.Specialized.NameValueCollection,System.String,System.String,System.Boolean,System.String)">
	<summary>
 Create an HTML form containing all relevant data and a client script for AutoPostBack
 </summary>
	<param name="url">The new destination address</param>
	<param name="postData">A collection of key/value pairs for the destination page</param>
	<param name="httpMethod">POST (default) or GET</param>
	<param name="additionalFormAttributes">Additional attributes which shall be embedded into the HTML FORM tag</param>
	<param name="autoClientPostBack">Shall a JavaScript autommatically commit the form or shall the user has to do it manually?</param>
	<param name="jsClientCodeOnSubmit">Some optional javascript statements to be executed immediately before submitting the form (hint: reference document.forms[0] to access form objects)</param>
	<returns>The complete HTML FORM tag which can be embedded into an HTML BODY</returns>
	<remarks>
		<para>This method creates a client HTML form with hidden data fields and a JavaScript auto-post-back to send the data with POST method to a destination address.</para>
		<para>Use this redirection method if the recieving page only understands form data and doesn't understand query parameters. Also use this method if you have to post a huge amount of data so that it extends the critical browser-limits of the request GET parameters.</para>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.OnValidationCallback(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
	<summary>
 Suppress all SSL certification requirements - just use the webservice SSL URL
 </summary>
	<param name="sender"></param>
	<param name="cert"></param>
	<param name="chain"></param>
	<param name="errors"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.GetWorkstationID">
	<summary>
     Get the first value of the IP address list or the workstation name if there are no IP addresses
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Utils.IsRemoteClientFromLanOrPrivateNetwork">
	<summary>
     Is the remote client connecting from a private network?
 </summary>
	<returns>True for private networks, false for localhost and public networks</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.IsRealRemoteClientIPFromLanOrPrivateNetwork">
	<summary>
     Is the real remote client (possibly from behind a reverse proxy server) connecting from a private network?
 </summary>
	<returns>True for private networks, false for localhost and public networks</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.IsHostOfAddressRange(System.String,System.String[])">
	<summary>
     Is the IPv4 address a host of a specified address range?
 </summary>
	<param name="IPv4Address">An IPv4 host address</param>
	<param name="AddressRange">An array of strings defining address ranges, e. g. 192.168.*</param>
	<remarks>
     This method compares the string content and not the byte content, that's why you should not forget the leading dot in front of the star in your IP address range.
 </remarks>
	<example>
		<para>These address ranges would be fine:</para>
		<list>
			<item>10.*</item>
			<item>192.168.*</item>
		</list>
		<para>Those address ranges could get misinterpreted:</para>
		<list>
			<item>10* <em>(would also accept 101.*, 102.*, etc. and invalid IP addresses like 10:ZZ:*)</em></item>
			<item>192.168.*.* <em>(all letters after the first star will be ignored)</em></item>
		</list>
	</example>
</member><member name="M:CompuMaster.camm.WebManager.Utils.IsHostFromLanOrPrivateNetwork(System.String)">
	<summary>
     Is the host address a private network node (defined by RFC-1597)?
 </summary>
	<param name="IPAddress">The IP address to validate</param>
	<returns>True for private or LAN networks, otherwise false</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.IsLoopBackDevice(System.String)">
	<summary>
     Is the host a localhost?
 </summary>
	<param name="IPAddress">The IP address to validate</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.CellValueIfColumnExists(System.Data.DataRow,System.String)">
	<summary>
 Try to access a column value if it exists, otherwise DBNull.Value
 </summary>
	<param name="row"></param>
	<param name="columnName"></param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.IfNull(System.Object,System.Object)">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.Nz(System.Object)">
	<summary>
     Checks for DBNull and returns null (Nothing in VisualBasic) in that case
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.Nz(System.Object,System.Object)">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.Nz(System.Object,System.Int32)">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.Nz(System.Object,System.Int64)">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.Nz(System.Object,System.Boolean)">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.Nz(System.Object,System.DateTime)">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.Nz(System.Object,System.String)">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.Nz(System.Object,System.Nullable{System.Int32})">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.Nz(System.Object,System.Nullable{System.Int64})">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.Nz(System.Object,System.Nullable{System.Boolean})">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.Nz(System.Object,System.Nullable{System.DateTime})">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.Nz``1(System.Object)">
	<summary>
     Checks for DBNull and returns the null (Nothing in VisualBasic) alternatively
 </summary>
	<param name="checkValueIfDBNull">The value to be checked</param>
	<returns>A value which is not DBNull, otherwise null (Nothing in VisualBasic)</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.Nz``1(System.Object,``0)">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="checkValueIfDBNull">The value to be checked</param>
	<param name="replaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.InlineIf(System.Boolean,System.String,System.String)">
	<summary>
     Return one of the parameters based on the expression value
 </summary>
	<param name="expression">An expression which shall be validated</param>
	<param name="trueValue">If the expression is True, this parameter will be returned</param>
	<param name="falseValue">If the expression is False, this parameter will be returned</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.InlineIf(System.Boolean,System.Int32,System.Int32)">
	<summary>
     Return one of the parameters based on the expression value
 </summary>
	<param name="expression">An expression which shall be validated</param>
	<param name="trueValue">If the expression is True, this parameter will be returned</param>
	<param name="falseValue">If the expression is False, this parameter will be returned</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.InlineIf(System.Boolean,System.DateTime,System.DateTime)">
	<summary>
     Return one of the parameters based on the expression value
 </summary>
	<param name="expression">An expression which shall be validated</param>
	<param name="trueValue">If the expression is True, this parameter will be returned</param>
	<param name="falseValue">If the expression is False, this parameter will be returned</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.InlineIf(System.Boolean,System.Int64,System.Int64)">
	<summary>
     Return one of the parameters based on the expression value
 </summary>
	<param name="expression">An expression which shall be validated</param>
	<param name="trueValue">If the expression is True, this parameter will be returned</param>
	<param name="falseValue">If the expression is False, this parameter will be returned</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.InlineIf(System.Boolean,System.Double,System.Double)">
	<summary>
     Return one of the parameters based on the expression value
 </summary>
	<param name="expression">An expression which shall be validated</param>
	<param name="trueValue">If the expression is True, this parameter will be returned</param>
	<param name="falseValue">If the expression is False, this parameter will be returned</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.InlineIf(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
     Return one of the parameters based on the expression value
 </summary>
	<param name="expression">An expression which shall be validated</param>
	<param name="trueValue">If the expression is True, this parameter will be returned</param>
	<param name="falseValue">If the expression is False, this parameter will be returned</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.BooleanToWMTriplestate(System.Boolean)">
	<summary>
 Convert a boolean value into the corresponding value of a TriState
 </summary>
	<param name="value">A boolean value</param>
	<returns>A value of type TriState with either TriState.True or TriState.False</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.BooleanToTristate(System.Boolean)">
	<summary>
 Convert a boolean value into the corresponding value of a TriState
 </summary>
	<param name="value">A boolean value</param>
	<returns>A value of type TriState with either TriState.True or TriState.False</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.TristateToBoolean(Microsoft.VisualBasic.TriState)">
	<summary>
 Convert a TriState value into a corresponding boolean value
 </summary>
	<param name="value">A value of type TriState with either TriState.True or TriState.False</param>
	<returns>A boolean value with either True or False</returns>
	<remarks>
     If the input value is TriState.Default, there will be thrown an ArgumentException
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.WMTriplestateToBoolean(CompuMaster.camm.WebManager.WMSystem.TripleState)">
	<summary>
 Convert a TriState value into a corresponding boolean value
 </summary>
	<param name="value">A value of type TriState with either TriState.True or TriState.False</param>
	<returns>A boolean value with either True or False</returns>
	<remarks>
     If the input value is TriState.Default, there will be thrown an ArgumentException
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.WMTriplestateToTristate(CompuMaster.camm.WebManager.WMSystem.TripleState)">
	<summary>
 Convert a WMSystem.TripleState value into a corresponding Tristate value
 </summary>
	<param name="value">A value of type WMSystem.TripleState</param>
	<returns>A Tristate value</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.TristateToWMTriplestate(Microsoft.VisualBasic.TriState)">
	<summary>
 Convert a Tristate value into a corresponding WMSystem.TripleState value
 </summary>
	<param name="value">A Tristate value</param>
	<returns>A value of type WMSystem.TripleState</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.IIf``1(System.Boolean,``0,``0)">
	<summary>
 Check the expression and return a strongly typed value
 </summary>
	<typeparam name="T"></typeparam>
	<param name="expression">The expression for the check</param>
	<param name="trueValue">The return value if the expression is true</param>
	<param name="falseValue">The return value if the expression is false</param>
	<returns>A strongly typed return value</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.StringNotEmptyOrNothing(System.String)">
	<summary>
     Return the string which is not nothing or else String.Empty
 </summary>
	<param name="value">The string to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.StringNotNothingOrEmpty(System.String)">
	<summary>
     Return the string which is not nothing or else String.Empty
 </summary>
	<param name="value">The string to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.StringNotNothingOrAlternativeValue(System.String,System.String)">
	<summary>
     Return the string which is not nothing or else the alternative value
 </summary>
	<param name="value">The string to be validated</param>
	<param name="alternativeValue">An alternative value if the first value is nothing</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.StringNotEmptyOrAlternativeValue(System.String,System.String)">
	<summary>
     Return the string which is not empty or else the alternative value
 </summary>
	<param name="value">The string to be validated</param>
	<param name="alternativeValue">An alternative value if the first value is empty</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.StringNotEmptyOrDBNull(System.String)">
	<summary>
     Return the string which is not empty or otherwise return DBNull.Value 
 </summary>
	<param name="value">The string to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.DateTimeNotNothingOrDBNull(System.DateTime)">
	<summary>
     Return the datetime value which is not nothing or otherwise return DBNull.Value 
 </summary>
	<param name="value">The datetime value to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ObjectNotNothingOrEmptyString(System.Object)">
	<summary>
     Return the object which is not nothing or otherwise return DBNull.Value 
 </summary>
	<param name="value">The object to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ObjectNotNothingOrDBNull(System.Object)">
	<summary>
     Return the object which is not nothing or otherwise return DBNull.Value 
 </summary>
	<param name="value">The object to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ObjectNotEmptyStringOrNothing(System.Object)">
	<summary>
     Return the object which is not an empty string or otherwise return Nothing
 </summary>
	<param name="value">The object to be validated</param>
	<returns>A string with length &gt; 0 (the value) or nothing</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.NullableTypeWithItsValueOrDBNull``1(System.Nullable{``0})">
	<summary>
     Return the value if there is a value or otherwise return DBNull.Value 
 </summary>
	<param name="value">The nullable type value to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ArrayNotNothingOrDBNull(System.Array)">
	<summary>
     Return the array which is not nothing or otherwise return DBNull.Value 
 </summary>
	<param name="values">The array to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ArrayNotEmptyOrDBNull(System.Array)">
	<summary>
     Return the array with at least 1 element or otherwise return DBNull.Value 
 </summary>
	<param name="values">The array to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ArrayNotEmptyOrNothing``1(``0[])">
	<summary>
     Return the array with at least 1 element or otherwise return Nothing
 </summary>
	<param name="values">The array to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ArrayNotNothingOrEmpty``1(``0[])">
	<summary>
     Return the array with at least 0 elements in case it's Nothing
 </summary>
	<param name="values">The array to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.StringNotNothingOrDBNull(System.String)">
	<summary>
     Return the string which is not nothing or otherwise return DBNull.Value 
 </summary>
	<param name="value">The string to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.TryCLng(System.Object)">
	<summary>
     Tries to convert the expression into a long value, but never throws an exception
 </summary>
	<param name="Expression">The expression to be converted</param>
	<returns>The converted long value or null (Nothing in VisualBasic) if the conversion was unsuccessfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.TryCLng(System.Object,System.Int64)">
	<summary>
     Tries to convert the expression into a long value, but never throws an exception
 </summary>
	<param name="Expression">The expression to be converted</param>
	<param name="AlternativeValue">The alternative value in case of conversion errors</param>
	<returns>The converted long value or the alternative value if the conversion was unsuccessfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.TryCInt(System.Object)">
	<summary>
     Tries to convert the expression into a integer value, but never throws an exception
 </summary>
	<param name="Expression">The expression to be converted</param>
	<returns>The converted integer value or null (Nothing in VisualBasic) if the conversion was unsuccessfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.TryCInt(System.Object,System.Int32)">
	<summary>
     Tries to convert the expression into a integer value, but never throws an exception
 </summary>
	<param name="Expression">The expression to be converted</param>
	<param name="AlternativeValue">The alternative value in case of conversion errors</param>
	<returns>The converted integer value or the alternative value if the conversion was unsuccessfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.TryCDbl(System.Object)">
	<summary>
     Tries to convert the expression into a double value, but never throws an exception
 </summary>
	<param name="Expression">The expression to be converted</param>
	<returns>The converted double value or null (Nothing in VisualBasic) if the conversion was unsuccessfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.TryCDbl(System.Object,System.Int32)">
	<summary>
     Tries to convert the expression into a double value, but never throws an exception
 </summary>
	<param name="Expression">The expression to be converted</param>
	<param name="AlternativeValue">The alternative value in case of conversion errors</param>
	<returns>The converted double value or the alternative value if the conversion was unsuccessfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.TryCDec(System.Object)">
	<summary>
     Tries to convert the expression into a decimal value, but never throws an exception
 </summary>
	<param name="Expression">The expression to be converted</param>
	<returns>The converted decimal value or null (Nothing in VisualBasic) if the conversion was unsuccessfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.TryCDec(System.Object,System.Int32)">
	<summary>
     Tries to convert the expression into a decimal value, but never throws an exception
 </summary>
	<param name="Expression">The expression to be converted</param>
	<param name="AlternativeValue">The alternative value in case of conversion errors</param>
	<returns>The converted decimal value or the alternative value if the conversion was unsuccessfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ConvertStringToBase64String(System.String)">
	<summary>
 Convert a normal string into base64 string
 </summary>
	<param name="text">A normal string</param>
	<returns>The base64 string </returns>
	<remarks>
 The byte encoding is based on UTF-8 encoding
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ConvertBase64StringToString(System.String)">
	<summary>
 Convert a base64 string into a normal string
 </summary>
	<param name="base64String">A base64 string</param>
	<returns>A normal string</returns>
	<remarks>
 The byte encoding is based on UTF-8 encoding
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.CombineUnixPaths(System.String,System.String)">
	<summary>
     Combine a unix path with another one
 </summary>
	<param name="path1">A first path</param>
	<param name="path2">A second path which shall be appended to the first path</param>
	<returns>The combined path</returns>
	<remarks>
 If path2 starts with "/", it is considered as root folder and will be the only return value.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.QueryStringWithoutSpecifiedParameters(System.String[])">
	<summary>
     Get the complete query string of the current request in a form usable for recreating this query string for a following request
 </summary>
	<param name="removeParameters">Remove all values with this name form the query string</param>
	<returns>A new string with all query string information without the starting questionmark character</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.NameValueCollectionWithoutSpecifiedKeys(System.Collections.Specialized.NameValueCollection,System.String[])">
	<summary>
     Get the complete string of a collection in a form usable for recreating a query string for a following request
 </summary>
	<param name="collection">A NameValueCollection, e. g. Request.QueryString</param>
	<param name="removeKeys">Names of keys which shall not be in the output</param>
	<returns>A string of the collection data which can be appended to any URL (with url encoding)</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.SplitString(System.String,System.Char,System.Char)">
	<summary>
     Split a string by a separator if there is not a special leading character
 </summary>
	<param name="text"></param>
	<param name="separator"></param>
	<param name="exceptLeadingCharacter"></param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.SplitStringToInteger(System.String,System.Char)">
	<summary>
 Split a string into an array of integers
 </summary>
	<param name="text"></param>
	<param name="separator"></param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.HTMLEncodeLineBreaks(System.String)">
	<summary>
     Converts all line breaks into HTML line breaks ("&lt;br&gt;")
 </summary>
	<param name="text">A text string which might contain line breaks of any platform type</param>
	<returns>The text string with encoded line breaks to "&lt;br&gt;"</returns>
	<remarks>
     Supported line breaks are linebreaks of Windows, MacOS as well as Linux/Unix.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.CountOfOccurances(System.String,System.String)">
	<summary>
     Search for a string in another string and return the number of matches
 </summary>
	<param name="source">The string where to search in</param>
	<param name="searchFor">The searched string (binary comparison)</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.CountOfOccurances(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
	<summary>
     Search for a string in another string and return the number of matches
 </summary>
	<param name="source">The string where to search in</param>
	<param name="searchFor">The searched string</param>
	<param name="compareMethod">Binary or text search</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.sprintf(System.String,System.Object[])">
	<summary>
     Replaces placeholders in a string by defined values
 </summary>
	<param name="message">The string with the placeholders</param>
	<param name="values">One or more values which should be used for replacement</param>
	<returns>The new resulting string</returns>
	<remarks>
		<para>Supported special character combinations are <code>\t</code>, <code>\r</code>, <code>\n</code>, <code>\\</code>, <code>\[</code></para>
		<para>Supported placeholders are <code>[*]</code>, <code>[n:1..9]</code></para>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.JoinArrayToString(System.Int32[],System.String)">
	<summary>
 Join the elements of an integer array to a single string
 </summary>
	<param name="values">An array of values</param>
	<param name="delimiter">A delimiter which shall separate the values in the string</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils._JoinArrayToString(System.Int64[],System.String)">
	<summary>
 Join the elements of an integer array to a single string
 </summary>
	<param name="values">An array of values</param>
	<param name="delimiter">A delimiter which shall separate the values in the string</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.JoinNameValueCollectionToString(System.Collections.Specialized.NameValueCollection,System.String,System.String,System.String)">
	<summary>
     Join all items of a NameValueCollection (for example Request.QueryString) to a simple string
 </summary>
	<param name="NameValueCollectionToString">A collection like Request.Form or Request.QueryString</param>
	<param name="BeginningOfItem">A string in front of a key</param>
	<param name="KeyValueSeparator">The string between key and value</param>
	<param name="EndOfItem">The string to be placed at the end of a value</param>
	<returns>A string containing all elements of the collection</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.JoinNameValueCollectionWithUrlEncodingToString(System.Collections.Specialized.NameValueCollection)">
	<summary>
     Join all items of a NameValueCollection (for example Request.QueryString) to a simple string
 </summary>
	<param name="NameValueCollectionToString">A collection like Request.Form or Request.QueryString</param>
	<returns>A string containing all elements of the collection which can be appended to any internet address</returns>
	<remarks>
     If you need to read the values directly from the returned string, pay attention that all names and values might be UrlEncoded and you have to decode them, first.
 </remarks>
	<see also="FillNameValueCollectionWith"/>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ReFillNameValueCollection(System.Collections.Specialized.NameValueCollection,System.String)">
	<summary>
     Restore a NameValueCollection's content which has been previously converted to a string
 </summary>
	<param name="nameValueCollection">An already existing NameValueCollection which shall receive the new values</param>
	<param name="nameValueCollectionWithUrlEncoding">A string containing the UrlEncoded writing style of a NameValueCollection</param>
	<remarks>
     Please note: existing values in the collection won't be appended, they'll be overridden
 </remarks>
	<see also="JoinNameValueCollectionWithUrlEncodingToString"/>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ConvertHTMLToText(System.String)">
	<summary>
     Converts HTML messages to simple text
 </summary>
	<param name="HTML">A string with HTML code</param>
	<returns>The rendered output as plain text</returns>
</member><member name="F:CompuMaster.camm.WebManager.Utils.ReplaceComparisonTypes.CaseSensitive">
	<summary>
 Compare 2 strings with case sensitivity
 </summary>
	<remarks></remarks>
</member><member name="F:CompuMaster.camm.WebManager.Utils.ReplaceComparisonTypes.CurrentCultureIgnoreCase">
	<summary>
 Compare 2 strings by lowering their case based on the current culture
 </summary>
	<remarks></remarks>
</member><member name="F:CompuMaster.camm.WebManager.Utils.ReplaceComparisonTypes.InvariantCultureIgnoreCase">
	<summary>
 Compare 2 strings by lowering their case following invariant culture rules
 </summary>
	<remarks></remarks>
</member><member name="T:CompuMaster.camm.WebManager.Utils.ReplaceComparisonTypes">
	<summary>
 String comparison types for ReplaceString method
 </summary>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ReplaceString(System.String,System.String,System.String,CompuMaster.camm.WebManager.Utils.ReplaceComparisonTypes)">
	<summary>
 Replace a string in another string based on a defined StringComparison type
 </summary>
	<param name="original">The original string</param>
	<param name="pattern">The search expression</param>
	<param name="replacement">The string which shall be inserted instead of the pattern</param>
	<param name="comparisonType">The comparison type for searching for the pattern</param>
	<returns>A new string with all replacements</returns>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ConvertProtocolAddressIntoHyperLink(System.String,System.String,System.String)">
	<summary>
     Converts addresses or URLs in a string into HTML hyperlinks
 </summary>
	<param name="LinkInitiator">Search for this start string of a word</param>
	<param name="Msg">Search inside this string</param>
	<param name="AdditionalProtocolInitiator">An additionally required prefix</param>
	<returns>HTML with hyperlinks</returns>
	<example language="vb">
     Dim HTMLResult As String = ConvertProtocolAddressIntoHyperLink ("www.", Text, "http://")
 </example>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ConvertEMailAddressIntoHyperLink(System.String)">
	<summary>
     Convert e-mail addresses into hyperlinks
 </summary>
	<param name="Msg">The string where to search in</param>
	<returns>HTML with hyperlinks</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.HighlightLinksInMessage(System.String)">
	<summary>
     Converts URLs and e-mail addresses in a string into HTML hyperlinks
 </summary>
	<param name="Text">The standard text without any HTML</param>
	<returns>HTML with hyperlinks</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.RemoveTrailingSlash(System.String)">
	<summary>
 Remove a possibly trailing slash from an URL
 </summary>
	<param name="url">An URL address</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.RemoveFilenameInUnixPath(System.String)">
	<summary>
     If the path is a unix path with a filename at the end, the file name will be removed. The resulting path always ends with a "/".
 </summary>
	<param name="path">A unix path with or without a filename</param>
	<remarks>
 All letters behind the last slash will be removed, so a path ending with a slash will never be modified.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.FullyInterpretedVirtualPath(System.String)">
	<summary>
     Return the full virtual path based on the given string
 </summary>
	<param name="virtualPath">A path like ~/images or images/styles or /images/</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.FullyInterpredetPhysicalPath(System.String)">
	<summary>
     Return the full physical path based on the given string
 </summary>
	<param name="virtualPath">A path like ~/images or images/styles or /images/</param>
	<remarks>
     Requires execution on a web server (because HttpContext must be there)
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ScriptNameWithoutPath">
	<summary>
     The script name without path and query information, only the file name itself
 </summary>
	<returns>E. g. "index.aspx"</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ValidateEmailAddress(System.String)">
	<summary>
     Check validity of an email address
 </summary>
	<param name="emailAddress">email address to be validated</param>
	<returns>True if email address is syntactically valid else false</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ValidateInternetUrl(System.String)">
	<summary>
     Check validity of an URL
 </summary>
	<param name="url">URL to be validated</param>
	<returns>True if URL is syntactically valid else false</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.WriteAllBytes(System.String,System.Byte[])">
	<summary>
 Write all bytes to a binary file
 </summary>
	<param name="path">The file path for the output</param>
	<param name="bytes">File output data</param>
	<remarks>An existing file will be overwritten</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.CreateObject(System.String,System.String)">
	<summary>
 Create an instance of an object which is defined by assembly name and class name
 </summary>
	<param name="assemblyName">The name of an assembly (e.g. "System.Data")</param>
	<param name="className">A class name (e.g. "System.Data.DataTable")</param>
	<returns>The created instance of the requested</returns>
	<remarks>The loading procedure is in following order:
 <list>
			<item>Assemblies already loaded into the current application domain</item>
			<item>Assembly loaded from disc (with standard search order in application folder, GAC, etc.)</item>
		</list>
		<para></para>
	</remarks>
	<exception cref="T:System.Exception">If the object can't be created or the assembly can't be loaded, there will be a System.Exception</exception>
</member><member name="M:CompuMaster.camm.WebManager.Utils.CreateObject(System.String,System.String,System.Object[])">
	<summary>
 Create an instance of an object which is defined by assembly name and class name
 </summary>
	<param name="assemblyName">An assembly name which is already loaded into the current application domain (e.g. "System.Data")</param>
	<param name="className">A class name (e.g. "System.Data.DataTable")</param>
	<param name="parameters">Parameters for the constructor of the new class instance</param>
	<returns>The created instance of the requested</returns>
	<remarks>The loading procedure is in following order:
 <list>
			<item>Assemblies already loaded into the current application domain</item>
			<item>Assembly loaded from disc (with standard search order in application folder, GAC, etc.)</item>
		</list>
		<para></para>
	</remarks>
	<exception cref="T:System.Exception">If the object can't be created or the assembly can't be loaded, there will be a System.Exception</exception>
</member><member name="M:CompuMaster.camm.WebManager.Utils.IsAssemblyAlreadyLoaded(System.String)">
	<summary>
     Is the assembly already loaded into the current application domain?
 </summary>
	<param name="assemblyName">The name of an assembly</param>
	<returns>True if the assembly is loaded, False if not</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ResourceValue(System.String,System.String)">
	<summary>
     Load a value from an embedded resource file
 </summary>
	<param name="resourceFileWithoutExtension">The name of the .resx file</param>
	<param name="key">The key of the requested value</param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ResourceBinaryValue(System.String)">
	<summary>
 Read an embedded, binary resource file
 </summary>
	<param name="embeddedFileName">The name of the resouces</param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.IsRegExMatch(System.String,System.String)">
	<summary>
     Check if a value matches to the regular expression
 </summary>
	<param name="regularExpression"></param>
	<param name="value"></param>
</member><member name="M:CompuMaster.camm.WebManager.Utils.LookupParentServerForm(System.Web.UI.Control)">
	<summary>
     Search for the server form in the list of parent controls
 </summary>
	<param name="control"></param>
	<returns>The control of the server form if it's existant</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.LookupServerForm(System.Web.UI.Page)">
	<summary>
     Lookup the server form which resides on the page
 </summary>
	<param name="page"></param>
	<returns>The control of the server form if it's existant</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.LookupServerForm(System.Web.UI.ControlCollection,System.Boolean)">
	<summary>
     Search in the controls collection for a server form
 </summary>
	<param name="controls"></param>
	<param name="searchInChildren">True to execute the search in the controls collection recursively, False to not search in any children controls</param>
	<returns>The control of the server form if it's existant</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.GetHtmlFromUri(System.String)">
	<summary>
     Perform a request to a remote server and read the HTML/text from there
 </summary>
	<param name="uri">A URI which shall be read</param>
	<returns>A string containing the remote HTML code</returns>
	<remarks>
 Redirections will be executed automatically.
 A defined charset is not guaranteed. The result will be in this charset as the remote server sends the document.
 </remarks>
	<history>
	</history>
</member><member name="M:CompuMaster.camm.WebManager.Utils.GetHtmlFromUri(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Perform a request to a remote server and read the HTML/text from there
 </summary>
	<param name="uri">A URI which shall be read</param>
	<returns>A string containing the remote HTML code</returns>
	<remarks>
 Redirections will be executed automatically.
 A defined charset is not guaranteed. The result will be in this charset as the remote server sends the document.
 </remarks>
	<history>
	</history>
</member><member name="M:CompuMaster.camm.WebManager.Utils.GetHtmlFromUri(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding,System.Text.Encoding)">
	<summary>
     Perform a request to a remote server and read the HTML/text from there
 </summary>
	<param name="uri">A URI which shall be read</param>
	<returns>A string containing the remote HTML code</returns>
	<remarks>
 Redirections will be executed automatically.
 A defined charset is not guaranteed. The result will be in this charset as the remote server sends the document.
 </remarks>
	<history>
	</history>
</member><member name="M:CompuMaster.camm.WebManager.Utils.GetHtmlFromUri(System.String,System.String,System.String)">
	<summary>
     Perform a request to a remote server and read the HTML/text from there
 </summary>
	<param name="uri">A URI which shall be read</param>
	<returns>A string containing the remote HTML code</returns>
	<remarks>
 Redirections will be executed automatically.
 A defined charset is not guaranteed. The result will be in this charset as the remote server sends the document.
 </remarks>
	<history>
	</history>
</member><member name="M:CompuMaster.camm.WebManager.Utils.GetHtmlFromUri(System.String,System.String,System.String,System.String,System.Text.Encoding,System.Text.Encoding)">
	<summary>
     Perform a request to a remote server and read the HTML/text from there
 </summary>
	<param name="uri">A URI which shall be read</param>
	<returns>A string containing the remote HTML code</returns>
	<remarks>
 Redirections will be executed automatically.
 A defined charset is not guaranteed. The result will be in this charset as the remote server sends the document.
 </remarks>
	<history>
	</history>
</member><member name="M:CompuMaster.camm.WebManager.Utils.WriteToEventLog(System.Diagnostics.EventLogEntryType,System.String)">
	<summary>
 Write entry to event log 
 </summary>
	<param name="type">The entry type, e. g. Warning, Information</param>
	<param name="data">The event details</param>
	<returns>True if successful, false if not</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.WriteToEventLog(System.String,System.String,System.Diagnostics.EventLogEntryType,System.String)">
	<summary>
 Write entry to event log 
 </summary>
	<param name="entry">Value to Write</param>
	<param name="appName">Name of Client Application. Needed because before writing to event log, you must have a named EventLog source</param>
	<param name="eventType">Entry Type, from EventLogEntryType Structure e.g., EventLogEntryType.Warning, EventLogEntryType.Error</param>
	<param name="logName">Name of Log (System, Application; Security is read-only) If you specify a non-existent log, the log will be created</param>
	<returns>True if successful, false if not</returns>
	<remarks>
EXAMPLES: 
1.  Simple Example, Accepting All Defaults
    WriteToEventLog "Hello Event Log"
2.  Specify EventSource, EventType, and LogName
    WriteToEventLog("Danger, Danger, Danger", "MyVbApp", EventLogEntryType.Warning, "System")

NOTE:     EventSources are tightly tied to their log. 
          So don't use the same source name for different 
          logs, and vice versa
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.Zip.Extract(System.String,System.String)">
	<summary>
 Extract a single file from a ZIP archive
 </summary>
	<param name="zipFile">The ZIP archive</param>
	<param name="extractionPath">The path where the ZIP file shall be extracted to</param>
	<remarks></remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.Zip.Extract(System.String,CompuMaster.camm.WebManager.Utils.Zip.ZipContentListItem,System.String)">
	<summary>
 Extract a single file from a ZIP archive
 </summary>
	<param name="zipFile">The ZIP archive</param>
	<param name="zipItem">A file entry representing the desired file of the ZIP archive</param>
	<param name="fullExtractionFilePath">The full path of the file which shall be written to disc</param>
	<remarks>
 The extraction path must be absolute. There won't be any modifications to reflect a matching folder structure from the ZIP archive with the one on disc
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.Zip.LoadListOfContent(System.String)">
	<summary>
 Load the list of content of a zip archive
 </summary>
	<param name="zipFile">The ZIP archive</param>
	<returns>An array of ZipContentListItems</returns>
</member><member name="M:CompuMaster.camm.WebManager.Utils.ConnectionStringWithoutPasswords(System.String)">
	<summary>
 Prepare a connection string for transmission to users without sensitive password information
 </summary>
	<param name="fullConnectionString">The regular ConnectionString</param>
	<returns>The first part of the ConnectionString till the password position</returns>
	<remarks>
 All information after the password position will be removed, too. So, you can hide the user name by positioning it after the password (UID=user;PWD=xxxx vs. PWD=xxxx;UID=user).
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Utils.IsMonoFramework">
	<summary>
 Checks whether the framework used is Mono.
</summary>
	<returns>True (using Mono) or false (not using Mono).</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.RedirectWithPostData(System.Web.HttpContext,System.String,System.Collections.Specialized.NameValueCollection)">
	<summary>
     Redirect to another url by using regular html forms to post data
 </summary>
	<param name="url"></param>
	<param name="postData"></param>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.GetWorkstationID">
	<summary>
     Get the first value of the IP address list or the workstation name if there are no IP addresses
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.IsRemoteClientFromLanOrPrivateNetwork">
	<summary>
     Is the remote client connecting from a private network?
 </summary>
	<returns>True for private networks, false for localhost and public networks</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.IsHostOfAddressRange(System.String,System.String[])">
	<summary>
     Is the IPv4 address a host of a specified address range?
 </summary>
	<param name="IPv4Address">An IPv4 host address</param>
	<param name="AddressRange">An array of strings defining address ranges, e. g. 192.168.*</param>
	<remarks>
     This method compares the string content and not the byte content, that's why you should not forget the leading dot in front of the star in your IP address range.
 </remarks>
	<example>
		<para>These address ranges would be fine:</para>
		<list>
			<item>10.*</item>
			<item>192.168.*</item>
		</list>
		<para>Those address ranges could get misinterpreted:</para>
		<list>
			<item>10* <em>(would also accept 101.*, 102.*, etc. and invalid IP addresses like 10:ZZ:*)</em></item>
			<item>192.168.*.* <em>(all letters after the first star will be ignored)</em></item>
		</list>
	</example>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.IsHostFromLanOrPrivateNetwork(System.String)">
	<summary>
     Is the host address a private network node (defined by RFC-1597)?
 </summary>
	<param name="IPAddress">The IP address to validate</param>
	<returns>True for private or LAN networks, otherwise false</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.IsLoopBackDevice(System.String)">
	<summary>
     Is the host a localhost?
 </summary>
	<param name="IPAddress">The IP address to validate</param>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.IfNull(System.Object,System.Object)">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.Nz(System.Object)">
	<summary>
     Checks for DBNull and returns null (Nothing in VisualBasic) in that case
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.Nz(System.Object,System.Object)">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.Nz(System.Object,System.Int32)">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.Nz(System.Object,System.Int64)">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.Nz(System.Object,System.Boolean)">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.Nz(System.Object,System.DateTime)">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.Nz(System.Object,System.String)">
	<summary>
     Checks for DBNull and returns the second value alternatively
 </summary>
	<param name="CheckValueIfDBNull">The value to be checked</param>
	<param name="ReplaceWithThis">The alternative value, null (Nothing in VisualBasic) if not defined</param>
	<returns>A value which is not DBNull</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.StringNotEmptyOrNothing(System.String)">
	<summary>
     Return the string which is not nothing or else String.Empty
 </summary>
	<param name="value">The string to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.StringNotNothingOrEmpty(System.String)">
	<summary>
     Return the string which is not nothing or else String.Empty
 </summary>
	<param name="value">The string to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.StringNotEmptyOrDBNull(System.String)">
	<summary>
     Return the string which is not empty or otherwise return DBNull.Value 
 </summary>
	<param name="value">The string to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.ObjectNotNothingOrEmptyString(System.Object)">
	<summary>
     Return the object which is not nothing or otherwise return DBNull.Value 
 </summary>
	<param name="value">The string to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.ObjectNotNothingOrDBNull(System.Object)">
	<summary>
     Return the object which is not nothing or otherwise return DBNull.Value 
 </summary>
	<param name="value">The string to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.ObjectNotEmptyStringOrNothing(System.Object)">
	<summary>
     Return the object which is not an empty string or otherwise return Nothing
 </summary>
	<param name="value">The object to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.StringNotNothingOrDBNull(System.String)">
	<summary>
     Return the string which is not nothing or otherwise return DBNull.Value 
 </summary>
	<param name="value">The string to be validated</param>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.TryCLng(System.Object)">
	<summary>
     Tries to convert the expression into a long value, but never throws an exception
 </summary>
	<param name="Expression">The expression to be converted</param>
	<returns>The converted long value or null (Nothing in VisualBasic) if the conversion was unsuccessfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.TryCLng(System.Object,System.Int64)">
	<summary>
     Tries to convert the expression into a long value, but never throws an exception
 </summary>
	<param name="Expression">The expression to be converted</param>
	<param name="AlternativeValue">The alternative value in case of conversion errors</param>
	<returns>The converted long value or the alternative value if the conversion was unsuccessfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.TryCInt(System.Object)">
	<summary>
     Tries to convert the expression into a integer value, but never throws an exception
 </summary>
	<param name="Expression">The expression to be converted</param>
	<returns>The converted integer value or null (Nothing in VisualBasic) if the conversion was unsuccessfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.TryCInt(System.Object,System.Int32)">
	<summary>
     Tries to convert the expression into a integer value, but never throws an exception
 </summary>
	<param name="Expression">The expression to be converted</param>
	<param name="AlternativeValue">The alternative value in case of conversion errors</param>
	<returns>The converted integer value or the alternative value if the conversion was unsuccessfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.TryCDbl(System.Object)">
	<summary>
     Tries to convert the expression into a double value, but never throws an exception
 </summary>
	<param name="Expression">The expression to be converted</param>
	<returns>The converted double value or null (Nothing in VisualBasic) if the conversion was unsuccessfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.TryCDbl(System.Object,System.Int32)">
	<summary>
     Tries to convert the expression into a double value, but never throws an exception
 </summary>
	<param name="Expression">The expression to be converted</param>
	<param name="AlternativeValue">The alternative value in case of conversion errors</param>
	<returns>The converted double value or the alternative value if the conversion was unsuccessfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.TryCDec(System.Object)">
	<summary>
     Tries to convert the expression into a decimal value, but never throws an exception
 </summary>
	<param name="Expression">The expression to be converted</param>
	<returns>The converted decimal value or null (Nothing in VisualBasic) if the conversion was unsuccessfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.TryCDec(System.Object,System.Int32)">
	<summary>
     Tries to convert the expression into a decimal value, but never throws an exception
 </summary>
	<param name="Expression">The expression to be converted</param>
	<param name="AlternativeValue">The alternative value in case of conversion errors</param>
	<returns>The converted decimal value or the alternative value if the conversion was unsuccessfull</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.QueryStringWithoutSpecifiedParameters(System.String[])">
	<summary>
     Get the complete query string of the current request in a form usable for recreating this query string for a following request
 </summary>
	<param name="removeParameters">Remove all values with this name form the query string</param>
	<returns>A new string with all query string information without the starting questionmark character</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.NameValueCollectionWithoutSpecifiedKeys(System.Collections.Specialized.NameValueCollection,System.String[])">
	<summary>
     Get the complete string of a collection in a form usable for recreating a query string for a following request
 </summary>
	<param name="collection">A NameValueCollection, e. g. Request.QueryString</param>
	<param name="removeKeys">Names of keys which shall not be in the output</param>
	<returns>A string of the collection data which can be appended to any URL (with url encoding)</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.SplitString(System.String,System.Char,System.Char)">
	<summary>
     Split a string by a separator if there is not a special leading character
 </summary>
	<param name="text"></param>
	<param name="separator"></param>
	<param name="exceptLeadingCharacter"></param>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.HTMLEncodeLineBreaks(System.String)">
	<summary>
     Converts all line breaks into HTML line breaks ("&lt;br&gt;")
 </summary>
	<param name="Text"></param>
	<remarks>
     Supported line breaks are linebreaks of Windows, MacOS as well as Linux/Unix.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.CountOfOccurances(System.String,System.String)">
	<summary>
     Search for a string in another string and return the number of matches
 </summary>
	<param name="source">The string where to search in</param>
	<param name="searchFor">The searched string (binary comparison)</param>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.CountOfOccurances(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
	<summary>
     Search for a string in another string and return the number of matches
 </summary>
	<param name="source">The string where to search in</param>
	<param name="searchFor">The searched string</param>
	<param name="compareMethod">Binary or text search</param>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.sprintf(System.String,System.Object[])">
	<summary>
     Replaces placeholders in a string by defined values
 </summary>
	<param name="message">The string with the placeholders</param>
	<param name="values">One or more values which should be used for replacement</param>
	<returns>The new resulting string</returns>
	<remarks>
		<para>Supported special character combinations are <code>\t</code>, <code>\r</code>, <code>\n</code>, <code>\\</code>, <code>\[</code></para>
		<para>Supported placeholders are <code>[*]</code>, <code>[n:1..9]</code></para>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.JoinNameValueCollectionToString(System.Collections.Specialized.NameValueCollection,System.String,System.String,System.String)">
	<summary>
     Join all items of a NameValueCollection (for example Request.QueryString) to a simple string
 </summary>
	<param name="NameValueCollectionToString">A collection like Request.Form or Request.QueryString</param>
	<param name="BeginningOfItem">A string in front of a key</param>
	<param name="KeyValueSeparator">The string between key and value</param>
	<param name="EndOfItem">The string to be placed at the end of a value</param>
	<returns>A string containing all elements of the collection</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.JoinNameValueCollectionWithUrlEncodingToString(System.Collections.Specialized.NameValueCollection)">
	<summary>
     Join all items of a NameValueCollection (for example Request.QueryString) to a simple string
 </summary>
	<param name="NameValueCollectionToString">A collection like Request.Form or Request.QueryString</param>
	<returns>A string containing all elements of the collection which can be appended to any internet address</returns>
	<remarks>
     If you need to read the values directly from the returned string, pay attention that all names and values might be UrlEncoded and you have to decode them, first.
 </remarks>
	<see also="FillNameValueCollectionWith"/>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.ReFillNameValueCollection(System.Collections.Specialized.NameValueCollection,System.String)">
	<summary>
     Restore a NameValueCollection's content which has been previously converted to a string
 </summary>
	<param name="nameValueCollection">An already existing NameValueCollection which shall receive the new values</param>
	<param name="nameValueCollectionWithUrlEncoding">A string containing the UrlEncoded writing style of a NameValueCollection</param>
	<remarks>
     Please note: existing values in the collection won't be appended, they'll be overridden
 </remarks>
	<see also="JoinNameValueCollectionWithUrlEncodingToString"/>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.ConvertHTMLToText(System.String)">
	<summary>
     Converts HTML messages to simple text
 </summary>
	<param name="HTML">A string with HTML code</param>
	<returns>The rendered output as plain text</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.HighlightLinksInMessage(System.String)">
	<summary>
     Converts URLs and e-mail addresses in a string into HTML hyperlinks
 </summary>
	<param name="Text">The standard text without any HTML</param>
	<returns>HTML with hyperlinks</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.ValidateEmailAddress(System.String)">
	<summary>
     Check validity of an email address
 </summary>
	<param name="emailAddress">email address to be validated</param>
	<returns>True if email address is syntactically valid else false</returns>
</member><member name="M:CompuMaster.camm.WebManager.UtilsCompatibility.ValidateInternetUrl(System.String)">
	<summary>
     Check validity of an URL
 </summary>
	<param name="url">URL to be validated</param>
	<returns>True if URL is syntactically valid else false</returns>
</member><member name="T:CompuMaster.camm.WebManager.StringArrayConverter">
	<summary>
     Allow a string array property to be filled by a comma separated string
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.IntegerArrayConverter">
	<summary>
     Allow an integer array property to be filled by a comma separated string
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.DummyValidatorForAppearanceInValidationSummary">
	<summary>
 The validation summary control works by iterating over the Page.Validators
 collection and displaying the ErrorMessage property of each validator
 that return false for the IsValid() property.  This class will act 
 like all the other validators except it always is invalid and thus the 
 ErrorMessage property will always be displayed.
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Tools.IO.NamespaceDoc">
	<summary>
     Filesystem Input/Output operations
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Tools.IO.Junctions.LinkingFileExists(System.String,CompuMaster.camm.WebManager.Tools.IO.Junctions.LinkTypes)">
	<summary>
 Checks for existance of a linking file
 </summary>
	<param name="Path"></param>
	<param name="LinkType"></param>
	<returns>Returns true if the file exists and the file is a link to another file.</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.IO.Junctions.LinkingFolderExists(System.String,CompuMaster.camm.WebManager.Tools.IO.Junctions.LinkTypes)">
	<summary>
 Checks for existance of a linking folder
 </summary>
	<param name="Path"></param>
	<param name="LinkType"></param>
	<returns>Returns true if the folder exists and the folder is a link to another folder.</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.IO.Junctions.ExistsAsItemInASubLevelOfAJunctionFolder(System.String,CompuMaster.camm.WebManager.Tools.IO.Junctions.LinkTypes)">
	<summary>
 Checks if a file or folder is a sub element of an arbitrary hirarchy level of the folder structure on the current workstation
 This information is helpfull to detect if a file or folder exists two or more times in reality and if e. g. a removal of this item would influence a second folder structure.
 </summary>
	<param name="Path"></param>
	<param name="LinkType"></param>
	<returns>Returns true if this file or folder exists</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.IO.Junctions.GetLinkType(System.String)">
	<summary>
	</summary>
	<param name="Path"></param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.IO.Junctions.Create(System.String,System.String,CompuMaster.camm.WebManager.Tools.IO.Junctions.LinkTypeDirectives)">
	<summary>
 Creates a junction link
 </summary>
	<param name="ExistingFileSystemObject"></param>
	<param name="NewLinkingFileSystemObject"></param>
	<param name="LinkType"></param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.IO.Junctions.Delete(System.String)">
	<summary>
 Deletes a link
 </summary>
	<param name="linkLocation"></param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.IO.Junctions.Delete(System.String,CompuMaster.camm.WebManager.Tools.IO.Junctions.LinkTypeDirectives)">
	<summary>
 Deletes a given LinkType link
 </summary>
	<param name="LinkLocation"></param>
	<param name="LinkType"></param>
</member><member name="T:CompuMaster.camm.WebManager.Tools.IO.Junctions.LinkTypeDirectives">
	<summary>
 None: Real file (copy) 
 Auto: Automatic decision in following order: hard link, soft link, file link.
 HardLink: Also JunctionLinks, only available on local NTFS volumes, the NTFS does all the work. This technique is transparent to windows and all applications.
 SoftLink: Soft links are not .LNK files! They can appear in windows explorer as normal folders/files. Windows handles the soft links, not the files system. Applications may need to support soft links to use their full functionality.
 FileLink: File links are the well known .LNK files which you see in your windows start menu for example.
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Tools.IO.Junctions.LinkTypes">
	<summary>
 HardLink: Also JunctionLinks, only available on local NTFS volumes, the NTFS does all the work. This technique is transparent to windows and all applications.
 SoftLink: Soft links are not .LNK files! They can appear in windows explorer as normal folders/files. Windows handles the soft links, not the files system. Applications may need to support soft links to use their full functionality.
 FileLink: File links are the well known .LNK files which you see in your windows start menu for example.
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Tools.IO.Junctions.GetFileSystem(System.String)">
	<summary>
 GefFileSystem returns the file system type of root directory of the the given path (e. g. from D: instead of D:\temp\).
 This problematic behaviour should be fixed in a later version and should return the file system of the given path itself (to support volumes without drive letters in Win2K or newer and Linux, too).
 </summary>
	<param name="Path">Path to get the file system type of</param>
	<returns>One of the following file system types: "NTFS", "" (for any unknown/unsupported file systems)</returns>
</member><member name="T:CompuMaster.camm.WebManager.Tools.IO.Junctions">
	<summary>
     Hardlinks, Softlinks and Junctions
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Tools.Data.NamespaceDoc">
	<summary>
     CompuMaster common tools and utilities
 </summary>
	<remarks>
		Changes on this file only after discussion with Jochen Wezel!!
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.SqlClient.ExecuteNonQuery(System.String,System.String,System.Data.CommandType,System.Data.SqlClient.SqlParameter[])">
	<summary>
     Executes a command scalar and returns the value
 </summary>
	<param name="ConnectionString">The connection string to the database</param>
	<param name="CommandText">The command text</param>
	<param name="CommandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.SqlClient.ExecuteScalar(System.String,System.String,System.Data.CommandType,System.Data.SqlClient.SqlParameter[])">
	<summary>
     Executes a command scalar and returns the value
 </summary>
	<param name="ConnectionString">The connection string to the database</param>
	<param name="CommandText">The command text</param>
	<param name="CommandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.SqlClient.ExecuteReaderAndPutFirstColumnIntoArrayList(System.String,System.String,System.Data.CommandType,System.Data.SqlClient.SqlParameter[])">
	<summary>
     Executes a command with a data reader and returns the values of the first column
 </summary>
	<param name="ConnectionString">The connection string to the database</param>
	<param name="CommandText">The command text</param>
	<param name="CommandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.SqlClient.ExecuteReaderAndPutFirstTwoColumnsIntoHashtable(System.String,System.String,System.Data.CommandType,System.Data.SqlClient.SqlParameter[])">
	<summary>
     Executes a command with a data reader and returns the values of the first two columns
 </summary>
	<param name="ConnectionString">The connection string to the database</param>
	<param name="CommandText">The command text</param>
	<param name="CommandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
	<returns>A hashtable with the values of the first column in the hashtable's key field and the second column values in the hashtable's value field</returns>
	<remarks>
 ATTENTION: Please note that multiple but equal values from the first column will result in 1 key/value pair since hashtables use a unique key and override the value with the last assignment. Alternatively you may want to receive an array of DictionaryEntry.
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.Tools.Data.DataQuery.SqlClient">
	<summary>
     Common routines to query data from a sql server database
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.CreateConnection(System.String,System.String)">
	<summary>
     Create a new database connection by reflection of a type name
 </summary>
	<param name="assemblyName">The assembly which implements the desired connection type</param>
	<param name="connectionTypeName">The case-insensitive type name of the connection class, e. g. System.Data.SqlClient.SqlConnection</param>
	<returns>The created connection object as an IDbConnection</returns>
	<remarks>
     Errors will be thrown in case of unresolvable parameter values or if the created type can't be casted into an IDbConnection.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.CreateConnection(System.String,System.String,System.String)">
	<summary>
     Create a new database connection by reflection of a type name
 </summary>
	<param name="assemblyName">The assembly which implements the desired connection type</param>
	<param name="connectionTypeName">The case-insensitive type name of the connection class, e. g. System.Data.SqlClient.SqlConnection</param>
	<param name="connectionString">A connection string to be used for this connection</param>
	<returns>The created connection object as an IDbConnection</returns>
	<remarks>
     Errors will be thrown in case of unresolvable parameter values or if the created type can't be casted into an IDbConnection.
 </remarks>
</member><member name="T:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations">
	<summary>
     Automations for the connection in charge
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteNonQuery(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDataParameter[],CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations,System.Int32)">
	<summary>
     Executes a command without returning any data
 </summary>
	<param name="dbConnection">The connection to the database</param>
	<param name="commandText">The command text</param>
	<param name="commandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
	<param name="automations">Automation options for the connection</param>
	<param name="commandTimeout">A timeout value in seconds for the command object (negative values will be ignored and leave the timeout value on default)</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteNonQuery(System.Data.IDbCommand,CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations)">
	<summary>
     Executes a command without returning any data
 </summary>
	<param name="dbCommand">The command with an assigned connection property value</param>
	<param name="automations">Automation options for the connection</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteNonQuery(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDataParameter[],CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations)">
	<summary>
     Executes a command without returning any data
 </summary>
	<param name="dbConnection">The connection to the database</param>
	<param name="commandText">The command text</param>
	<param name="commandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
	<param name="automations">Automation options for the connection</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteNonQuery(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDataParameter[])">
	<summary>
     Executes a command without returning any data
 </summary>
	<param name="dbConnection">The connection to the database</param>
	<param name="commandText">The command text</param>
	<param name="commandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteScalar(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDataParameter[],CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations)">
	<summary>
     Executes a command scalar and returns the value
 </summary>
	<param name="dbConnection">The connection to the database</param>
	<param name="commandText">The command text</param>
	<param name="commandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
	<param name="automations">Automation options for the connection</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteScalar(System.Data.IDbCommand,CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations)">
	<summary>
     Executes a command scalar and returns the value
 </summary>
	<param name="dbCommand">The command with an assigned connection property value</param>
	<param name="automations">Automation options for the connection</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.DataException.ConvertParameterCollectionToString(System.Data.IDataParameterCollection)">
	<summary>
     Convert the collection with all the parameters to a plain text string
 </summary>
	<param name="parameters">An IDataParameterCollection of a IDbCommand</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.DataException.ToString">
	<summary>
     The complete and detailed exception information inclusive the command text
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.DataException">
	<summary>
     Data execution exceptions with details on the executed IDbCommand
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteScalar(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDataParameter[])">
	<summary>
     Executes a command scalar and returns the value
 </summary>
	<param name="dbConnection">The connection to the database</param>
	<param name="commandText">The command text</param>
	<param name="commandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteReaderAndPutFirstColumnIntoArrayList(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDataParameter[],CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations)">
	<summary>
     Executes a command with a data reader and returns the values of the first column
 </summary>
	<param name="dbConnection">The connection to the database</param>
	<param name="commandText">The command text</param>
	<param name="commandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
	<param name="automations">Automation options for the connection</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteReaderAndPutFirstColumnIntoArrayList(System.Data.IDbCommand,CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations)">
	<summary>
     Executes a command with a data reader and returns the values of the first column
 </summary>
	<param name="dbCommand">The command object which shall be executed</param>
	<param name="automations">Automation options for the connection</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteReaderAndPutFirstColumnIntoArrayList(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDataParameter[])">
	<summary>
     Executes a command with a data reader and returns the values of the first column
 </summary>
	<param name="dbConnection">The connection to the database</param>
	<param name="commandText">The command text</param>
	<param name="commandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteReaderAndPutFirstTwoColumnsIntoHashtable(System.Data.IDbCommand,CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations)">
	<summary>
     Executes a command with a data reader and returns the values of the first column
 </summary>
	<param name="dbCommand">The command object which shall be executed</param>
	<param name="automations">Automation options for the connection</param>
	<returns>A hashtable with the values of the first column in the hashtable's key field and the second column values in the hashtable's value field</returns>
	<remarks>
 ATTENTION: Please note that multiple but equal values from the first column will result in 1 key/value pair since hashtables use a unique key and override the value with the last assignment. Alternatively you may want to receive an array of DictionaryEntry.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteReaderAndPutFirstTwoColumnsIntoHashtable(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDataParameter[],CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations)">
	<summary>
     Executes a command with a data reader and returns the values of the first two columns
 </summary>
	<param name="dbConnection">The connection to the database</param>
	<param name="commandText">The command text</param>
	<param name="commandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
	<param name="automations">Automation options for the connection</param>
	<returns>A hashtable with the values of the first column in the hashtable's key field and the second column values in the hashtable's value field</returns>
	<remarks>
 ATTENTION: Please note that multiple but equal values from the first column will result in 1 key/value pair since hashtables use a unique key and override the value with the last assignment. Alternatively you may want to receive an array of DictionaryEntry.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteReaderAndPutFirstTwoColumnsIntoDictionaryEntryArray(System.Data.IDbCommand,CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations)">
	<summary>
     Executes a command with a data reader and returns the values of the first two columns
 </summary>
	<param name="dbCommand">The prepared command to the database</param>
	<param name="automations">Automation options for the connection</param>
	<returns>An array of DictionaryEntry with the values of the first column as the key element and the second column values in the value element of the DictionaryEntry</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteReaderAndPutFirstTwoColumnsIntoDictionaryEntryArray(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDataParameter[],CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations)">
	<summary>
     Executes a command with a data reader and returns the values of the first two columns
 </summary>
	<param name="dbConnection">The connection to the database</param>
	<param name="commandText">The command text</param>
	<param name="commandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
	<param name="automations">Automation options for the connection</param>
	<returns>An array of DictionaryEntry with the values of the first column as the key element and the second column values in the value element of the DictionaryEntry</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteReaderAndPutFirstTwoColumnsIntoHashtable(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDataParameter[])">
	<summary>
     Executes a command with a data reader and returns the values of the first two columns
 </summary>
	<param name="dbConnection">The connection to the database</param>
	<param name="commandText">The command text</param>
	<param name="commandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
	<returns>A hashtable with the values of the first column in the hashtable's key field and the second column values in the hashtable's value field</returns>
	<remarks>
 ATTENTION: Please note that multiple but equal values from the first column will result in 1 key/value pair since hashtables use a unique key and override the value with the last assignment. Alternatively you may want to receive an array of DictionaryEntry.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteReader(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDataParameter[],CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations,System.Int32)">
	<summary>
     Executes a command and return the data reader object for it
 </summary>
	<param name="dbConnection">The connection to the database</param>
	<param name="commandText">The command text</param>
	<param name="commandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
	<param name="automations">Automation options for the connection</param>
	<param name="commandTimeout">A timeout value in seconds for the command object (negative values will be ignored and leave the timeout value on default)</param>
	<remarks>
     Automations can only open a connection, but never close. This is because you have to close the connection by yourself AFTER you walked through the data reader.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteReader(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDataParameter[],CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations)">
	<summary>
     Executes a command and return the data reader object for it
 </summary>
	<param name="dbConnection">The connection to the database</param>
	<param name="commandText">The command text</param>
	<param name="commandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.ExecuteReader(System.Data.IDbCommand,CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations)">
	<summary>
     Executes a command and return the data reader object for it
 </summary>
	<param name="dbCommand">The command with an assigned connection property value</param>
	<param name="automations">Automation options for the connection</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.FillDataTable(System.Data.IDbCommand,CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations,System.String)">
	<summary>
     Fill a new data table with the result of a command
 </summary>
	<param name="dbCommand">The command object</param>
	<param name="automations">Automation options for the connection</param>
	<param name="tableName">The name for the new table</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.FillDataTable(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDataParameter[],CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations,System.String,System.Int32)">
	<summary>
     Fill a new data table with the result of a command
 </summary>
	<param name="dbConnection">The connection to the database</param>
	<param name="commandText">The command text</param>
	<param name="commandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
	<param name="automations">Automation options for the connection</param>
	<param name="tableName">The name for the new table</param>
	<param name="commandTimeout">A timeout value in seconds for the command object (negative values will be ignored and leave the timeout value on default)</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.FillDataTable(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDataParameter[],CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations,System.String)">
	<summary>
     Fill a new data table with the result of a command
 </summary>
	<param name="dbConnection">The connection to the database</param>
	<param name="commandText">The command text</param>
	<param name="commandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
	<param name="automations">Automation options for the connection</param>
	<param name="tableName">The name for the new table</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.FillDataTable(System.Data.IDbConnection,System.String,System.Data.CommandType,System.Data.IDataParameter[],CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations)">
	<summary>
     Fill a new data table with the result of a command
 </summary>
	<param name="dbConnection">The connection to the database</param>
	<param name="commandText">The command text</param>
	<param name="commandType">The command type</param>
	<param name="sqlParameters">An optional list of SqlParameters</param>
	<param name="automations">Automation options for the connection</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.FillDataTables(System.Data.IDbCommand,CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.Automations)">
	<summary>
     Fill a new data table with the result of a command
 </summary>
	<param name="dbCommand">The command object</param>
	<param name="automations">Automation options for the connection</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.CloseAndDisposeConnection(System.Data.IDbConnection)">
	<summary>
     Securely close and dispose a database connection
 </summary>
	<param name="connection">The connection to close and dispose</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.CloseAndDisposeCommandAndConnection(System.Data.IDbCommand)">
	<summary>
 Securely close and dispose a connection inclusive its database connection
 </summary>
	<param name="command"></param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.CloseConnection(System.Data.IDbConnection)">
	<summary>
     Securely close a database connection
 </summary>
	<param name="connection">The connection to close</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider.OpenConnection(System.Data.IDbConnection)">
	<summary>
     Open a database connection if it is not already opened
 </summary>
	<param name="connection">The connection to open</param>
</member><member name="T:CompuMaster.camm.WebManager.Tools.Data.DataQuery.AnyIDataProvider">
	<summary>
     Common routines to query data from any data provider
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.DataReaderUtils.ContainsColumn(System.Data.IDataReader,System.String)">
	<summary>
 Lookup if the reader contains a result column with the requested name
 </summary>
	<param name="reader">A data reader object</param>
	<param name="columnName">The name of the column which shall be identified</param>
	<returns>True if the column exist else False</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.DataReaderUtils.ColumnNames(System.Data.IDataReader)">
	<summary>
 Return the column names of a data reader as a String array
 </summary>
	<param name="reader">A data reader object</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataQuery.DataReaderUtils.DataTypes(System.Data.IDataReader)">
	<summary>
 Return the column data types of a data reader as an array
 </summary>
	<param name="reader">A data reader object</param>
</member><member name="T:CompuMaster.camm.WebManager.Tools.Data.DataQuery.DataReaderUtils">
	<summary>
 Methods for simplifying the handling with data readers
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.ReadDataTableFromCsvReader(System.IO.StreamReader,System.Boolean,System.Globalization.CultureInfo,System.Int32[],System.Boolean)">
	<summary>
     Read from a CSV table
 </summary>
	<param name="reader">A stream reader targetting CSV data</param>
	<param name="includesColumnHeaders">Indicates wether column headers are present</param>
	<param name="columnWidths">An array of column widths in their order</param>
	<param name="convertEmptyStringsToDBNull">Convert values with empty strings automatically to DbNull</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.ReadDataTableFromCsvFile(System.String,System.Boolean,System.Int32[],System.String,System.Boolean)">
	<summary>
     Read from a CSV file
 </summary>
	<param name="path">The path of the file</param>
	<param name="includesColumnHeaders">Indicates wether column headers are present</param>
	<param name="columnWidths">An array of column widths in their order</param>
	<param name="encoding">The text encoding of the file</param>
	<param name="convertEmptyStringsToDBNull">Convert values with empty strings automatically to DbNull</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.ReadDataTableFromCsvFile(System.String,System.Boolean,System.Int32[],System.Text.Encoding,System.Globalization.CultureInfo,System.Boolean)">
	<summary>
     Read from a CSV file
 </summary>
	<param name="path">The path of the file</param>
	<param name="includesColumnHeaders">Indicates wether column headers are present</param>
	<param name="columnWidths">An array of column widths in their order</param>
	<param name="encoding">The text encoding of the file</param>
	<param name="cultureFormatProvider"></param>
	<param name="convertEmptyStringsToDBNull">Convert values with empty strings automatically to DbNull</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.ReadDataTableFromCsvString(System.String,System.Boolean,System.Int32[],System.Boolean)">
	<summary>
     Read from a CSV table
 </summary>
	<param name="data">The content of a CSV file</param>
	<param name="includesColumnHeaders">Indicates wether column headers are present</param>
	<param name="columnWidths">An array of column widths in their order</param>
	<param name="convertEmptyStringsToDBNull">Convert values with empty strings automatically to DbNull</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.ReadDataTableFromCsvString(System.String,System.Boolean,System.Globalization.CultureInfo,System.Int32[],System.Boolean)">
	<summary>
     Read from a CSV table
 </summary>
	<param name="data">The content of a CSV file</param>
	<param name="includesColumnHeaders">Indicates wether column headers are present</param>
	<param name="cultureFormatProvider"></param>
	<param name="columnWidths">An array of column widths in their order</param>
	<param name="convertEmptyStringsToDBNull">Convert values with empty strings automatically to DbNull</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.SplitFixedCsvLineIntoCellValues(System.String@,System.Collections.ArrayList,System.Int32@,System.Int32[])">
	<summary>
     Split a line content into separate column values and add them to the output list
 </summary>
	<param name="lineContent">The line content as it has been read from the CSV file</param>
	<param name="outputList">An array list which shall hold the separated column values</param>
	<param name="startPosition">The start position to which the columnWidhts are related to</param>
	<param name="columnWidths">An array of column widths in their order</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.SplitFixedCsvLineIntoCellValuesIsNewColumnPosition(System.Int32,System.Int32,System.Int32[])">
	<summary>
     Calculate if the current position is the first position of a new column
 </summary>
	<param name="currentPosition">The current position in the whole document</param>
	<param name="startPosition">The start position to which the columnWidhts are related to</param>
	<param name="columnWidths">An array containing the definitions of the column widths</param>
	<returns>True if the current position identifies a new column value, otherwise False</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.ReadDataTableFromCsvFile(System.String,System.Boolean,System.String,System.Char,System.Char,System.Boolean,System.Boolean)">
	<summary>
     Read from a CSV file
 </summary>
	<param name="path">The path of the file</param>
	<param name="includesColumnHeaders">Indicates wether column headers are present</param>
	<param name="encoding">The text encoding of the file</param>
	<param name="columnSeparator">Choose the required character for splitting the columns. Set to null (Nothing in VisualBasic) to enable fixed column widths mode</param>
	<param name="recognizeTextBy">A character indicating the start and end of text strings</param>
	<param name="recognizeMultipleColumnSeparatorCharsAsOne">Currently without purpose</param>
	<param name="convertEmptyStringsToDBNull">Convert values with empty strings automatically to DbNull</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.ReadDataTableFromCsvFile(System.String,System.Boolean,System.Text.Encoding,System.Globalization.CultureInfo,System.Char,System.Boolean,System.Boolean)">
	<summary>
     Read from a CSV file
 </summary>
	<param name="Path">The path of the file</param>
	<param name="IncludesColumnHeaders">Indicates wether column headers are present</param>
	<param name="Encoding">The text encoding of the file</param>
	<param name="cultureFormatProvider"></param>
	<param name="RecognizeTextBy">A character indicating the start and end of text strings</param>
	<param name="recognizeMultipleColumnSeparatorCharsAsOne">Currently without purpose</param>
	<param name="convertEmptyStringsToDBNull">Convert values with empty strings automatically to DbNull</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.ReadDataTableFromCsvReader(System.IO.StreamReader,System.Boolean,System.Globalization.CultureInfo,System.Char,System.Char,System.Boolean,System.Boolean)">
	<summary>
     Read from a CSV table
 </summary>
	<param name="reader">A stream reader targetting CSV data</param>
	<param name="includesColumnHeaders">Indicates wether column headers are present</param>
	<param name="columnSeparator">Choose the required character for splitting the columns. Set to null (Nothing in VisualBasic) to enable fixed column widths mode</param>
	<param name="recognizeTextBy">A character indicating the start and end of text strings</param>
	<param name="recognizeDoubledColumnSeparatorCharAsOne">Currently without purpose</param>
	<param name="convertEmptyStringsToDBNull">Convert values with empty strings automatically to DbNull</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.SplitCsvLineIntoCellValues(System.String@,System.Collections.ArrayList,System.Int32@,System.Char,System.Char,System.Boolean)">
	<summary>
     Split a line content into separate column values and add them to the output list
 </summary>
	<param name="lineContent">The line content as it has been read from the CSV file</param>
	<param name="outputList">An array list which shall hold the separated column values</param>
	<param name="startposition"></param>
	<param name="columnSeparator"></param>
	<param name="recognizeTextBy"></param>
	<param name="recognizeDoubledColumnSeparatorCharAsOne"></param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.ReadDataTableFromCsvString(System.String,System.Boolean,System.Char,System.Char,System.Boolean,System.Boolean)">
	<summary>
     Read from a CSV table
 </summary>
	<param name="data">The content of a CSV file</param>
	<param name="includesColumnHeaders">Indicates wether column headers are present</param>
	<param name="columnSeparator">Choose the required character for splitting the columns. Set to null (Nothing in VisualBasic) to enable fixed column widths mode</param>
	<param name="recognizeTextBy">A character indicating the start and end of text strings</param>
	<param name="recognizeDoubledColumnSeparatorCharAsOne">Currently without purpose</param>
	<param name="convertEmptyStringsToDBNull">Convert values with empty strings automatically to DbNull</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.ReadDataTableFromCsvString(System.String,System.Boolean,System.Globalization.CultureInfo,System.Char,System.Boolean,System.Boolean)">
	<summary>
     Read from a CSV table
 </summary>
	<param name="data">The content of a CSV file</param>
	<param name="IncludesColumnHeaders">Indicates wether column headers are present</param>
	<param name="cultureFormatProvider"></param>
	<param name="RecognizeTextBy">A character indicating the start and end of text strings</param>
	<param name="recognizeDoubledColumnSeparatorCharAsOne">Currently without purpose</param>
	<param name="convertEmptyStringsToDBNull">Convert values with empty strings automatically to DbNull</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.ConvertDBNullValuesToEmptyStrings(System.Data.DataTable)">
	<summary>
     Convert DBNull values to empty strings
 </summary>
	<param name="data">The data which might contain DBNull values</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.ConvertEmptyStringsToDBNullValue(System.Data.DataTable)">
	<summary>
     Convert empty string values to DBNull
 </summary>
	<param name="data">The data which might contain empty strings</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.FixedLengthText(System.String,System.Int32,System.Boolean)">
	<summary>
     Trims a string to exactly the required fix size
 </summary>
	<param name="text"></param>
	<param name="fixedLengthSize"></param>
	<param name="alignedRight">Add additionally required spaces on the left (True) or on the right (False)</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.ConvertDataTableToCsv(System.Data.DataTable,System.Boolean,System.Globalization.CultureInfo,System.Int32[])">
	<summary>
     Convert the datatable to a string based, comma-separated format
 </summary>
	<param name="dataTable"></param>
	<param name="includesColumnHeaders"></param>
	<param name="cultureFormatProvider"></param>
	<param name="columnWidths"></param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.ConvertDataTableToCsv(System.Data.DataTable,System.Boolean,System.Globalization.CultureInfo,System.String,System.Char)">
	<summary>
     Convert the datatable to a string based, comma-separated format
 </summary>
	<param name="dataTable"></param>
	<param name="includesColumnHeaders"></param>
	<param name="cultureFormatProvider"></param>
	<param name="columnSeparator"></param>
	<param name="recognizeTextBy"></param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.WriteDataTableToCsvFile(System.String,System.Data.DataTable,System.Boolean,System.String,System.String,System.Char,System.Char)">
	<summary>
     Write to a CSV file
 </summary>
	<param name="path">The path of the file</param>
	<param name="dataTable"></param>
	<param name="includesColumnHeaders">Indicates wether column headers are present</param>
	<param name="encoding">The text encoding of the file</param>
	<param name="columnSeparator">Choose the required character for splitting the columns. Set to null (Nothing in VisualBasic) to enable fixed column widths mode</param>
	<param name="recognizeTextBy">A character indicating the start and end of text strings</param>
	<param name="decimalSeparator">A character indicating the decimal separator in the text string</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.WriteDataTableToCsvString(System.Data.DataTable,System.Boolean,System.String,System.Char,System.Char,System.Char)">
	<summary>
     Create a CSV table
 </summary>
	<param name="dataTable"></param>
	<param name="includesColumnHeaders">Indicates wether column headers are present</param>
	<param name="encoding">The text encoding of the file</param>
	<param name="columnSeparator">Choose the required character for splitting the columns. Set to null (Nothing in VisualBasic) to enable fixed column widths mode</param>
	<param name="recognizeTextBy">A character indicating the start and end of text strings</param>
	<param name="decimalSeparator"></param>
	<returns>A string containing the CSV table</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.WriteDataTableToCsvBytes(System.Data.DataTable,System.Boolean,System.String,System.Char,System.Char,System.Char)">
	<summary>
     Create a CSV table
 </summary>
	<param name="dataTable"></param>
	<param name="includesColumnHeaders">Indicates wether column headers are present</param>
	<param name="encoding">The text encoding of the file</param>
	<param name="columnSeparator">Choose the required character for splitting the columns. Set to null (Nothing in VisualBasic) to enable fixed column widths mode</param>
	<param name="recognizeTextBy">A character indicating the start and end of text strings</param>
	<param name="decimalSeparator"></param>
	<returns>A string containing the CSV table</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.WriteDataTableToCsvBytes(System.Data.DataTable,System.Boolean,System.Text.Encoding,System.Globalization.CultureInfo,System.Char,System.Char)">
	<summary>
     Create a CSV table
 </summary>
	<param name="dataTable"></param>
	<param name="includesColumnHeaders">Indicates wether column headers are present</param>
	<param name="encoding">The text encoding of the file</param>
	<param name="cultureFormatProvider">A globalization information object for the conversion of all data to strings</param>
	<param name="columnSeparator">Choose the required character for splitting the columns. Set to null (Nothing in VisualBasic) to enable fixed column widths mode</param>
	<param name="recognizeTextBy">A character indicating the start and end of text strings</param>
	<returns>A string containing the CSV table</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.WriteDataTableToCsvMemoryStream(System.Data.DataTable,System.Boolean,System.String,System.String,System.Char,System.Char)">
	<summary>
     Create a CSV table
 </summary>
	<param name="dataTable"></param>
	<param name="includesColumnHeaders">Indicates wether column headers are present</param>
	<param name="encoding">The text encoding of the file</param>
	<param name="columnSeparator">Choose the required character for splitting the columns. Set to null (Nothing in VisualBasic) to enable fixed column widths mode</param>
	<param name="recognizeTextBy">A character indicating the start and end of text strings</param>
	<param name="decimalSeparator"></param>
	<returns>A memory stream containing all texts as bytes in Unicode format</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.WriteDataTableToCsvMemoryStream(System.Data.DataTable,System.Boolean,System.Text.Encoding,System.Globalization.CultureInfo,System.String,System.Char)">
	<summary>
     Create a CSV table
 </summary>
	<param name="dataTable"></param>
	<param name="includesColumnHeaders">Indicates wether column headers are present</param>
	<param name="encoding">The text encoding of the file</param>
	<param name="cultureFormatProvider">A globalization information object for the conversion of all data to strings</param>
	<param name="columnSeparator">Choose the required character for splitting the columns. Set to null (Nothing in VisualBasic) to enable fixed column widths mode</param>
	<param name="recognizeTextBy">A character indicating the start and end of text strings</param>
	<returns>A memory stream containing all texts as bytes in Unicode format</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.CsvEncode(System.String,System.Char)">
	<summary>
     Encode a string into CSV encoding
 </summary>
	<param name="value">The unencoded text</param>
	<param name="recognizeTextBy">The character to identify a string in the CSV file</param>
	<returns>The encoded writing style of the given text</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Csv.WriteDataViewToCsvFile(System.String,System.Data.DataView,System.Boolean,System.String,System.String,System.Char,System.Char)">
	<summary>
     Write to a CSV file
 </summary>
	<param name="path">The path of the file</param>
	<param name="dataView">A dataview object with the desired rows</param>
	<param name="includesColumnHeaders">Indicates wether column headers are present</param>
	<param name="encoding">The text encoding of the file</param>
	<param name="columnSeparator">Choose the required character for splitting the columns. Set to null (Nothing in VisualBasic) to enable fixed column widths mode</param>
	<param name="recognizeTextBy">A character indicating the start and end of text strings</param>
</member><member name="T:CompuMaster.camm.WebManager.Tools.Data.Csv">
	<summary>
     Provides simplified access to CSV files
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.RemoveDuplicates(System.Data.DataTable,System.String)">
	<summary>
 Remove rows with duplicate values in a given column
 </summary>
	<param name="dataTable">A datatable with duplicate values</param>
	<param name="columnName">Column name of the datatable which contains the duplicate values</param>
	<returns>A datatable with unique records in the specified column</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.KeepColumnsAndRemoveAllOthers(System.Data.DataTable,System.String[])">
	<summary>
     Drop all columns except the required ones
 </summary>
	<param name="table">A data table containing some columns</param>
	<param name="remainingColumns">A list of column names which shall not be removed</param>
	<remarks>
     If the list of the remaining columns contains some column names which are not existing, then those column names will be ignored. There will be no exception in this case.
     The names of the columns are handled case-insensitive.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.RowIndex(System.Data.DataRow)">
	<summary>
     Lookup the row index for a data row in a data table
 </summary>
	<param name="dataRow">The data row whose index number is required</param>
	<returns>An index number for the given data row</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.FindDuplicates(System.Data.DataColumn)">
	<summary>
     Find duplicate values in a given row and calculate the number of occurances of each value in the table
 </summary>
	<param name="column">A column of a datatable</param>
	<returns>A hashtable containing the origin column value as key and the number of occurances as value</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.FindDuplicates(System.Data.DataColumn,System.Int32)">
	<summary>
     Find duplicate values in a given row and calculate the number of occurances of each value in the table
 </summary>
	<param name="column">A column of a datatable</param>
	<param name="minOccurances">Only values with occurances equal or more than this number will be returned</param>
	<returns>A hashtable containing the origin column value as key and the number of occurances as value</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertDataTableToWinFormsListControlItem(System.Data.DataTable)">
	<summary>
     Convert the first two columns into objects which can be consumed by the ListControl objects in the System.Windows.Forms namespaces
 </summary>
	<param name="datatable">The datatable which contains a key column and a value column for the list control</param>
	<returns>An array of WinFormsListControlItem</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertDatasetToXml(System.Data.DataSet)">
	<summary>
     Convert a dataset to an xml string with data and schema information
 </summary>
	<param name="dataset"></param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertXmlToDataset(System.String)">
	<summary>
     Convert an xml string to a dataset
 </summary>
	<param name="xml"></param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.GetDataTableWithSubsetOfRows(System.Data.DataTable,System.Int32)">
	<summary>
     Create a new data table clone with only some first rows
 </summary>
	<param name="SourceTable">The source table to be copied</param>
	<param name="NumberOfRows">The number of rows to be copied</param>
	<returns>The new clone of the datatable</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.GetDataTableWithSubsetOfRows(System.Data.DataTable,System.Int32,System.Int32)">
	<summary>
     Create a new data table clone with only some first rows
 </summary>
	<param name="SourceTable">The source table to be copied</param>
	<param name="StartAtRow">The position where to start the copy process, the first row is at 0</param>
	<param name="NumberOfRows">The number of rows to be copied</param>
	<returns>The new clone of the datatable</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.RemoveRowsWithNoCorrespondingValueInComparisonTable(System.Data.DataColumn,System.Data.DataColumn)">
	<summary>
     Remove those rows in the source column which haven't got the same value in the compare table
 </summary>
	<param name="sourceColumn">This is the column of the master table where all operations shall be executed</param>
	<param name="valuesMustExistInThisColumnToKeepTheSourceRow">This is the comparison value against the source table's column</param>
	<returns>An arraylist of removed keys</returns>
	<remarks>
     Strings will be compared case-insensitive, DBNull values in the source table will always be removed
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.RemoveRowsWithNoCorrespondingValueInComparisonTable(System.Data.DataColumn,System.Data.DataColumn,System.Boolean,System.Boolean)">
	<summary>
     Remove those rows in the source column which haven't got the same value in the compare table
 </summary>
	<param name="sourceColumn">This is the column of the master table where all operations shall be executed</param>
	<param name="valuesMustExistInThisColumnToKeepTheSourceRow">This is the comparison value against the source table's column</param>
	<param name="ignoreCaseInStrings">Strings will be compared case-insensitive</param>
	<param name="alwaysRemoveDBNullValues">Always remove the source row when it contains a DBNull value</param>
	<returns>An arraylist of removed keys</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.CreateDataRowClone(System.Data.DataRow)">
	<summary>
     Creates a complete clone of a DataRow with structure as well as data
 </summary>
	<param name="sourceRow">The source row to be copied</param>
	<returns>The new clone of the DataRow</returns>
	<remarks>
     The resulting DataRow has got the schema from the sourceRow's DataTable, but it hasn't been added to the table yet.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.GetDataTableClone(System.Data.DataTable)">
	<summary>
     Creates a complete clone of a DataTable with structure as well as data
 </summary>
	<param name="SourceTable">The source table to be copied</param>
	<returns>The new clone of the datatable</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.GetDataTableClone(System.Data.DataTable,System.String)">
	<summary>
     Creates a complete clone of a DataTable with structure as well as data
 </summary>
	<param name="SourceTable">The source table to be copied</param>
	<param name="RowFilter">An additional row filter, for all rows set it to null (Nothing in VisualBasic)</param>
	<returns>The new clone of the datatable</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.GetDataTableClone(System.Data.DataTable,System.String,System.String)">
	<summary>
     Creates a complete clone of a DataTable with structure as well as data
 </summary>
	<param name="SourceTable">The source table to be copied</param>
	<param name="RowFilter">An additional row filter, for all rows set it to null (Nothing in VisualBasic)</param>
	<param name="Sort">An additional sort command</param>
	<returns>The new clone of the datatable</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.GetDataTableClone(System.Data.DataTable,System.String,System.String,System.Int32)">
	<summary>
     Creates a complete clone of a DataTable with structure as well as data
 </summary>
	<param name="SourceTable">The source table to be copied</param>
	<param name="RowFilter">An additional row filter, for all rows set it to null (Nothing in VisualBasic)</param>
	<param name="Sort">An additional sort command</param>
	<param name="topRows">How many rows from top shall be returned as maximum?</param>
	<returns>The new clone of the datatable</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.GetDataTableClone(System.Data.DataTable,System.Data.DataTable,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
     Creates a complete clone of a DataTable with structure as well as data
 </summary>
	<param name="sourceTable">The source table to be copied</param>
	<param name="destinationTable">The destination of all operations; the destination table will be a clone of the source table at the end</param>
	<param name="rowFilter">An additional row filter, for all rows set it to null (Nothing in VisualBasic)</param>
	<param name="sort">An additional sort command</param>
	<param name="topRows">How many rows from top shall be returned as maximum?</param>
	<param name="overwritePropertiesOfExistingColumns">Shall the data type or any other settings of an existing table be modified to match the source column's definition?</param>
	<param name="dropExistingRowsInDestinationTable">Remove the existing rows of the destination table, first</param>
	<param name="removeUnusedColumnsFromDestinationTable">Remove the existing columns of the destination table which are not present in the source table</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertDataViewToDataTable(System.Data.DataView)">
	<summary>
     Creates a clone of a dataview but as a new data table
 </summary>
	<param name="data">The data view to create the data table from</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertArrayListToDataTable(System.Collections.ArrayList)">
	<summary>
     Convert an ArrayList to a datatable
 </summary>
	<param name="arrayList">An ArrayList with some content</param>
	<returns>Datatable with column "key" and "value"</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertDataTableToArrayList(System.Data.DataColumn)">
	<summary>
     Convert a data table to an arraylist
 </summary>
	<param name="column">The column which shall be used to fill the arraylist</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertDataTableToArrayList(System.Data.DataTable)">
	<summary>
     Convert a data table to an arraylist
 </summary>
	<param name="data">The first column of this data table will be used</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertDataTableToArrayList(System.Data.DataTable,System.Int32)">
	<summary>
     Convert a data table to an arraylist
 </summary>
	<param name="data">The data table with the content</param>
	<param name="selectedColumnIndex">The column which shall be used to fill the arraylist</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertDataTableToHashtable(System.Data.DataColumn,System.Data.DataColumn)">
	<summary>
     Convert a data table to a hash table
 </summary>
	<param name="keyColumn">This is the key column from the data table and MUST BE UNIQUE</param>
	<param name="valueColumn">A column which contains the values</param>
	<remarks>
 ATTENTION: the very first column is used as key column and must be unique therefore
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertDataTableToHashtable(System.Data.DataTable)">
	<summary>
     Convert a data table to a hash table
 </summary>
	<param name="data">The first two columns of this data table will be used</param>
	<remarks>
     ATTENTION: the very first column is used as key column and must be unique therefore
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertDataTableToHashtable(System.Data.DataTable,System.Int32,System.Int32)">
	<summary>
     Convert a data table to a hash table
 </summary>
	<param name="data">The data table with the content</param>
	<param name="keyColumnIndex">This is the key column from the data table and MUST BE UNIQUE (make it unique, first!)</param>
	<param name="valueColumnIndex">A column which contains the values</param>
	<remarks>
     ATTENTION: the very first column is used as key column and must be unique therefore
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertDataTableToDictionaryEntryArray(System.Data.DataTable)">
	<summary>
     Convert a data table to an array of dictionary entries
 </summary>
	<param name="data">The first two columns of this data table will be used</param>
	<remarks>
     The very first column is used as key column, the second one as the value column
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertDataTableToDictionaryEntryArray(System.Data.DataColumn,System.Data.DataColumn)">
	<summary>
     Convert a data table to an array of dictionary entries
 </summary>
	<param name="keyColumn">This is the key column from the data table</param>
	<param name="valueColumn">A column which contains the values</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertDataTableToDictionaryEntryArray(System.Data.DataTable,System.Int32,System.Int32)">
	<summary>
     Convert a data table to an array of dictionary entries
 </summary>
	<param name="data">The data table with the content</param>
	<param name="keyColumnIndex">This is the key column from the data table</param>
	<param name="valueColumnIndex">A column which contains the values</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertHashtableToDataTable(System.Collections.Hashtable)">
	<summary>
     Convert a hashtable to a datatable
 </summary>
	<param name="hashtable">A hashtable with some content</param>
	<returns>Datatable with column "key" and "value"</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertICollectionToDataTable(System.Collections.ICollection)">
	<summary>
     Convert an ICollection to a datatable
 </summary>
	<param name="collection">An ICollection with some content</param>
	<returns>Datatable with column "key" and "value"</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertIDictionaryToDataTable(System.Collections.IDictionary)">
	<summary>
     Convert an IDictionary to a datatable
 </summary>
	<param name="dictionary">An IDictionary with some content</param>
	<returns>Datatable with column "key" and "value"</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertIDictionaryToDataTable(System.Collections.IDictionary,System.Boolean)">
	<summary>
     Convert an IDictionary to a datatable
 </summary>
	<param name="dictionary">An IDictionary with some content</param>
	<param name="keyIsUnique">If true, the key column in the data table will be marked as unique</param>
	<returns>Datatable with column "key" and "value"</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertNameValueCollectionToDataTable(System.Collections.Specialized.NameValueCollection)">
	<summary>
     Convert a NameValueCollection to a datatable
 </summary>
	<param name="nameValueCollection">An IDictionary with some content</param>
	<returns>Datatable with column "key" and "value"</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertNameValueCollectionToDataTable(System.Collections.Specialized.NameValueCollection,System.Boolean)">
	<summary>
     Convert a NameValueCollection to a datatable
 </summary>
	<param name="nameValueCollection">An IDictionary with some content</param>
	<param name="keyIsUnique">If true, the key column in the data table will be marked as unique</param>
	<returns>Datatable with column "key" and "value"</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.GetDataTableViaODBC(System.String,System.String,System.String)">
	<summary>
     Simplified creation of a DataTable by definition of a SQL statement and a connection string
 </summary>
	<param name="strSQL">The SQL statement to retrieve the data</param>
	<param name="ConnectionString">The connection string to the data source</param>
	<param name="NameOfNewDataTable">The name of the new DataTable</param>
	<returns>A filled DataTable</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.GetDataTableViaSqlClient(System.String,System.String,System.String)">
	<summary>
     Simplified creation of a DataTable by definition of a SQL statement and a connection string
 </summary>
	<param name="strSQL">The SQL statement to retrieve the data</param>
	<param name="ConnectionString">The connection string to the data source</param>
	<param name="NameOfNewDataTable">The name of the new DataTable</param>
	<returns>A filled DataTable</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertToHtmlTable(System.Data.DataTable)">
	<summary>
     Return a string with all columns and rows as an html table
 </summary>
	<param name="dataTable">The datatable to retrieve the content from</param>
	<returns>If no rows have been processed, the return string is nothing</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertToHtmlTable(System.Data.DataRowCollection,System.String)">
	<summary>
     Return a string with all columns and rows as an html table
 </summary>
	<param name="rows">The rows to be processed</param>
	<param name="label">An optional title of the rows</param>
	<returns>If no rows have been processed, the return string is nothing</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertToHtmlTable(System.Data.DataRow[],System.String)">
	<summary>
     Return a string with all columns and rows as an html table
 </summary>
	<param name="rows">The rows to be processed</param>
	<param name="label">An optional title of the rows</param>
	<returns>If no rows have been processed, the return string is nothing</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertToHtmlTable(System.Data.DataTable,System.String,System.String,System.String)">
	<summary>
     Return a string with all columns and rows as an html table
 </summary>
	<param name="dataTable">The datatable to retrieve the content from</param>
	<param name="titleTagOpener">The opening tag in front of the table's title</param>
	<param name="titleTagEnd">The closing tag after the table title</param>
	<param name="additionalTableAttributes">Additional attributes for the rendered table</param>
	<returns>If no rows have been processed, the return string is nothing</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertToHtmlTable(System.Data.DataRowCollection,System.String,System.String,System.String,System.String)">
	<summary>
     Return a string with all columns and rows as an html table
 </summary>
	<param name="rows">The rows to be processed</param>
	<param name="label">An optional title of the rows</param>
	<param name="titleTagOpener">The opening tag in front of the table's title</param>
	<param name="titleTagEnd">The closing tag after the table title</param>
	<param name="additionalTableAttributes">Additional attributes for the rendered table</param>
	<returns>If no rows have been processed, the return string is nothing</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertToHtmlTable(System.Data.DataRowCollection,System.String,System.String,System.String,System.String,System.Boolean)">
	<summary>
     Return a string with all columns and rows as an html table
 </summary>
	<param name="rows">The rows to be processed</param>
	<param name="label">An optional title of the rows</param>
	<param name="titleTagOpener">The opening tag in front of the table's title</param>
	<param name="titleTagEnd">The closing tag after the table title</param>
	<param name="additionalTableAttributes">Additional attributes for the rendered table</param>
	<param name="htmlEncodeCellContentAndLineBreaks">Encode all output to valid HTML</param>
	<returns>If no rows have been processed, the return string is nothing</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.HtmlEncodeLineBreaks(System.String)">
	<summary>
     Converts all line breaks into HTML line breaks ("&lt;br&gt;")
 </summary>
	<param name="Text"></param>
	<remarks>
     Supported line breaks are linebreaks of Windows, MacOS as well as Linux/Unix.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertToHtmlTable(System.Data.DataRow[],System.String,System.String,System.String,System.String)">
	<summary>
     Return a string with all columns and rows as an html table
 </summary>
	<param name="rows">The rows to be processed</param>
	<param name="label">An optional title of the rows</param>
	<param name="titleTagOpener">The opening tag in front of the table's title</param>
	<param name="titleTagEnd">The closing tag after the table title</param>
	<param name="additionalTableAttributes">Additional attributes for the rendered table</param>
	<returns>If no rows have been processed, the return string is nothing</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertToPlainTextTable(System.Data.DataTable)">
	<summary>
     Return a string with all columns and rows, helpfull for debugging purposes
 </summary>
	<param name="dataTable">The datatable to retrieve the content from</param>
	<returns>All rows are tab separated. If no rows have been processed, the user will get notified about this fact</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertToPlainTextTable(System.Data.DataRow[],System.String)">
	<summary>
     Return a string with all columns and rows, helpfull for debugging purposes
 </summary>
	<param name="rows">The rows to be processed</param>
	<param name="label">An optional title of the rows</param>
	<returns>All rows are tab separated. If no rows have been processed, the user will get notified about this fact</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables._ConvertToPlainTextTable(System.Data.DataRowCollection,System.String)">
	<summary>
     Return a string with all columns and rows, helpfull for debugging purposes
 </summary>
	<param name="rows">The rows to be processed</param>
	<param name="label">An optional title of the rows</param>
	<returns>All rows are tab separated. If no rows have been processed, the user will get notified about this fact</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.RemoveColumns(System.Data.DataTable,System.String[])">
	<summary>
     Remove the specified columns if they exist
 </summary>
	<param name="datatable">A datatable where the operations shall be made</param>
	<param name="columnNames">The names of the columns which shall be removed</param>
	<remarks>
     The columns will only be removed if they exist. If a column name doesn't exist, it will be ignored.
 </remarks>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertToPlainTextTable(System.Data.DataRowCollection,System.String)">
	<summary>
     Return a string with all columns and rows, helpfull for debugging purposes
 </summary>
	<param name="rows">The rows to be processed</param>
	<param name="label">An optional title of the rows</param>
	<returns>All rows are tab separated. If no rows have been processed, the user will get notified about this fact</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertDataReaderToDataSet(System.Data.IDataReader)">
	<summary>
     Convert any opened datareader into a dataset
 </summary>
	<param name="dataReader">An already opened dataReader</param>
	<returns>A dataset containing all datatables the dataReader was able to read</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertDataReaderToDataTable(System.Data.IDataReader)">
	<summary>
     Convert any opened datareader into a data table
 </summary>
	<param name="dataReader">An already opened dataReader</param>
	<returns>A data table containing all data the dataReader was able to read</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ConvertDataReaderToDataTable(System.Data.IDataReader,System.String)">
	<summary>
     Convert any opened datareader into a data table
 </summary>
	<param name="dataReader">An already opened dataReader</param>
	<param name="tableName">The name for the new table</param>
	<returns>A data table containing all data the dataReader was able to read</returns>
</member><member name="T:CompuMaster.camm.WebManager.Tools.Data.DataTables.DataReaderAdapter">
	<summary>
     A data adapter for data readers making the real conversion
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Tools.Data.DataTables.JoinTypes.Inner">
	<summary>
     The result contains only those rows which exist in both tables
 </summary>
</member><member name="F:CompuMaster.camm.WebManager.Tools.Data.DataTables.JoinTypes.Left">
	<summary>
     The result contains all rows of the left, parent table and only those rows of the other table which are related the rows of the left table
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Tools.Data.DataTables.JoinTypes">
	<summary>
     Table join types
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.JoinTables(System.Data.DataTable,System.Data.DataTable,CompuMaster.camm.WebManager.Tools.Data.DataTables.JoinTypes)">
	<summary>
     Execute a table join on two tables of the same dataset based on the first relation found
 </summary>
	<param name="leftParentTable"></param>
	<param name="rightChildTable"></param>
	<param name="joinType">Inner or left join</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.JoinTables(System.Data.DataTable,System.Data.DataTable,System.Data.DataRelation,CompuMaster.camm.WebManager.Tools.Data.DataTables.JoinTypes)">
	<summary>
     Execute a table join on two tables of the same dataset which have got a defined relation
 </summary>
	<param name="leftParentTable">The left or parent table</param>
	<param name="rightChildTable">The right or child table</param>
	<param name="relation">A data table relation which shall be used for the joining</param>
	<param name="joinType">Inner or left join</param>
	<remarks>
     The selected columns are: 
     <list>
			<item>all columns from the left parent table</item>
			<item>INNER JOIN: those columns from the right child table which are not member of the relation in charge</item>
			<item>LEFT JOIN: all columns from the right child table</item>
		</list>
	</remarks>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.JoinTables(System.Data.DataTable,System.Data.DataColumn[],System.Data.DataTable,System.Data.DataColumn[],CompuMaster.camm.WebManager.Tools.Data.DataTables.JoinTypes)">
	<summary>
     Execute a table join on two tables of the same dataset which have got a defined relation
 </summary>
	<param name="leftParentTable">The left or parent table</param>
	<param name="leftTableColumnsToCopy">An array of columns to copy from the left table</param>
	<param name="rightChildTable">The right or child table</param>
	<param name="rightTableColumnsToCopy">An array of columns to copy from the right table</param>
	<param name="joinType">Inner or left join</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.JoinTables(System.Data.DataTable,System.Int32[],System.Data.DataTable,System.Int32[],CompuMaster.camm.WebManager.Tools.Data.DataTables.JoinTypes)">
	<summary>
     Execute a table join on two tables of the same dataset which have got a defined relation
 </summary>
	<param name="leftParentTable">The left or parent table</param>
	<param name="indexesOfLeftTableColumnsToCopy">An array of column indexes to copy from the left table</param>
	<param name="rightChildTable">The right or child table</param>
	<param name="indexesOfRightTableColumnsToCopy">An array of column indexes to copy from the right table</param>
	<param name="joinType">Inner or left join</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.JoinTables(System.Data.DataTable,System.Int32[],System.Data.DataTable,System.Int32[],System.Data.DataRelation,CompuMaster.camm.WebManager.Tools.Data.DataTables.JoinTypes)">
	<summary>
     Execute a table join on two tables of the same dataset which have got a defined relation
 </summary>
	<param name="leftParentTable">The left or parent table</param>
	<param name="indexesOfLeftTableColumnsToCopy">An array of column indexes to copy from the left table</param>
	<param name="rightChildTable">The right or child table</param>
	<param name="indexesOfRightTableColumnsToCopy">An array of column indexes to copy from the right table</param>
	<param name="relation">A data table relation which shall be used for the joining</param>
	<param name="joinType">Inner or left join</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.CrossJoinTables(System.Data.DataTable,System.Int32[],System.Data.DataTable,System.Int32[])">
	<summary>
     Cross join of two tables
 </summary>
	<param name="leftTable">A first datatable</param>
	<param name="indexesOfLeftTableColumnsToCopy">An array of column indexes to copy from the left table</param>
	<param name="rightTable">A second datatable</param>
	<param name="indexesOfRightTableColumnsToCopy">An array of column indexes to copy from the right table</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.AddPrefixesToColumnNames(System.Data.DataTable,System.Int32[],System.String)">
	<summary>
     Add a prefix to the names of the columns
 </summary>
	<param name="dataTable"></param>
	<param name="columnIndexes"></param>
	<param name="prefix">e. g. "orders."</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.AddSuffixesToColumnNames(System.Data.DataTable,System.Int32[],System.String)">
	<summary>
     Add a suffix to the names of the columns
 </summary>
	<param name="dataTable"></param>
	<param name="columnIndexes"></param>
	<param name="suffix">e. g. "-orders"</param>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.LookupUnqiueColumnName(System.Data.DataTable,System.String)">
	<summary>
     Lookup a new unique column name for a data table
 </summary>
	<param name="dataTable">The data table which shall get a new data column</param>
	<param name="suggestedColumnName">A column name suggestion</param>
	<returns>The suggested column name as it is or modified column name to be unique</returns>
</member><member name="T:CompuMaster.camm.WebManager.Tools.Data.DataTables.ReArrangeDataColumnsException">
	<summary>
     An exception which gets thrown when converting data in the ReArrangeDataColumns methods
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ReArrangeDataColumns(System.Data.DataTable,System.String[])">
	<summary>
     Rearrange columns
 </summary>
	<param name="source">The source table with data</param>
	<param name="columnsToCopy">An array of column names which shall be copied in the specified order from the source table</param>
	<returns>A new and independent data table with copied data</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ReArrangeDataColumns(System.Data.DataTable,System.Data.DataColumn[])">
	<summary>
     Rearrange columns and also change their data types
 </summary>
	<param name="source">The source table with data</param>
	<param name="destinationColumnSet">An array of columns as they shall be inserted into the result</param>
	<returns>A new and independent data table with copied data</returns>
	<remarks>
     The copy process requires that the names of the destination columns can be found in the columns collection of the source table. 
 </remarks>
	<example>
		<code language="vb">
         ReArrangeDataColumns(source, New System.Data.DataColumn() {New DataColumn("column1Name", GetType(String)), New DataColumn("column2Name", GetType(Integer))})
     </code>
	</example>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.DataTables.ReArrangeDataColumns(System.Data.DataTable,System.Data.DataColumn[],System.Collections.ArrayList)">
	<summary>
     Rearrange columns and also change their data types
 </summary>
	<param name="source">The source table with data</param>
	<param name="destinationColumnSet">An array of columns as they shall be inserted into the result</param>
	<param name="ignoreConversionExceptionAndLogThemHere">In case of data conversion exceptions, log them here instead of throwing them immediately</param>
	<returns>A new and independent data table with copied data</returns>
	<remarks>
     The copy process requires that the names of the destination columns can be found in the columns collection of the source table. 
 </remarks>
	<example>
		<code language="vb">
         ReArrangeDataColumns(source, New System.Data.DataColumn() {New DataColumn("column1Name", GetType(String)), New DataColumn("column2Name", GetType(Integer))})
     </code>
	</example>
</member><member name="T:CompuMaster.camm.WebManager.Tools.Data.DataTables">
	<summary>
     Common DataTable operations
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.XlsReader.ReadDataTableFromXlsFile(System.String,System.String)">
	<summary>
     Read from an excel file
 </summary>
	<param name="path">The path of the .XLS file</param>
	<param name="sheetName">A name of a sheet where the read operations shall execute</param>
	<returns>A new and independent datatable with the content of the sheet</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.XlsReader.ReadDataTableFromXlsFile(System.String,System.String,System.String)">
	<summary>
     Read from an excel file
 </summary>
	<param name="path">The path of the .XLS file</param>
	<param name="sheetName">A name of a sheet where the read operations shall execute</param>
	<param name="querySql">A query SQL to filter the returned data, e. g. SELECT * FROM [sheetName$]</param>
	<returns>A new and independent datatable with the content of the sheet</returns>
</member><member name="T:CompuMaster.camm.WebManager.Tools.Data.XlsReader">
	<summary>
     Provides simplified read access to XLS files via MS OLEDB Jet Providers
 </summary>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Ldap.QueryUsers(System.String,System.String)">
	<summary>
     Returns different information on all the users matching the filter expression within the given domain as contents of a DataTable
 </summary>
	<remarks>
     The Table contains the following columns:
     - UserName      User's accountname
     - FirstName     First name
     - LastName      Last name
     - DiplayName    Diplayed name
     - Title         Position
     - EMail         E-Mail address
     - Phone         Phone number
     - MobilePhone   Cell / mobile phone number
     - VoIPPhone     VoIP phone number
     - Street        Street and house number
     - ZIP           Zip / postal code
     - City          City name
     - Country       Country name
     - Company       Company name
     - Department    Department name
     - Initials      The initials of the user

     Note that any field except "UserName" is optional.
     All fields are of type String.
     Each user account is represented by a DataRow.
 </remarks>
	<param name="domain">The domain from which to gather the information</param>
	<param name="SearchFilterExpression">The filter expression for specific selection purposes.
             For valid filter expressions see the documentation about
             System.DirectoryServices.DirectorySearcher.Filter</param>
	<returns>A DataTable containing the information, Nothing if an error occurs during execution</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Ldap.QueryUsersByAccountName(System.String,System.String)">
	<summary>
     Returns different information on all the users with the given account
     name within the given domain as contents of a DataTable
 </summary>
	<remarks>
     The Table contains the following columns:
     - UserName      User's accountname
     - FirstName     First name
     - LastName      Last name
     - DiplayName    Diplayed name
     - Title         Position
     - EMail         E-Mail address
     - Phone         Phone number
     - MobilePhone   Cell / mobile phone number
     - VoIPPhone     VoIP phone number
     - Street        Street and house number
     - ZIP           Zip / postal code
     - City          City name
     - Country       Country name
     - Company       Company name
     - Department    Department name
     - Initials      The initials of the user

     Note that any field except "UserName" is optional.
     All fields are of type String.
     Each user account is represented by a DataRow.
     
 </remarks>
	<param name="domain">The domain from which to gather the information</param>
	<param name="UserAccountName">The account name for which to search</param>
	<returns>A DataTable containing the information, Nothing if an error occurs during execution</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Ldap.QueryUsersByName(System.String,System.String,System.String)">
	<summary>
     Returns different information on all the users with the given first
     and / or last name within the given domain as contents of a DataTable
 </summary>
	<remarks>
     The Table contains the following columns:
     - UserName      User's accountname
     - FirstName     First name
     - LastName      Last name
     - DiplayName    Diplayed name
     - Title         Position
     - EMail         E-Mail address
     - Phone         Phone number
     - MobilePhone   Cell / mobile phone number
     - VoIPPhone     VoIP phone number
     - Street        Street and house number
     - ZIP           Zip / postal code
     - City          City name
     - Country       Country name
     - Company       Company name
     - Department    Department name
     - Initials      The initials of the user

     Note that any field except "UserName" is optional.
     All fields are of type String.
     Each user account is represented by a DataRow.
     
 </remarks>
	<param name="domain">The domain from which to gather the information</param>
	<param name="UserFirstName">The first name for which to search (may be empty or nothing if last name is given)</param>
	<param name="UserLastName">The last name for which to search (may be empty or nothing if first name is given)</param>
	<returns>A DataTable containing the information, Nothing if an error occurs during execution</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Ldap.Query(System.String,System.String)">
	<summary>
     Query the LDAP
 </summary>
	<param name="domain">The domain name which will be used as LDAP server name (to query the domain controller)</param>
	<param name="searchFilterExpression">A search expression to filter the results</param>
	<returns>A datatable containing all data as strings</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Ldap.QueryAllUsers(System.String)">
	<summary>
     Returns different information on all users within the given domain
     as contents of a DataTable
 </summary>
	<remarks>
     The Table contains the following columns:
     - UserName      User's accountname
     - FirstName     First name
     - LastName      Last name
     - DiplayName    Diplayed name
     - Title         Position
     - EMail         E-Mail address
     - Phone         Phone number
     - MobilePhone   Cell / mobile phone number
     - VoIPPhone     VoIP phone number
     - Street        Street and house number
     - ZIP           Zip / postal code
     - City          City name
     - Country       Country name
     - Company       Company name
     - Department    Department name
     - Initials      The initials of the user

     Note that any field except "UserName" is optional.
     All fields are of type String.
     Each user account is represented by a DataRow.
     
 </remarks>
	<param name="domain">The domain from which to gather the information</param>
	<returns>A DataTable containing the information, Nothing if an error occurs during execution</returns>
</member><member name="M:CompuMaster.camm.WebManager.Tools.Data.Ldap.QueryUsers_CreateInfoTable(System.String)">
	<summary>
     Creates a DataTable with all the required columns for containing
     user information
 </summary>
	<param name="DomName">The domain name to be included in the table's title</param>
	<returns>An empty DataTable containing the prepared columns</returns>
</member><member name="T:CompuMaster.camm.WebManager.Tools.Data.Ldap">
	<summary>
     LDAP access to retrieve data
 </summary>
</member><member name="T:CompuMaster.camm.WebManager.Setup.AssemblyVersion">
	<summary>
 Required class because code security in ASP.NET 2 environments denys the access to the file version API of windows and the GetAssemblyFileVersion method would fail with a SecurityException
 </summary>
</member>
</members>
</doc>